# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Various
# This file is distributed under the same license as the Elgg package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Elgg 1.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-14 10:28+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../tutorials/blog.rst:2
# 79c6d5ab2fe94fdd984673e1d7bd7993
msgid "Building a Blog Plugin"
msgstr ""

#: ../../tutorials/blog.rst:4
# 664d53d8bf53441987bdd1c7b0eaafdb
msgid "Build a simple blogging plugin using Elgg."
msgstr ""

#: ../../tutorials/blog.rst:6
# bf8d19e0817a4df0810a3a297fcd8a79
msgid "This duplicates features in the bundled blog plugin, so be sure to disable that while working on your own version."
msgstr ""

#: ../../tutorials/blog.rst:0
#: ../../tutorials/widget.rst:0
# f21330ee431b4b94bf0faf6eccf5fcbc
# d82640f8cbd44c1b850caf4a2124994d
msgid "Contents"
msgstr ""

#: ../../tutorials/blog.rst:14
# 32478a12412540528cbad511b5283733
msgid "Create the plugin skeleton"
msgstr ""

#: ../../tutorials/blog.rst:16
# fff62bb90f274f34adc51ec85c165bbc
msgid "The name of the directory under \"mod\" becomes the id of your plugin::"
msgstr ""

#: ../../tutorials/blog.rst:22
# 22a2fc2d714b4183b43f832f3c7309e6
msgid "You'll need to add a manifest file in ``/mod/my_blog/manifest.xml``. This file stores basic information about the plugin. See :doc:`/guides/plugins` for the template. You can also just copy the manifest file from another plugin and then change the values to fit your new plugin. Be sure to change the author and website, and remove the “bundled” category!"
msgstr ""

#: ../../tutorials/blog.rst:28
# 5ca91afe45e147259176224cbe1f3d14
msgid "Create a page for composing the blogs"
msgstr ""

#: ../../tutorials/blog.rst:30
# 820c623221294434ac9f0b961114870d
msgid "Create the file ``add.php`` in ``/mod/my_blog/pages/my_blog/``."
msgstr ""

#: ../../tutorials/blog.rst:61
# 1e70e8308fd9482d855fd500ea507502
msgid "Create the form for creating a new my\\_blog post"
msgstr ""

#: ../../tutorials/blog.rst:63
# 25a881adf2a24cffa830f888d47c0910
msgid "Create a file at ``/mod/my_blog/views/default/forms/my_blog/save.php`` that contains the form body. This corresponds to view that is called above: ``elgg_view_form(\"my_blog/save\")``."
msgstr ""

#: ../../tutorials/blog.rst:67
# 86913b40c12f4be098509940d839e4d4
msgid "The form should have input fields for the title, body and tags. Because you used ``elgg_view_form()``, you do not need to include form tag markup. The view will be automatically wrapped with:"
msgstr ""

#: ../../tutorials/blog.rst:71
# 68d7aa16323d4e3f82b242de806dc9bd
msgid "a ``<form>`` tag and the necessary attributes"
msgstr ""

#: ../../tutorials/blog.rst:72
# b369cc6eea774cad9beba79e08cd938c
msgid "anti-csrf tokens"
msgstr ""

#: ../../tutorials/blog.rst:74
# 75eb553a84b2497892ebc78056fad5fb
msgid "The form's action will be ``\"<?php echo elgg_get_site_url() ?>action/my_blog/save\"``, which we will create in a moment. Here is the content of ``/mod/my_blog/views/default/forms/my_blog/save.php``:"
msgstr ""

#: ../../tutorials/blog.rst:100
# 8d99e07377a148caa6c6736dcdc40002
msgid "Notice how the form is calling input views like ``input/longtext``. These are built into Elgg and make it easy to add form components. You can see a complete list of input views in the ``/views/default/input/`` directory."
msgstr ""

#: ../../tutorials/blog.rst:106
# 5d5fe4d9348d4516adb00e39fee861bd
msgid "The above code is not accessibility-friendly."
msgstr ""

#: ../../tutorials/blog.rst:109
# 6831106eef6848b09b0ea71d57e75e70
msgid "The action file"
msgstr ""

#: ../../tutorials/blog.rst:111
# 003643bbe1aa4565a065ceb08b5feb17
msgid "Create the file ``/mod/my_blog/actions/my_blog/save.php``. This will save the blog post to the database."
msgstr ""

#: ../../tutorials/blog.rst:150
# be0c89c97f414f7288f1451e4d3a8198
msgid "A few fields are built into Elgg objects. Title and description are two of these. It makes sense to use description to contain the my\\_blog text. Every entity can have a subtype and in this we are using ``\"my_blog\"``. The tags are stored as metadata."
msgstr ""

#: ../../tutorials/blog.rst:155
# 379cd3e6966d439dab761a8297327449
msgid "Every object in Elgg has a built-in URL automatically, although you can override this if you wish. The ``getURL()`` method is called to get that unique URL."
msgstr ""

#: ../../tutorials/blog.rst:160
# 628667147e1f45fbb4ab99d17ea7ce2b
msgid "The object view"
msgstr ""

#: ../../tutorials/blog.rst:162
# 31c364c64fe64aa6bb683502d12b56b1
msgid "Elgg will automatically call the ``object/my_blog`` view to view the my\\_blog post so we need to create the object view."
msgstr ""

#: ../../tutorials/blog.rst:165
# faab8e6c4cc04feeaa5499b7631a39d3
msgid "Objects in Elgg are a subclass of something called an “entity”. Users, sites, and groups are also subclasses of entity. All entities can (and should) have a subtype, which allows granular control for listing and displaying. Here, we have used the subtype \"``my_blog``\\ \" to identify a my\\_blog post, but any alphanumeric string can be a valid subtype. When picking subtypes, be sure to pick ones that make sense for your plugin."
msgstr ""

#: ../../tutorials/blog.rst:173
# 72021a52f45646c6aded762783bae410
msgid "In ``/mod/my_blog/views/default/``, create a folder ``/object/`` and then create a file ``my_blog.php`` in it."
msgstr ""

#: ../../tutorials/blog.rst:176
# 8b64bd1cac5443c58be84cd2a6cfbb56
msgid "Each my\\_blog post will be passed to this PHP file as ``$vars['entity']``. (``$vars`` is an array used in the views system to pass variables to a view.) The content of ``object/my_blog.php`` can just be something like:"
msgstr ""

#: ../../tutorials/blog.rst:189
# 8ce59f3722994ad0a1b87ce17a31ecca
msgid "The last line takes the tags on the my\\_blog post and automatically displays them as a series of clickable links. Search is handled automatically."
msgstr ""

#: ../../tutorials/blog.rst:193
# c4ec02d8221e4d71bc9555855b21a0e9
msgid "(If you're wondering about the '``default``\\ ' in ``/views/default/``, you can create alternative views. RSS, OpenDD, FOAF, mobile and others are all valid view types.)"
msgstr ""

#: ../../tutorials/blog.rst:198
# c799552824ae4c8690d45fa1ffbe675d
msgid "Plugin start.php"
msgstr ""

#: ../../tutorials/blog.rst:200
# fcd4f49446154781854dafeb4a0f026d
msgid "Every plugin has a ``start.php`` that initializes it. For this example, we just need to register the action file we created earlier: Also see a related guide about :doc:`/guides/actions`."
msgstr ""

#: ../../tutorials/blog.rst:210
# 5416b0283016489890537e8b7cb69a01
msgid "The action will now be available as ``/action/my_blog/save``. By default, all actions are available only to logged in users. If you want to make an action available to only admins or open it up to unauthenticated users, you can pass 'admin' or 'public' as the third parameter of ``elgg_register_action()``, respectively."
msgstr ""

#: ../../tutorials/blog.rst:216
#: ../../tutorials/hello_world.rst:72
# 5ac4fddb4ee44295a444d87482fd18c3
# aed2891159c745f089e3577ab622e431
msgid "Registering a page handler"
msgstr ""

#: ../../tutorials/blog.rst:218
# 7d94a73ae24d42f2a998be846c9c067f
msgid "In order to be able to serve the page that generates the form, you'll need to register a page handler. Add the following to your start.php:"
msgstr ""

#: ../../tutorials/blog.rst:233
# 6855e83d4148417a93a305d2080db584
msgid "Page handling functions need to return ``true`` or ``false``. ``true`` means the page exists and has been handled by the page handler. ``false`` means that the page does not exist and the user will be forwarded to the site's 404 page (requested page does not exist or not found). In this particular example, the URL must contain ``/my_blog/add`` for the user to view a page with a form, otherwise the user will see a 404 page."
msgstr ""

#: ../../tutorials/blog.rst:242
# e97c3fb9bc9f4158be28b4fc61481ec6
msgid "Trying it out"
msgstr ""

#: ../../tutorials/blog.rst:244
# d679cc26407b4f4dbee29966a843a3fb
msgid "If you have not enabled the plugin yet, you will need to go to Administration => Configure => Plugins => Advanced. Scroll to the bottom until you see your plugin. Click the Enable button."
msgstr ""

#: ../../tutorials/blog.rst:248
# fabcdb36882946d5bfd1b6c6b815a722
msgid "The page to create a new my\\_blog post is accessible at http://yoursite/my_blog/add. Try it out."
msgstr ""

#: ../../tutorials/blog.rst:252
# 406a4b3ac47048a3b69d9d2bd3aded69
msgid "Displaying list of my\\_blogs"
msgstr ""

#: ../../tutorials/blog.rst:254
# 374e95aa420f467d89866752d91f1d02
msgid "Let's also create a page that lists my\\_blog entries that have been created."
msgstr ""

#: ../../tutorials/blog.rst:256
# c72042fa0b3a4dcbb9c9e966590b9360
msgid "Create ``/mod/my_blog/pages/my_blog/all.php``."
msgstr ""

#: ../../tutorials/blog.rst:258
# 1f39e4266032472aa6e3defce4369882
msgid "To grab the latest my\\_blog posts, we'll use ``elgg_list_entities``. Note that this function returns only the posts that the user can see, so access restrictions are handled transparently:"
msgstr ""

#: ../../tutorials/blog.rst:269
# c892cbdfce904fce824165a22ebca751
msgid "The function \\`elgg\\_list\\_entities\\` (and its cousins) also transparently handle pagination, and even create an RSS feeds for your my\\_blogs if you have defined these views."
msgstr ""

#: ../../tutorials/blog.rst:273
# ca63cf15cf9c41f9a9d36ba6c6adfcc4
msgid "Finally, we'll draw the page:"
msgstr ""

#: ../../tutorials/blog.rst:281
# 5a010e84e4274ccbb7bc1ffb06fce36f
msgid "We will then need to modify our my\\_blog page handler to grab the new page when the URL is set to ``/my_blog/all``. So, your new ``my_blog_page_handler()`` function in start.php should look like:"
msgstr ""

#: ../../tutorials/blog.rst:302
# 5b14c004d7024de4a15248501f874056
msgid "Now, if the URL contains just ``/my_blog`` or ``/my_blog/all``, the user will see an \"All Site Blogs\" page."
msgstr ""

#: ../../tutorials/blog.rst:306
# a58be59be30b4fffb2f65641dd1b2fbe
msgid "A user's blog page"
msgstr ""

#: ../../tutorials/blog.rst:308
# c16e1afdd3304b0a9166b5a9b1d034ab
msgid "If we grab the Global Unique IDentifier (GUID) of the logged in user, we can limit the my\\_blog posts to those posted by specifying the owner\\_guid argument in the list function above."
msgstr ""

#: ../../tutorials/blog.rst:322
# 1ec8d605ff2a48bd928843a2d70f4ffa
msgid "The end"
msgstr ""

#: ../../tutorials/blog.rst:324
# 22c49b3f69fa44a8b87369384482abd1
msgid "There's much more that could be done for this plugin, but hopefully this gives you a good idea of how to get started with your own."
msgstr ""

#: ../../tutorials/hello_world.rst:2
# 76a9b3fad9fb41a3a1635898556e6e2e
msgid "Hello world"
msgstr ""

#: ../../tutorials/hello_world.rst:4
# 38ccb2d12592437e9ec50d7f4f6bda3e
msgid "This tutorial shows you how to build a simple plugin that adds a new page and prints the text \"Hello world\" on it."
msgstr ""

#: ../../tutorials/hello_world.rst:7
# bbf3a5530de746f581fca76d2af4d3e4
msgid "In this tutorial we will use the address ``http://www.mysite.com/`` as an example. While developing the plugin you should use the address of your own site instead of the example address."
msgstr ""

#: ../../tutorials/hello_world.rst:12
# 546a614b7680445e9700f701a9c66a10
msgid "Required files"
msgstr ""

#: ../../tutorials/hello_world.rst:13
# 1dfa013a05904389b6edca6d0cad5140
msgid "First of all you need a directory that will hold all the files required by the plugin. Go to the ``mod`` directory of your Elgg site and create there a directory with the name ``hello_world``."
msgstr ""

#: ../../tutorials/hello_world.rst:19
# c961532f995b48ffbe2bd9183faf4e33
msgid "Go to the ``hello_world`` directory and create these two files inside it:"
msgstr ""

#: ../../tutorials/hello_world.rst:18
#: ../../tutorials/indexpage.rst:7
# 15fc7d33582349beacf65c963bf01be5
# e2b4a77a297d4c4ebc2c9a134ea58e5d
msgid "start.php"
msgstr ""

#: ../../tutorials/hello_world.rst:19
# e100adce41644fb9a98c822978731777
msgid "manifest.xml"
msgstr ""

#: ../../tutorials/hello_world.rst:21
# 901dbb64d6da4dc39a91b4f1bb2de851
msgid "Copy this to the ``manifest.xml`` file:"
msgstr ""

#: ../../tutorials/hello_world.rst:39
# 28126068d001490382b3b8894bb46556
msgid "Add your name to the ``<author></author>`` element."
msgstr ""

#: ../../tutorials/hello_world.rst:41
# c4f1a46f5ccc4b1c9fd8ba481e58e438
msgid "The plugin has now the minimum requirements for your site to recognize it. Log in to your site as an administrator and access the plugins page at the administration panel. By default the plugin is at the bottom of the plugins list. Click the \"Activate\" button to start it."
msgstr ""

#: ../../tutorials/hello_world.rst:50
# 9f1f4856552b41f2b3ae1b1c278398ad
msgid "The Hello world plugin has appeared to the bottom of the plugin list"
msgstr ""

#: ../../tutorials/hello_world.rst:53
# 14e4640b0961496ca48433e6828db324
msgid "Initializing the plugin"
msgstr ""

#: ../../tutorials/hello_world.rst:55
# 47eae58967e3404fadbaa00e8f3dcbcc
msgid "The next step is to add some actual features. Open the ``start.php`` and copy this to it:"
msgstr ""

#: ../../tutorials/hello_world.rst:68
# 002943508912422ab045073c8721d659
msgid "This piece of code tells Elgg that it should call the function ``hello_world_init()`` when the Elgg core system is initiated."
msgstr ""

#: ../../tutorials/hello_world.rst:74
# 672948bed78949d292cc6a30cd5af5e6
msgid "The next step is to register a page handler which has the purpose of handling request that users make to the URL http://www.mysite.com/hello/."
msgstr ""

#: ../../tutorials/hello_world.rst:77
# 84db43241a584e02813d1537faa5da3b
msgid "Update the ``start.php`` to look like this:"
msgstr ""

#: ../../tutorials/hello_world.rst:101
# 784c28989aac41a3ad188006827cbfb4
msgid "The call to ``elgg_register_page_handler()`` tells Elgg that it should call the function ``hello_world_page_handler()`` when user goes to your site and has \"hello\" at the end of the URL."
msgstr ""

#: ../../tutorials/hello_world.rst:105
# 73dd6fb9538d44be9da0a651f7676241
msgid "The ``hello_world_page_handler()`` makes it possible for the users to access the actual page. Inside the function we first give an array of parameters to the ``elgg_view_layout()`` function."
msgstr ""

#: ../../tutorials/hello_world.rst:112
# 62c46447b2f840ddac4f70b0d51c8b2f
msgid "The parameters include:"
msgstr ""

#: ../../tutorials/hello_world.rst:110
# 2266aa52f7e34d1095d4a2b56375178b
msgid "The title of the page"
msgstr ""

#: ../../tutorials/hello_world.rst:111
# 2401174c2b814ff9a4926c0cd69b10c2
msgid "The contents of the page"
msgstr ""

#: ../../tutorials/hello_world.rst:112
# 102186b02d3040fa87f43acefb5a1f32
msgid "Filter which is left empty because there's currently nothing to filter"
msgstr ""

#: ../../tutorials/hello_world.rst:114
# e05160f982ab457fb4568df1a922b0f9
msgid "This creates the basic layout for the page. The layout is then run through ``elgg_view_page()`` which assembles and outputs the full page."
msgstr ""

#: ../../tutorials/hello_world.rst:117
# cf00db1fca614011a257fba4c79a5b31
msgid "You can now go to the address http://www.mysite.com/hello/ and you should see the page."
msgstr ""

#: ../../tutorials/hello_world.rst:123
# 38f650694af34b9cb7d155955264997b
msgid "Elgg is now routing the URL http://www.mysite.com/hello/ to the page you created."
msgstr ""

#: ../../tutorials/index.rst:2
# f5e3b9a085344a8990c055a255d0006d
msgid "Plugin Tutorials"
msgstr ""

#: ../../tutorials/index.rst:4
# 4715d3471c6b43d193d6efda70eb49c8
msgid "Walk through all the required steps in order to create your own plugins."
msgstr ""

#: ../../tutorials/index.rst:6
# 643cd19aef214cc589849bf7aa9b818c
msgid "The instructions are detailed enough that you don't need much previous experience on plugin development."
msgstr ""

#: ../../tutorials/indexpage.rst:2
# cfe51c50eae94f04957ca8205855a0ff
msgid "Customizing the Home Page"
msgstr ""

#: ../../tutorials/indexpage.rst:4
# 8d08911ef3174406ac7e6f94cbb99ce3
msgid "Overwrite the default index page on your Elgg install."
msgstr ""

#: ../../tutorials/indexpage.rst:9
# 5ae9feee73984a56bf053a6b5233fdc6
msgid "Register a function for the plugin hook called ``index, system`` that returns ``true``. This tells Elgg to assume that another front page has been drawn so it doesn't display the default page."
msgstr ""

#: ../../tutorials/indexpage.rst:12
# 594df2808a3548c5af1d8138dedc5e5f
msgid "Inside start.php you will need something like the following:"
msgstr ""

#: ../../tutorials/indexpage.rst:31
# 6ee8031df14c439e8c6a2dc9fffca3cb
msgid "pages/index.php"
msgstr ""

#: ../../tutorials/indexpage.rst:33
# beafa58e30ab42bb97f1f82885dea3b6
msgid "Then implement the page handler script (/pluginname/pages/index.php) to generate the desired output. Anything output from this script will become your new home page."
msgstr ""

#: ../../tutorials/widget.rst:2
# 5d9b04d207fb4138b15d17d540125d3f
msgid "Basic Widget"
msgstr ""

#: ../../tutorials/widget.rst:4
# 3292fd993e024cc2b97323fc4d7b1736
msgid "Create a widget that will display “Hello, World!” and optionally any text the user wants."
msgstr ""

#: ../../tutorials/widget.rst:6
# ee36ff53cbef406e8bb70bef71b1a23e
msgid "In Elgg, widgets are those components that you can drag onto your profile or admin dashboard."
msgstr ""

#: ../../tutorials/widget.rst:8
# d180d48f28db4f12acbb91dda522fc44
msgid "This tutorial assumes you are familiar with basic Elgg concepts such as:"
msgstr ""

#: ../../tutorials/widget.rst:10
# ac474b5fb44c413f8761b90d6619a4a8
msgid ":doc:`/guides/views`"
msgstr ""

#: ../../tutorials/widget.rst:11
# 2d8f216afafe490492e9ed4ba4ef9de9
msgid ":doc:`/admin/plugins`"
msgstr ""

#: ../../tutorials/widget.rst:13
# e7411d3f0d7c486dad4c81c3e982d336
msgid "You should review those if you get confused along the way."
msgstr ""

#: ../../tutorials/widget.rst:20
# 37f9d543be8f42d5b55777d739c0b2c5
msgid "Registering your plugin"
msgstr ""

#: ../../tutorials/widget.rst:22
# 0ab75837d58d4d7ca587b5b2853bb4f9
msgid "Plugins are always placed in the ``/mod`` directory. Create a subdirectory there called ``hello``. This will be the name of your plugin and will show up in the Plugins Administration section of Elgg by this name."
msgstr ""

#: ../../tutorials/widget.rst:27
# e1e57685233049bbbc2851b7e501c0b7
msgid "In ``/mod/hello``, create an empty file called ``start.php``. If this file exists, Elgg will load your plugin. Otherwise, you will see a misconfigured plugin error. Go to the admin section of your Elgg install and enable your plugin. Click on the “more info” link under your plugin name. You will notice that nothing happens."
msgstr ""

#: ../../tutorials/widget.rst:34
# 3870389188bd46a7b69339708e8650b4
msgid "Copy the ``manifest.xml`` file from one of the plugins in your elgg install into ``/mod/hello``."
msgstr ""

#: ../../tutorials/widget.rst:35
# 73a124e3ed7a48db8c538e1b7c4c35aa
msgid "Update its values so you are listed as the author and change the description to describe this new plugin."
msgstr ""

#: ../../tutorials/widget.rst:36
# ffc97498d2ad4805be7499e1574bbace
msgid "Reload the Tools Administration page in your browser and check “more info” again."
msgstr ""

#: ../../tutorials/widget.rst:37
# f28be74971934beaa1e21ba9aaa6f7fb
msgid "It will now display the information that you've entered."
msgstr ""

#: ../../tutorials/widget.rst:40
# cbbe944947c74621bd219926ebe41cb4
msgid "Adding the widget view code"
msgstr ""

#: ../../tutorials/widget.rst:42
# 9a262b4ca8a046d4a2b1bcb509e2e30f
msgid "Elgg automatically scans particular directories under plugins looking for particular files. :doc:`/guides/views` make it easy to add your display code or do other things like override default Elgg behavior. For now, we will just be adding the view code for your widget. Create a file at ``/mod/hello/views/default/widgets/helloworld/content.php``. “helloworld” will be the name of your widget within the hello plugin. In this file add the code:"
msgstr ""

#: ../../tutorials/widget.rst:55
# 99098744c35c4500a31ca3ac260b6c0c
msgid "This will add these words to the widget canvas when it is drawn. Elgg takes care of loading the widget."
msgstr ""

#: ../../tutorials/widget.rst:59
# 1a5b8bf843484a05a2a8ce5cc18e66ae
msgid "Registering your widget"
msgstr ""

#: ../../tutorials/widget.rst:61
# 48f86eda213c43ef848dbe54c381fb53
msgid "Elgg needs to be told explicitly that the plugin contains a widget so that it will scan the widget views directory. This is done by calling the elgg\\_register\\_widget\\_type() function. Edit ``/mod/hello/start.php``. In it add these lines:"
msgstr ""

#: ../../tutorials/widget.rst:76
# 7d506f4357e7433dbc8e3d01af3542db
msgid "Now go to your profile page using a web browser and add the “hello, world” widget. It should display “Hello, world!”."
msgstr ""

#: ../../tutorials/widget.rst:81
# b13d642af6474f868a806df4d213b2d8
msgid "For real widgets, it is always a good idea to support :doc:`/guides/i18n`."
msgstr ""

#: ../../tutorials/widget.rst:84
# 58e5c1566dda44918839fc83e55b18b6
msgid "Allow user customization"
msgstr ""

#: ../../tutorials/widget.rst:86
# 16d718c225f34d72a966ae0daba3ef04
msgid "Click on the edit link on the toolbar of the widget that you've created. You will notice that the only control it gives you by default is over access (over who can see the widget)."
msgstr ""

#: ../../tutorials/widget.rst:90
# 76aedb73d49e4fdb8baa5fa0605f8391
msgid "Suppose you want to allow the user to control what greeting is displayed in the widget. Just as Elgg automatically loads ``content.php`` when viewing a widget, it loads ``edit.php`` when a user attempts to edit a widget. In ``/mod/hello/views/default/widgets/helloworld/``, create a file named ``edit.php``. In this file, add the following code:"
msgstr ""

#: ../../tutorials/widget.rst:113
# f36b448d17e84730aa58f359eefa1cd2
msgid "Notice the relationship between the values passed to the 'name' and the 'value' fields of input/text. The name of the input text box is ``params[message]`` because Elgg will automatically handle widget variables put in the array ``params``. The actual php variable name will be ``message``. If we wanted to use the field ``greeting`` instead of ``message`` we would pass the values ``params[greeting]`` and ``$widget->greeting`` respectively."
msgstr ""

#: ../../tutorials/widget.rst:121
# 4673684722b64a4596ad05eb002ecba4
msgid "The reason we set the 'value' option of the array is so that the edit view remembers what the user typed in the previous time he changed the value of his message text."
msgstr ""

#: ../../tutorials/widget.rst:125
# ad6b2188132c4cae97c73853d6942a48
msgid "Now to display the user's message we need to modify content.php to use this *message* variable. Edit content.php and change it to:"
msgstr ""

#: ../../tutorials/widget.rst:137
# 761be9ba6f984ba8902f7b7f806d72ca
msgid "You should now be able to enter a message in the text box and see it appear in the widget."
msgstr ""

#: ../../tutorials/wysiwyg.rst:2
# d975c2dad4a84c0bb9fa85a54e77a799
msgid "Integrating a Rich Text Editor"
msgstr ""

#: ../../tutorials/wysiwyg.rst:4
# a422143acf8f4fc3bf2d33d4e0e8b4e1
msgid "Build your own wysiwyg plugin."
msgstr ""

#: ../../tutorials/wysiwyg.rst:6
# 8b75002a294b44e8a054701b447b3ac3
msgid "Elgg is bundled with a plugin for CKEditor_, and previously shipped with TinyMCE_ support. However, if you have a wysiwyg that you prefer, you could use this tutorial to help you build your own."
msgstr ""

#: ../../tutorials/wysiwyg.rst:12
# 068316ff8bc74b0eb0f9a1731047230e
msgid "All forms in Elgg should try to use the provided input views located in ``views/default/input``. If these views are used, then it is simple for plugin authors to replace a view, in this case longtext.php, with their wysiwyg."
msgstr ""

#: ../../tutorials/wysiwyg.rst:17
# a35ae529ad9b4e658cd15aaccdcf757f
msgid "Create your plugin skeleton"
msgstr ""

#: ../../tutorials/wysiwyg.rst:19
# 9d76f5c1fd9f4ee9838eb01b7f92685f
msgid "You will need to create your plugin and give it a start.php file where the plugin gets initialized, as well as a manifest.xml file to tell the Elgg engine about your plugin."
msgstr ""

#: ../../tutorials/wysiwyg.rst:22
# e197f51817e94a73a8aba5d3fafe9be4
msgid "Read more in the guide about :doc:`/guides/plugins`."
msgstr ""

#: ../../tutorials/wysiwyg.rst:25
# 0d87112af32048eb982be7a41df28d04
msgid "Add the WYSIWYG library code"
msgstr ""

#: ../../tutorials/wysiwyg.rst:27
# f4d354b87e154b9daa99424e15705b5d
msgid "Now you need to upload TinyMCE into a directory in your plugin. We strongly encourage you to put third party libraries in a “vendors” directory, as that is standard practice in Elgg plugins and will make your plugin much more approachable by other developers::"
msgstr ""

#: ../../tutorials/wysiwyg.rst:35
# f012fdb90b7c401d8e699e1b9ef82e6c
msgid "Tell Elgg when and how to load TinyMCE"
msgstr ""

#: ../../tutorials/wysiwyg.rst:37
# cac9a3d853974aa7ba8b61b3fc079d35
msgid "Now that you have:"
msgstr ""

#: ../../tutorials/wysiwyg.rst:39
# ea65037c22074c04a2ccb956e3161fe7
msgid "created your start file"
msgstr ""

#: ../../tutorials/wysiwyg.rst:40
# ba6a679336ef4cc3b7980cc38994bbcd
msgid "intialized the plugin"
msgstr ""

#: ../../tutorials/wysiwyg.rst:41
# 80ec9cad26254839bf53f5c01ce3596c
msgid "uploaded the wysiwyg code"
msgstr ""

#: ../../tutorials/wysiwyg.rst:43
# 5e4a8b47f410407a882ed23093465a9a
msgid "It is time to tell Elgg how to apply TinyMCE to longtext fields."
msgstr ""

#: ../../tutorials/wysiwyg.rst:45
# 1fd55cfafcc94a06b1219b59183ae10f
msgid "We're going to do that by extending the input/longtext view and including some javascript. Create a view tinymce/longtext and add the following code:"
msgstr ""

#: ../../tutorials/wysiwyg.rst:81
# da9993b781ea4147893cf04fe26c1677
msgid "Then, in your plugin's init function, extend the input/longtext view"
msgstr ""

#: ../../tutorials/wysiwyg.rst:89
# ba8b23964d2540f4a4e52ddfe05c428a
msgid "That's it! Now every time someone uses input/longtext, TinyMCE will be loaded and applied to that textarea."
msgstr ""

