# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Various
# This file is distributed under the same license as the Elgg package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Elgg 1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-06-14 22:15-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../design/actions.rst:2
# 05a8f498cec44e74b2b5045e30121b2e
msgid "Actions"
msgstr ""

#: ../../design/actions.rst:4
# 584d42db68374011bcf85655b62ce01b
msgid "Actions are the primary way users interact with an Elgg site."
msgstr ""

#: ../../design/actions.rst:10
#: ../../design/amd.rst:8
#: ../../design/database.rst:11
#: ../../design/events.rst:9
# d3585cf2613940a3854fb18632fa8c7b
# a1ea5c2215424cfebf8563e65f993dcc
# 3a42ced5b02844d6a0eeba5ebc54255f
# f118857ca3f2464ba72b8c999ddbc54d
msgid "Overview"
msgstr ""

#: ../../design/actions.rst:12
# 0405d23abacc4e2398864003111ca3eb
msgid "An action in Elgg is the code that runs to make changes to the database when a user does something. For example, logging in, posting a comment, and making a blog post are actions. The action script processes input, makes the appropriate modifications to the database, and provides feedback to the user about the action."
msgstr ""

#: ../../design/actions.rst:15
# 3783d63e72ba4f72a6219c71bf082326
msgid "Action Handler"
msgstr ""

#: ../../design/actions.rst:17
# 5d84b7da40694c3aa7e37bc66ec89893
msgid "Actions are registered during the boot process by calling ``elgg_register_action()``. All actions URLs start with ``action/`` and are served by Elgg's front end controller through the action service. This approach is different from traditional PHP applications that send information to a specific file. The action service performs :doc:`CSRF security checks </design/security>`, and calls the registered action script file, then optionally forwards the user to a new page. By using the action service instead of a single script file, Elgg automatically provides increased security and extensibility."
msgstr ""

#: ../../design/actions.rst:19
# 1ffc386cee6e40c0963965ca7d0cbe41
msgid "In Elgg 1.8 and before, actions were handled by an action handler script in ```engine/handlers/action_handler.php``. This required specific rewrite rules for URLs beginning with ``/action/``."
msgstr ""

#: ../../design/actions.rst:21
# 29a5786a2c7e403199b9ff6072bcbaef
msgid "See :doc:`/guides/actions` for details on how to register and construct an action. To look at the core actions, check out the directory /actions."
msgstr ""

#: ../../design/amd.rst:2
# fe239c1670a7484eb5d5e19556f4e5bf
msgid "AMD"
msgstr ""

#: ../../design/amd.rst:10
# b1a0251cfc034f1c90112176bdc1d9e4
msgid "There are two JavaScript system in Elgg: the deprecated 1.8 system, and the newer `AMD (Asynchronous Module Definition) <http://requirejs.org/docs/whyamd.html>`_ compatible system introduced in 1.9."
msgstr ""

#: ../../design/amd.rst:13
# faceb9bc7b854835b6996331cacbcbb4
msgid "This discusses the benefits of using AMD in Elgg."
msgstr ""

#: ../../design/amd.rst:16
# 793add44ee6b498cbd9b09640e2b1f68
msgid "Why AMD?"
msgstr ""

#: ../../design/amd.rst:18
# 636ffee488364ab995b143f48841e3c6
msgid "We have been working hard to make Elgg's JavaScript more maintainable and useful. We made some strides in 1.8 with the introduction of the \"``elgg``\" JavaScript object and library, but have quickly realized the approach we were taking was not scalable."
msgstr ""

#: ../../design/amd.rst:22
# 68baa30fe627426cb300acb35399058e
msgid "The size of `JS on the web is growing <http://httparchive.org/trends.php?s=All&minlabel=Feb+11+2011&maxlabel=Feb+1+2013#bytesJS&reqJS>`_ quickly, and JS in Elgg is growing too. We want Elgg to be able to offer a solution that makes JS development as productive and maintainable as possible going forward."
msgstr ""

#: ../../design/amd.rst:27
# 355d32f718454f6780cea407fc5781bc
msgid "The `reasons to choose AMD <http://requirejs.org/docs/whyamd.html>`_ are plenteous and well-documented. Let's highlight just a few of the most relevant reasons as they relate to Elgg specifically."
msgstr ""

#: ../../design/amd.rst:32
# 0999ecb61e864607a1d6a1a8cad6e1c8
msgid "1. Simplified dependency management"
msgstr ""

#: ../../design/amd.rst:33
# 2d4064e3e6c44beab672b5d80bc95034
msgid "AMD modules load asynchronously and execute as soon as their dependencies are available, so this eliminates the need to specify \"priority\" and \"location\" when registering JS libs in Elgg. Also, you don't need to worry about explicitly loading a module's dependencies in PHP. The AMD loader (RequireJS in this case) takes care of all that hassle for you. It's also possible have `text dependencies <http://requirejs.org/docs/api.html#text>`_ with the RequireJS text plugin, so client-side templating should be a breeze."
msgstr ""

#: ../../design/amd.rst:41
# 9074f300d0bd4e008325df0454ded440
msgid "2. AMD works in all browsers. Today."
msgstr ""

#: ../../design/amd.rst:42
# 28b619bb4d524cecb5f5205f8a1544be
msgid "Elgg developers are already writing lots of JavaScript. We know you want to write more. We cannot accept waiting 5-10 years for a native JS modules solution to be available in all browsers before we can organize our JavaScript in a maintainable way."
msgstr ""

#: ../../design/amd.rst:47
# b46c9db0dd1e435eb269c5a8f3ca944d
msgid "3. You do not need a build step to develop in AMD."
msgstr ""

#: ../../design/amd.rst:48
# 08bff820b3ab4a5aa19b48d6a2f8ebef
msgid "We like the edit-refresh cycle of web development. We wanted to make sure everyone developing in Elgg could continue experiencing that joy. Synchronous module formats like Closure or CommonJS just weren't an option for us. But even though AMD doesn't require a build step, *it is still very build-friendly*. Because of the ``define()`` wrapper, it's possible to concatenate multiple modules into a single file and ship them all at once in a production environment. [#]_"
msgstr ""

#: ../../design/amd.rst:54
# 8676560b91584414adcfcc1c0e3eda4e
msgid "AMD is a battle-tested and well thought out module loading system for the web today. We're very thankful for the work that has gone into it, and are excited to offer it as the standard solution for JavaScript development in Elgg starting with Elgg 1.9."
msgstr ""

#: ../../design/amd.rst:58
# ba97cd272c584e1487684370dd30c48f
msgid "This is not currently supported by Elgg core, but we'll be looking into it since reducing round-trips is critical for a good first-view experience, especially on mobile devices."
msgstr ""

#: ../../design/database.rst:2
# 4a463c105f0a4cf39f81f3b097095a88
msgid "Database"
msgstr ""

#: ../../design/database.rst:4
# eadd29bca09d40b2921f1983028cc6f3
msgid "A thorough discussion of Elgg's data model design and motivation."
msgstr ""

#: ../../design/database.rst:0
#: ../../design/events.rst:0
#: ../../design/security.rst:0
# 97de90b276be4103b162d7056864ed08
# 387f67d766b548808cde7685229d2b7c
# 21c9f0833cb746b6b1ace7cf9759a4d6
msgid "Contents"
msgstr ""

#: ../../design/database.rst:13
# 77b67e20ed354fa1b90fb55a638976bd
msgid "In Elgg, everything runs on a unified data model based on atomic units of data called entities."
msgstr ""

#: ../../design/database.rst:16
# d95b4f1196034c32b173bb8aba575839
msgid "Plugins are discouraged from interacting directly with the database, which creates a more stable system and a better user experience becase content created by different plugins can be mixed together in consistent ways. With this approach, plugins are faster to develop, and are at the same time much more powerful."
msgstr ""

#: ../../design/database.rst:22
# 0b33f1311d8a4812833a2bb8c8ccf1ff
msgid "Every entity in the system inherits the ``ElggEntity`` class. This class controls access permissions, ownership"
msgstr ""

#: ../../design/database.rst:27
# 5ee65eb0303f406fb45db9fb08f603d7
msgid "You can extend entities with extra information in two ways:"
msgstr ""

#: ../../design/database.rst:31
# 6746cb1b6f9147938f55102bf60a6320
msgid "``Metadata``: This is information describing the entity, usually"
msgstr ""

#: ../../design/database.rst:30
# cf44c4c4f21d410285c85922d823b7f1
msgid "added by the author of the entity when the entity is created. For example, tags, an ISBN number, a file location, or source language is metadata."
msgstr ""

#: ../../design/database.rst:36
# 456c279bbd8d45f9a97ae7bf98747b2b
msgid "``Annotations``: This is information about the entity, usually"
msgstr ""

#: ../../design/database.rst:34
# 44852a17bc8a4568b529cb382cab3aca
msgid "added by a third party after the entity is created. For example, ratings, likes, and votes are annotations. (Comments were before 1.9.)"
msgstr ""

#: ../../design/database.rst:39
# 54fc17c265ae43019ba30daf493acbe0
msgid "Datamodel"
msgstr ""

#: ../../design/database.rst:46
# bf2d2afcffb84d4ba23374a700fecd83
msgid "The Elgg data model diagram"
msgstr ""

#: ../../design/database.rst:49
# d7224af7e2be47f7b740f383dc2dd91d
msgid "Entities"
msgstr ""

#: ../../design/database.rst:51
# cdfd4524aca443ea9d4e4a9ab0e168a0
msgid "ElggEntity is the base class for the Elgg data model."
msgstr ""

#: ../../design/database.rst:54
# 5170735c47ec4dcbbc4f36c01a73b258
msgid "Users, Objects, Groups, Sites"
msgstr ""

#: ../../design/database.rst:56
# bfc407c8395e4828bcb6fbf20e1a84bd
msgid "``ElggEntity`` has four main specializations, which provide extra properties and methods to more easily handle different kinds of data."
msgstr ""

#: ../../design/database.rst:59
# 7086a08d48ea4556b0926000ffcb4a2b
msgid "``ElggObject``: content like blog posts, uploaded files and bookmarks ``ElggUser``: a system user ``ElggSite``: each Elgg site within an Elgg installation ``ElggGroup``: multi-user collaborative systems (called \"Communities\" in prior versions of Elgg)"
msgstr ""

#: ../../design/database.rst:65
# a7c291bf59c640e9bba6a7e134b25bc8
msgid "The benefit of such an approach is that, apart from modelling data with greater ease, a common set of functions is available to handle objects, regardless of their (sub)type."
msgstr ""

#: ../../design/database.rst:69
# fafa81d6aafa4b7cb2706b9924d1c16c
msgid "Each of these have their own properties that they bring to the table: ElggObjects have a title and description, ElggUsers have a username and password, and so on. However, because they all inherit ElggEntity, they each have a number of core properties and behaviours in common."
msgstr ""

#: ../../design/database.rst:74
# ec6602ee10ac49a69c206ce59430fca7
msgid "A numeric Globally Unique IDentifier (See `GUIDs`_)."
msgstr ""

#: ../../design/database.rst:75
# 6268153dcd1f4b17af0ab61758ee54b2
msgid "Access permissions. (When a plugin requests data, it never gets to touch data that the current user doesn't have permission to see.)"
msgstr ""

#: ../../design/database.rst:77
# d56856224aac4273a3beec69f2636eb4
msgid "An arbitrary subtype. For example, a blog post is an ElggObject with a subtype of \"blog\". Subtypes aren't predefined; they can be any unique way to describe a particular kind of entity. \"blog\", \"forum\", \"foo\", \"bar\", \"loafofbread\" and \"pyjamas\" are all valid subtypes."
msgstr ""

#: ../../design/database.rst:81
# 4d9770373b9c428cb8c043f8ad3190d5
msgid "An owner."
msgstr ""

#: ../../design/database.rst:82
# a60b6b4289e543b0a74a8f01e5e9077c
msgid "The site that the entity belongs to."
msgstr ""

#: ../../design/database.rst:83
# e1f99ebca7d644cf938e5bfc4e5f7586
msgid "A container, usually used to associate a group's content with the group."
msgstr ""

#: ../../design/database.rst:86
# 0742c04e713a45a8b53e4b2f7ca74555
msgid "GUIDs"
msgstr ""

#: ../../design/database.rst:88
# 25c03ce661a146f59f14da39e6a0b5fb
msgid "A GUID is an integer that uniquely identifies every entity in an Elgg installation (a Globally Unique IDentifier). It's assigned automatically when the entity is first saved and can never be changed."
msgstr ""

#: ../../design/database.rst:92
# 831297bc663d411184f4444afe78263b
msgid "Some Elgg API functions work with GUIDs instead of ``ElggEntity`` objects."
msgstr ""

#: ../../design/database.rst:95
# 1054a38646a249cb9252073c6c5d4d6c
msgid "ElggObject"
msgstr ""

#: ../../design/database.rst:97
# 580c33aa60b54db7a138d18f97ab70b1
msgid "The ``ElggObject`` entity type represents arbitrary content within an Elgg install; things like blog posts, uploaded files, etc."
msgstr ""

#: ../../design/database.rst:100
# f63e9b9934854b47b99d227d2f1c3c24
msgid "Beyond the standard ElggEntity properties, ElggObjects also support:"
msgstr ""

#: ../../design/database.rst:102
# 1792bc8892fa41f58f5ee47e6ec7c940
msgid "``title`` The title of the object (HTML escaped text)"
msgstr ""

#: ../../design/database.rst:103
# ba35f974e1e641df82abe1c279db8b22
msgid "``description`` A description of the object (HTML)"
msgstr ""

#: ../../design/database.rst:105
# 44ab1f66a9934c2a8b77f60d633c6fb6
msgid "Most other data about the object is generally stored via metadata."
msgstr ""

#: ../../design/database.rst:108
# dc32f7cedbc54890b141a97d32474606
msgid "ElggUser"
msgstr ""

#: ../../design/database.rst:110
# d3db13ba46de45be8d6af475acdc7029
msgid "The ``ElggUser`` entity type represents users within an Elgg install. These will be set to disabled until their accounts have been activated (unless they were created from within the admin panel)."
msgstr ""

#: ../../design/database.rst:114
# e5f01e38720e4659814d4973173d16a3
msgid "Beyond the standard ElggEntity properties, ElggUsers also support:"
msgstr ""

#: ../../design/database.rst:116
# 53f65e8e473e4b17a91bc9e318848b93
msgid "``name`` The user's plain text name. e.g. \"Hugh Jackman\""
msgstr ""

#: ../../design/database.rst:117
# 92c5eca7336a429caf95202f2c6f01e0
msgid "``username`` Their login name. E.g. \"hjackman\""
msgstr ""

#: ../../design/database.rst:118
# d0e70f9491884ea4b320deaed4911f2e
msgid "``password`` A hashed version of their password"
msgstr ""

#: ../../design/database.rst:119
# 3852cbb0adb54076bb404ce5562b74f7
msgid "``salt`` The salt that their password has been hashed with"
msgstr ""

#: ../../design/database.rst:120
# 86bb5a8a4d6b40c294b72085fe346c32
msgid "``email`` Their email address"
msgstr ""

#: ../../design/database.rst:121
# 8867d6ed178745558f85d6f12049f366
msgid "``language`` Their default language code."
msgstr ""

#: ../../design/database.rst:122
# f710461101aa4fa188e70fb3724e2c1b
msgid "``code`` Their session code (moved to a separate table in 1.9)."
msgstr ""

#: ../../design/database.rst:123
# 71034f507edb4ce7b1caa0f7fed42b43
msgid "``last_action`` The UNIX timestamp of the last time they loaded a page"
msgstr ""

#: ../../design/database.rst:124
# 5139df7bc164442da69e8c51ba42875c
msgid "``prev_last_action`` The previous value of ``last_action``"
msgstr ""

#: ../../design/database.rst:125
# ca1a4fb195b24e6daa2d9f223a48db08
msgid "``last_login`` The UNIX timestamp of their last log in"
msgstr ""

#: ../../design/database.rst:126
# fe6f2c71bf6d4bb996a165b80908b425
msgid "``prev_last_login`` the previous value of ``last_login``"
msgstr ""

#: ../../design/database.rst:129
# e8ce65d4db1c4cae8b725e665b418b12
msgid "ElggSite"
msgstr ""

#: ../../design/database.rst:131
# 227222dda20743f88d27d3e1c4133708
msgid "The ``ElggSite`` entity type represents sites within your Elgg install. Most installs will have only one."
msgstr ""

#: ../../design/database.rst:134
# 9660908079b84154965f0267ce8331be
msgid "Beyond the standard ElggEntity properties, ElggSites also support:"
msgstr ""

#: ../../design/database.rst:136
# bb99418b39494456b6f57862cb49fe02
msgid "``name`` The site name"
msgstr ""

#: ../../design/database.rst:137
# 77d6448d5c24466a87c66b34ccf4573a
msgid "``description`` A description of the site"
msgstr ""

#: ../../design/database.rst:138
# 5b069d63a74a4552900973eb8473aa05
msgid "``url`` The address of the site"
msgstr ""

#: ../../design/database.rst:141
# 71f017022e8c49df905b6ca8332a3b15
msgid "ElggGroup"
msgstr ""

#: ../../design/database.rst:143
# 1bc800fedf9e430fb4899636b23d23d9
msgid "The ``ElggGroup`` entity type represents an association of Elgg users. Users can join, leave, and post content to groups."
msgstr ""

#: ../../design/database.rst:146
# 4753b955e50e48d39d5acb8c079633a1
msgid "Beyond the standard ElggEntity properties, ElggGroups also support:"
msgstr ""

#: ../../design/database.rst:148
# b5a5e2dae4f142789fe3d0d567b9a0fd
msgid "``name`` The group's name (HTML escaped text)"
msgstr ""

#: ../../design/database.rst:149
# 238d12ea38eb4ea0a9f4117c1ea229cc
msgid "``description`` A description of the group (HTML)"
msgstr ""

#: ../../design/database.rst:151
# 0e13fe9c604c4983908c1c8e47689ac4
msgid "``ElggGroup`` has addition methods to manage content and membership."
msgstr ""

#: ../../design/database.rst:154
# 6a623bb7f3964c32aa15f0f3df91666f
msgid "The Groups plugin"
msgstr ""

#: ../../design/database.rst:156
# edf2baf1c77a46f8ba5873aff8a34236
msgid "Not to be confused with the entity type ``ElggGroup``, Elgg comes with a plugin called \"Groups\" that provides a default UI/UX for site users to interact with groups. Each group is given a discussion forum and a profile page linking users to content within the group."
msgstr ""

#: ../../design/database.rst:161
# 0e7becfbffe34e9b942b61f8d093d0b6
msgid "You can alter the user experience via the traditional means of extending plugins or completely replace the Groups plugin with your own."
msgstr ""

#: ../../design/database.rst:164
# 71eced593d9046f4be93c97c325b6d2e
msgid "Because ``ElggGroup`` can be subtyped like all other ElggEntities, you can have multiple types of groups running on the same site."
msgstr ""

#: ../../design/database.rst:168
# 55ee85a649154f05be263cc98b9ad780
msgid "Writing a group-aware plugin"
msgstr ""

#: ../../design/database.rst:170
# 0e9f83b767fc41f699b154e6d4e3c52c
msgid "Plugin owners need not worry too much about writing group-aware functionality, but there are a few key points:"
msgstr ""

#: ../../design/database.rst:174
# aa8b29997b1a45948ebe5152108b2533
msgid "Adding content"
msgstr ""

#: ../../design/database.rst:176
# f91c791341514c84a717978d24decb5e
msgid "By passing along the group as ``container_guid`` via a hidden input field, you can use a single form and action to add both user and group content."
msgstr ""

#: ../../design/database.rst:179
# f3046ecf67c142ac8cce5c223e5e1f7e
msgid "Use `can_write_to_container <http://reference.elgg.org/entities_8php.html#16a972909c7cb75f646cb707be001a6f>`_ to determine whether or not the current user has the right to add content to a group."
msgstr ""

#: ../../design/database.rst:184
# 5bf25ba87fd54442bbdf01867250cb87
msgid "Be aware that you will then need to pass the container GUID or username to the page responsible for posting and the accompanying value, so that this can then be stored in your form as a hidden input field, for easy passing to your actions. Within a \"create\" action, you'll need to take in this input field and save it as a property of your new element (defaulting to the current user's container):"
msgstr ""

#: ../../design/database.rst:212
# bb25b21859b4444ca557ca4a19026be0
msgid "Usernames and page ownership"
msgstr ""

#: ../../design/database.rst:214
# be70717ddce3477da09006cfb468da88
msgid "Groups have a simulated username of the form *group:\\ GUID*, which you can get the value of by checking ``$group->username``. If you pass this username to a page on the URL line as part of the ``username`` variable (i.e., ``/yourpage?username=group:nnn``), Elgg will automatically register that group as being the owner of the page (unless overridden)."
msgstr ""

#: ../../design/database.rst:221
# 0f650a546ef64de1ad1182aa444620f8
msgid "Juggling users and groups"
msgstr ""

#: ../../design/database.rst:223
# db3b3cf9b52b4bff9f0f2238ae91b0f0
msgid "In fact, ``[[Engine/DataModel/Entities/ElggGroup|ElggGroup]]`` simulates most of the methods of ``[[Engine/DataModel/Entities/ElggUser|ElggUser]]``. You can grab the icon, name etc using the same calls, and if you ask for a group's friends, you'll get its members. This has been designed specifically for you to alternate between groups and users in your code easily."
msgstr ""

#: ../../design/database.rst:231
# 921f38223ca240f48adfad41dfe549a7
msgid "Menu options"
msgstr ""

#: ../../design/database.rst:233
# d67eac7b73534f86ac33f2033ead7c85
msgid "***This section is deprecated as of Elgg 1.8***"
msgstr ""

#: ../../design/database.rst:235
# f83422ad01d6446981c742d53ee2cbb0
msgid "The final piece of the puzzle, for default groups, is to add a link to your functionality from the group's profile. Here we'll use the file plugin as an example."
msgstr ""

#: ../../design/database.rst:239
# 9e067d272694422380c390142888e3d3
msgid "This involves creating a view within your plugin - in this case file/menu - which will extend the group's menu. File/menu consists of a link within paragraph tags that points to the file repository of the page\\_owner():"
msgstr ""

#: ../../design/database.rst:252
# 85a19a3d669048ffa74ebfdba009c4c7
msgid "You can then extend the group's menu view with this one, within your plugin's input function (in this case file\\_init):"
msgstr ""

#: ../../design/database.rst:260
# 2c2ae5114aea46a5a443f4753f3062bc
msgid "Ownership"
msgstr ""

#: ../../design/database.rst:262
# e61d6c259eca422ab3610e6e5f0b05a4
msgid "Entities have a ``owner_guid`` GUID property, which defines its owner. Typically this refers to the GUID of a user, although sites and users themselves often have no owner (a value of 0)."
msgstr ""

#: ../../design/database.rst:266
# 00cbe10ee6214cda8fa1c93884497f2b
msgid "The ownership of an entity dictates, in part, whether or not you can access or edit that entity."
msgstr ""

#: ../../design/database.rst:270
# 25ed2dea42de4a7d9f0eb24f434cf7e5
msgid "Containers"
msgstr ""

#: ../../design/database.rst:272
# 14eed043e33e408d83b0bd7d2199c092
msgid "In order to easily search content by group or by user, content is generally set to be \"contained\" by either the user who posted it, or the group to which the user posted. This means the new object's ``container_guid`` property will be set to the GUID of the current ElggUser or the target ElggGroup."
msgstr ""

#: ../../design/database.rst:277
# 93d3df1e41eb457e8c210e3dcbb9f3ae
msgid "E.g., three blog posts may be owned by different authors, but all be contained by the group they were posted to."
msgstr ""

#: ../../design/database.rst:280
# 3f12f7b7697c4253903697164673fd1d
msgid "Note: This is not always true. Comment entities are contained by the object commented upon, and in some 3rd party plugins the container may be used to model a parent-child relationship between entities (e.g. a \"folder\" object containing a file object)."
msgstr ""

#: ../../design/database.rst:286
# 7f3126df863e4642a3119f6cb9d4d005
msgid "Annotations"
msgstr ""

#: ../../design/database.rst:288
# 98a410e68a0c406bbd1f4361a6ef96c1
msgid "Annotations are pieces of data attached to an entity that allow users to leave ratings, or other relevant feedback. A poll plugin might register votes as annotations. Before Elgg 1.9, comments and group discussion replies were stored as annotations."
msgstr ""

#: ../../design/database.rst:293
# 53b5e66567c1495780fab1bfd4d16b29
msgid "Annotations are stored as instances of the ``ElggAnnotation`` class."
msgstr ""

#: ../../design/database.rst:295
# ea365b1601e3428f9895c3305b99298d
msgid "Each annotation has:"
msgstr ""

#: ../../design/database.rst:297
# 898f272f7f5040b78c3d11297710fdbc
msgid "An internal annotation type (like *comment*)"
msgstr ""

#: ../../design/database.rst:298
# e725f9763321446a8ccd000362327a6c
msgid "A value (which can be a string or integer)"
msgstr ""

#: ../../design/database.rst:299
# 18ea347c120a40b0bf02256707a2935d
msgid "An access permission distinct from the entity it's attached to"
msgstr ""

#: ../../design/database.rst:300
# bb1f1c496f7547c797f445e7c7aacb2f
msgid "An owner"
msgstr ""

#: ../../design/database.rst:303
# b82ebce9dede44f9acbc3587975ec30f
msgid "Adding an annotation"
msgstr ""

#: ../../design/database.rst:305
# eaa033c230374ebeafe20e4969a87dc8
msgid "The easiest way to annotate is to use the ``annotate`` method on an entity, which is defined as:"
msgstr ""

#: ../../design/database.rst:318
# b3efa462890c491bad6f0f04826bcc30
msgid "For example, to leave a rating on an entity, you might call:"
msgstr ""

#: ../../design/database.rst:325
# aceaf6dc5c934ca49ba53d8a4e0dae21
msgid "Reading annotations"
msgstr ""

#: ../../design/database.rst:327
# 89ea218c0eb94cb6b9e81bd08a40f4ae
msgid "To retrieve annotations on an object, you can call the following method:"
msgstr ""

#: ../../design/database.rst:338
# 63f34782f99c449d88a7acede3fd2fec
msgid "If your annotation type largely deals with integer values, a couple of useful mathematical functions are provided:"
msgstr ""

#: ../../design/database.rst:349
# f4fcab60082d4c7abdf1807ce3859c32
msgid "Useful helper functions"
msgstr ""

#: ../../design/database.rst:352
# 5373a40b9592495285bab9e5f3924eaf
msgid "Comments"
msgstr ""

#: ../../design/database.rst:354
# 40215bde66ab4c3fb4e72e1503965566
msgid "If you want to provide comment functionality on your plugin objects, the following function will provide the full listing, form and actions:"
msgstr ""

#: ../../design/database.rst:363
# cf8f46673e754d64a649a09459fcc25a
msgid "Metadata"
msgstr ""

#: ../../design/database.rst:365
# 2fb64c0f41a3416d8c41b5a15173ca17
msgid "Metadata in Elgg allows you to store extra data on an ``entity`` beyond the built-in fields that entity supports. For example, ``ElggObjects`` only support the basic entity fields plus title and description, but you might want to include tags or an ISBN number. Similarly, you might want users to be able to save a date of birth."
msgstr ""

#: ../../design/database.rst:371
# 36bd70f991754927966106494915295d
msgid "Under the hood, metadata is stored as an instance of the ``ElggMetadata`` class, but you don't need to worry about that in practice (although if you're interested, see the ``ElggMetadata`` class reference). What you need to know is:"
msgstr ""

#: ../../design/database.rst:376
# 055a2a018ae24614865949cb4af940ee
msgid "Metadata has an owner and access ID, both of which may be different to the owner of the entity it's attached to"
msgstr ""

#: ../../design/database.rst:378
# da6fe5cb4a2b46cb884abcf270ddb5a4
msgid "You can potentially have multiple items of each type of metadata attached to a single entity"
msgstr ""

#: ../../design/database.rst:382
# f62c5c619a184ffe93d88ad81d85b1bb
msgid "The simple case"
msgstr ""

#: ../../design/database.rst:385
#: ../../design/database.rst:454
# 1c682a4d76184a4a966ebbfbec4a5ffd
# eedeadb4c10c4edcbfc5ab732efdd2f8
msgid "Adding metadata"
msgstr ""

#: ../../design/database.rst:387
# 9782144f078e4209ab4fb8b865f11f0b
msgid "To add a piece of metadata to an entity, just call:"
msgstr ""

#: ../../design/database.rst:393
# 54c9b817bb9d43a9aa9d9effb45d018d
msgid "For example, to add a date of birth to a user:"
msgstr ""

#: ../../design/database.rst:399
# 1d4493e0664a4b6bac6519ec5510e324
msgid "Or to add a couple of tags to an object:"
msgstr ""

#: ../../design/database.rst:405
# 3411099723614e5fa2bd625a48c4de6c
msgid "When adding metadata like this:"
msgstr ""

#: ../../design/database.rst:407
# ceebabfe586e4e27ac5dd6217ae96ea2
msgid "The owner is set to the currently logged-in user"
msgstr ""

#: ../../design/database.rst:408
# ff4569dbd0674fc4898410e52b2452cf
msgid "Access permissions are inherited from the entity"
msgstr ""

#: ../../design/database.rst:409
# 5ba8a06092dc4fb9b00d6af59445d848
msgid "Reassigning a piece of metadata will overwrite the old value"
msgstr ""

#: ../../design/database.rst:411
# 4e82b7c8737247a38e4ee72b42603147
msgid "This is suitable for most purposes. Be careful to note which attributes are metadata and which are built in to the entity type that you are working with. You do not need to save an entity after adding or updating metadata. You do need to save an entity if you have changed one of its built in attributes. As an example, if you changed the access id of an ElggObject, you need to save it or the change isn't pushed to the database."
msgstr ""

#: ../../design/database.rst:420
#: ../../design/database.rst:496
# db9a24ce0b2c4239b66342a313cb266f
# 1d0b79f981404661b30d639ff41b2c73
msgid "Reading metadata"
msgstr ""

#: ../../design/database.rst:422
# 0419e780c83a4e3a9f0caa732edc340a
msgid "To retrieve metadata, treat it as a property of the entity:"
msgstr ""

#: ../../design/database.rst:428
# 85568bda49ce4fdaa1b59d7b869660d1
msgid "Note that this will return the absolute value of the metadata. To get metadata as an ElggMetadata object, you will need to use the methods described in the *finer control* section below."
msgstr ""

#: ../../design/database.rst:432
# 948518408575431ab98f9b67bd082b45
msgid "If you stored multiple values in this piece of metadata (as in the \"tags\" example above), you will get an array of all those values back. If you stored only one value, you will get a string or integer back. Storing an array with only one value will return a string back to you. E.g."
msgstr ""

#: ../../design/database.rst:444
# 43b5c357807341e399e6a61410dff54a
msgid "To always get an array back, simply cast to an array;"
msgstr ""

#: ../../design/database.rst:451
# 723cc12e999e4def95a3bb4a4c3c48ea
msgid "Finer control"
msgstr ""

#: ../../design/database.rst:456
# d9562ccc88b34e35aed4a3fea8cb833a
msgid "If you need more control, for example to assign an access ID other than the default, you can use the ``create_metadata`` function, which is defined as follows:"
msgstr ""

#: ../../design/database.rst:472
# 4e0f16e524cb4888b6d4a3c689972b6a
msgid "For single values, you can therefore write metadata as follows (taking the example of a date of birth attached to a user):"
msgstr ""

#: ../../design/database.rst:479
# 66dc43b64c8c4cf7be35ca0519a29c18
msgid "For multiple values, you will need to iterate through and call ``create_metadata`` on each one. The following piece of code comes from the profile save action:"
msgstr ""

#: ../../design/database.rst:492
# 3e4e94c6cdc245a09f40498ccf4bc3d5
msgid "Note that the *allow multiple* setting is set to *false* in the first iteration and *true* thereafter."
msgstr ""

#: ../../design/database.rst:498
# b3652b5d5ec74e60a5b3fbd389f49cf0
msgid "``elgg_get_metadata`` is the best function for retrieving metadata as ElggMetadata objects:"
msgstr ""

#: ../../design/database.rst:501
# 0d1171e235af440d8a47fabafe15a7aa
msgid "E.g., to retrieve a user's DOB"
msgstr ""

#: ../../design/database.rst:510
# 90ff626a512b4c14844431a2dc44955b
msgid "Or to get all metadata objects:"
msgstr ""

#: ../../design/database.rst:522
# 5dfbbe0fea1a4ad99d9392d085568862
msgid "Common mistakes"
msgstr ""

#: ../../design/database.rst:525
# 77cb3c4eee3241478794c1820c8f9592
msgid "\"Appending\" metadata"
msgstr ""

#: ../../design/database.rst:527
# 4e6f38e4244144ef9c9e2f4f443a098e
msgid "Note that you cannot \"append\" values to metadata arrays as if they were normal php arrays. For example, the following will not do what it looks like it should do."
msgstr ""

#: ../../design/database.rst:536
# 46efbfe3d72f4fc48d95fc917e70dd15
msgid "Trying to store hashmaps"
msgstr ""

#: ../../design/database.rst:538
# c879cbd78fa8453dac6009d28fc4bd9a
msgid "Elgg does not support storing ordered maps (name/value pairs) in metadata. For example, the following does not work as you might first expect it to:"
msgstr ""

#: ../../design/database.rst:547
# 61fa1a7fe2bb41059be313cba3f74ac5
msgid "You can instead store the information like so:"
msgstr ""

#: ../../design/database.rst:556
# 2b9bc8a57b654e70bf1e44bb8506e2aa
msgid "Storing GUIDs in metadata"
msgstr ""

#: ../../design/database.rst:558
# 1f2539db1cfb4a5cbf87ecd04d041906
msgid "Though there are some cases to store entity GUIDs in metadata, `Relationships`_ are a much better construct for relating entities to each other."
msgstr ""

#: ../../design/database.rst:563
# 77e85112d6814bad9a62feac841099e2
msgid "Relationships"
msgstr ""

#: ../../design/database.rst:565
# 9b00eeb9df4a4164bbf6e2c723eef0c8
msgid "Relationships allow you to bind entities together. Examples: an artist has fans, a user is a member of an organization, etc."
msgstr ""

#: ../../design/database.rst:568
# cbd56548a1eb43cda98af33e30d5a9c8
msgid "The class ``ElggRelationship`` models a directed relationship between two entities, making the statement:"
msgstr ""

#: ../../design/database.rst:571
# af2c5360a3444e83a77522ff097cd6bc
msgid "\"**{subject}** is a **{noun}** of **{target}**.\""
msgstr ""

#: ../../design/database.rst:574
# cae0eb8e9b594d178503b6fb829af378
msgid "API name"
msgstr ""

#: ../../design/database.rst:574
# 970cdcef22cd402f86fd4f0931186feb
msgid "Models"
msgstr ""

#: ../../design/database.rst:574
# 5f88654913784d7b8f27f62f731b07e7
msgid "Represents"
msgstr ""

#: ../../design/database.rst:576
# 0579bdd797e849b7be0f9076f4951ef4
msgid "``guid_one``"
msgstr ""

#: ../../design/database.rst:576
# 9d23bf6d6e2247f88d4092018784a568
msgid "The subject"
msgstr ""

#: ../../design/database.rst:576
# 391adde1660047d8a244bb573e650dc8
msgid "Which entity is being bound"
msgstr ""

#: ../../design/database.rst:577
# f6a4457d448645559df27fed9b7b2dbc
msgid "``relationship``"
msgstr ""

#: ../../design/database.rst:577
# 56fae285b0d64e319f4d9ca89fb6c1ec
msgid "The noun"
msgstr ""

#: ../../design/database.rst:577
# ae1a674371bf4847b067e9393b6afb28
msgid "The type of relationship"
msgstr ""

#: ../../design/database.rst:578
# 221054b0b801458395ec4f0d8300c7d7
msgid "``guid_two``"
msgstr ""

#: ../../design/database.rst:578
# 6e0ccc19ac124034a9e60ae10eaaa68c
msgid "The target"
msgstr ""

#: ../../design/database.rst:578
# 264b859279ed48288fecca8d6425039c
msgid "The entity to which the subject is bound"
msgstr ""

#: ../../design/database.rst:581
# 4233b7956323404fa733d1d511f493b6
msgid "The type of relationship may alternately be a verb, making the statement:"
msgstr ""

#: ../../design/database.rst:583
# 05c31ea745be4bb79da2aba877c69026
msgid "\"**{subject}** **{verb}** **{target}**.\""
msgstr ""

#: ../../design/database.rst:585
# acd6c2401d7c489fa630966d49d22504
msgid "E.g. User A \"likes\" blog post B"
msgstr ""

#: ../../design/database.rst:587
# db87b77cec084480911b24d861b68d60
msgid "**Each relationship has direction.** Imagine an archer shoots an arrow at a target; The arrow moves in one direction, binding the subject (the archer) to the target."
msgstr ""

#: ../../design/database.rst:591
# 95349ccfe43e4c2aa04170ec6593ab6b
msgid "**A relationship does not imply reciprocity**. **A** follows **B** does not imply that **B** follows **A**."
msgstr ""

#: ../../design/database.rst:594
# 33acad684a4249d6ac0a92a00032cfba
msgid "**Relationships_ do not have access control.** They're never hidden from view and can be edited with code at any privilege level, with the caveat that *the entities* in a relationship may be invisible due to access control!"
msgstr ""

#: ../../design/database.rst:600
# f794434698ff4d609b596bab6fad52ae
msgid "Working with relationships"
msgstr ""

#: ../../design/database.rst:603
# cbc5c6e3468940a09ce5cf4c2ab3aabb
msgid "Creating a relationship"
msgstr ""

#: ../../design/database.rst:605
# 7c64c06a340f49f0aada8e7876c2f822
msgid "E.g. to establish that \"**$user** is a **fan** of **$artist**\" (user is the subject, artist is the target):"
msgstr ""

#: ../../design/database.rst:616
# f61b5e6f14584f3f9f4fd9ae75e8c376
msgid "This triggers the event [create, relationship], passing in the created ``ElggRelationship`` object. If a handler returns ``false``, the relationship will not be created and ``$success`` will be ``false``."
msgstr ""

#: ../../design/database.rst:622
# e2bc31255af44845b4130bb081406ba3
msgid "Verifying a relationship"
msgstr ""

#: ../../design/database.rst:624
# 352a46c66dd748f9b7e0a393a131a29a
msgid "E.g. to verify that \"**$user** is a **fan** of **$artist**\":"
msgstr ""

#: ../../design/database.rst:632
# c5fabc5b7e00420a84c207d2ecdfb3ca
msgid "Note that, if the relationship exists, ``check_entity_relationship()`` returns an ``ElggRelationship`` object:"
msgstr ""

#: ../../design/database.rst:643
# 50a3b3a63fcc4ea7bffaaeb92dda3087
msgid "Deleting a relationship"
msgstr ""

#: ../../design/database.rst:645
# 01e48b7990754413bcb48b9ec2803a94
msgid "E.g. to be able to assert that \"**$user** is no longer a **fan** of **$artist**\":"
msgstr ""

#: ../../design/database.rst:651
# 74b7f51ae9aa4f7f877b72ce44f3f8a0
msgid "This triggers the event [delete, relationship], passing in the associated ``ElggRelationship`` object. If a handler returns ``false``, the relationship will remain, and ``$was_removed`` will be ``false``."
msgstr ""

#: ../../design/database.rst:656
# cbaa2f6de1744706878df06711b9ed33
msgid "Other useful functions:"
msgstr ""

#: ../../design/database.rst:658
# c4161cd231e34771821f9484210a7014
msgid "``delete_relationship()`` : delete by ID"
msgstr ""

#: ../../design/database.rst:659
# 4047e197d92e4375be256b1879c45682
msgid "``remove_entity_relationships()`` : delete those relating to an entity (*note:* in versions before Elgg 1.9, this did not trigger delete events)"
msgstr ""

#: ../../design/database.rst:662
# ac994316a5e149548365b7c296c3e956
msgid "Finding relationships and related entities"
msgstr ""

#: ../../design/database.rst:664
# cd588c1864c947a69291339a10d1327f
msgid "Below are a few functions to fetch relationship objects and/or related entities. A few are listed below:"
msgstr ""

#: ../../design/database.rst:667
# 7a5a5d1f02f54287ae92f2322ab47083
msgid "``get_entity_relationships()`` : fetch relationships by subject or target entity"
msgstr ""

#: ../../design/database.rst:668
# 68ecf6cbdf3c416689236f270c156679
msgid "``get_relationship()`` : get a relationship object by ID"
msgstr ""

#: ../../design/database.rst:669
# c81f353883cb4835a652cca97b0babd8
msgid "``elgg_get_entities_from_relationship()`` : fetch entities in relationships in a variety of ways"
msgstr ""

#: ../../design/database.rst:672
# a97455d0fd1e40938045b134ec28093e
msgid "E.g. retrieving users who joined your site in January 2014."
msgstr ""

#: ../../design/database.rst:686
# edb645a4400344cc9088e6b574df5b07
msgid "Access Control"
msgstr ""

#: ../../design/database.rst:688
# 732c45a877cd4c058dc46b40a79ba280
msgid "Granular access controls are one of the fundamental design principles in Elgg, and a feature that has been at the centre of the system throughout its development. The idea is simple: a user should have full control over who sees an item of data he or she creates."
msgstr ""

#: ../../design/database.rst:694
# 77ba1d8c856041cea4c6d15974727efa
msgid "Access controls in the data model"
msgstr ""

#: ../../design/database.rst:696
# ef6348c4598a411aba2f4972d0e4b54a
msgid "In order to achieve this, every entity, annotation and piece of metadata contains an ``access_id`` property, which in turn corresponds to one of the pre-defined access controls or an entry in the ``access_collections`` database table."
msgstr ""

#: ../../design/database.rst:702
# cb21d0761aa44fd4874f6c03244b33f1
msgid "Pre-defined access controls"
msgstr ""

#: ../../design/database.rst:704
# fccca48bd35048dc9fd0706d94d267fc
msgid "**0** Private."
msgstr ""

#: ../../design/database.rst:705
# b85f250d71544afbaf9a51a0a6785d68
msgid "**1** Logged in users."
msgstr ""

#: ../../design/database.rst:706
# 6111e71361c545269fb7573c9488732c
msgid "**2** Public data."
msgstr ""

#: ../../design/database.rst:709
# 54e5a8eeb5f54bbb824f3f230f4b778e
msgid "User defined access controls"
msgstr ""

#: ../../design/database.rst:711
# 8cffd27b4ce34fee92b1faaea17f8785
msgid "You may define additional access groups and assign them to an entity, annotation or metadata. A number of functions have been defined to assist you; see the `access library reference`_ for more information."
msgstr ""

#: ../../design/database.rst:716
# 467c04e181674376ab10ce7babcc2158
msgid "How access affects data retrieval"
msgstr ""

#: ../../design/database.rst:718
# 114f120f3ff140a6a0ac353c08b93522
msgid "All data retrieval functions above the database layer - for example ``get_entities`` and its cousins - will only return items that the current user has access to see. It is not possible to retrieve items that the current user does not have access to. This makes it very hard to create a security hole for retrieval."
msgstr ""

#: ../../design/database.rst:727
# 11356e80ebbc4e9ba3a99c1b9a5c2313
msgid "Write access"
msgstr ""

#: ../../design/database.rst:729
# 5094eea505a245b7bbd37761f2641d70
msgid "The following rules govern write access:"
msgstr ""

#: ../../design/database.rst:731
# 00df8f2673874f2a91bc48e0ab60eea9
msgid "The owner of an entity can always edit it"
msgstr ""

#: ../../design/database.rst:732
# 65e1b17dae3b4733bbc03b237f098949
msgid "The owner of a container can edit anything therein (note that this does not mean that the owner of a group can edit anything therein)"
msgstr ""

#: ../../design/database.rst:734
# ed8a67e667394640b09f65a458f5e627
msgid "Admins can edit anything"
msgstr ""

#: ../../design/database.rst:736
# eafddf8fb22348a7943c62c6efcd9661
msgid "You can override this behaviour using a :ref:`plugin hook <design/events#plugin-hooks>` called ``permissions_check``, which passes the entity in question to any function that has announced it wants to be referenced. Returning ``true`` will allow write access; returning ``false`` will deny it. See :ref:`the plugin hook reference for permissions\\_check <guides/hooks-list#permission-hooks>` for more details."
msgstr ""

#: ../../design/database.rst:744
# 4f4ab60ac7c04a08aa85dbd958ed7238
msgid "`Access library reference`_"
msgstr ""

#: ../../design/database.rst:749
# 9e8c0c256ebf422ba31adb7e8e040891
msgid "Schema"
msgstr ""

#: ../../design/database.rst:751
# 44b8580e92de49bdabbf366277ad165c
msgid "The database contains a number of primary tables and secondary tables. Its schema table is stored in ``/engine/schema/mysql.sql``."
msgstr ""

#: ../../design/database.rst:754
# 4bd3d96e737b4db7a5a1d2e1733f4b8e
msgid "Each table is prefixed by \"prefix\\_\", this is replaced by the Elgg framework during installation."
msgstr ""

#: ../../design/database.rst:758
# 6aa063fd5931462d9697a5f08b993c74
msgid "Main tables"
msgstr ""

#: ../../design/database.rst:760
# 54603a83c66b4462943e33ce32d72c7f
msgid "This is a description of the main tables. Keep in mind that in a given Elgg installation, the tables will have a prefix (typically \"elgg\\_\")."
msgstr ""

#: ../../design/database.rst:764
# 8427f6e06ce44cc1b5f5e83e548ebc26
msgid "Table: entities"
msgstr ""

#: ../../design/database.rst:766
# 9aa7341c70be4d20b82e357412d3292b
msgid "This is the main `Entities`_ table containing Elgg users, sites, objects and groups. When you first install Elgg this is automatically populated with your first site."
msgstr ""

#: ../../design/database.rst:770
# 2988f8b2e5f24083b57d59c12e8b3408
msgid "It contains the following fields:"
msgstr ""

#: ../../design/database.rst:772
# 49b1c2f6b27846caa370d3d50fd33415
msgid "**guid** An auto-incrementing counter producing a GUID that uniquely identifies this entity in the system."
msgstr ""

#: ../../design/database.rst:774
# 757c8615b52342018b0c6311c70ea2a8
msgid "**type** The type of entity - object, user, group or site"
msgstr ""

#: ../../design/database.rst:775
# dd915f2c4e354e5880fd417c5bf38629
msgid "**subtype** A link to the `entity_subtypes` table."
msgstr ""

#: ../../design/database.rst:776
# abf23645f03a410f8ed62547a5a0a96d
msgid "**owner\\_guid** The GUID of the owner's entity."
msgstr ""

#: ../../design/database.rst:777
# f6bb785d1dca491081baec9c02512a9a
msgid "**site\\_guid** The site the entity belongs to."
msgstr ""

#: ../../design/database.rst:778
# 5aa10ece786d4c40b9ae29efa98db166
msgid "**container\\_guid** The GUID this entity is contained by - either a user or a group."
msgstr ""

#: ../../design/database.rst:780
# a11edf2e853444b19b5a5009f75843e7
msgid "**access\\_id** Access controls on this entity."
msgstr ""

#: ../../design/database.rst:781
# 6d993ada27444c1d8677a63bdd6d0d25
msgid "**time\\_created** Unix timestamp of when the entity is created."
msgstr ""

#: ../../design/database.rst:782
# 84c6b78f160b47cbb0291a227b23c04d
msgid "**time\\_updated** Unix timestamp of when the entity was updated."
msgstr ""

#: ../../design/database.rst:783
# 6f6ee0f22a254375a3f8d42a1ee7e10d
msgid "**enabled** If this is 'yes' an entity is accessible, if 'no' the entity has been disabled (Elgg treats it as if it were deleted without actually removing it from the database)."
msgstr ""

#: ../../design/database.rst:788
# 9a9f77b6d01948b28d80a59a0f7757cf
msgid "Table: entity\\_subtypes"
msgstr ""

#: ../../design/database.rst:790
# e791a3b5c5cc41daae392163365438e1
msgid "This table contains entity subtype information:"
msgstr ""

#: ../../design/database.rst:792
#: ../../design/database.rst:802
#: ../../design/database.rst:820
# 9a67d3e161654eb0b332a38547ac2e6c
# af8ef64660ac480a97951c0630e4a8f7
# a0b8a8bffaec4c008617035c756a7b3a
msgid "**id** A counter."
msgstr ""

#: ../../design/database.rst:793
# 935af904a2484da68dc79e3d1b3e6518
msgid "**type** The type of entity - object, user, group or site."
msgstr ""

#: ../../design/database.rst:794
# 1a2ab4c1d30446e5a44cf9e7a69b1843
msgid "**subtype** The subtype name as a string."
msgstr ""

#: ../../design/database.rst:795
# 1d87bf392a1d417b9e20345bd517d70c
msgid "**class** Optional class name if this subtype is linked with a class"
msgstr ""

#: ../../design/database.rst:798
# 13490171fc944920ac18a6e46019c47b
msgid "Table: metadata"
msgstr ""

#: ../../design/database.rst:800
# a3314d33f3f04abbbbe28a0af23fdbee
msgid "This table contains `Metadata`_, extra information attached to an entity."
msgstr ""

#: ../../design/database.rst:803
#: ../../design/database.rst:821
# c0f4493a4068403fbf0a491c2f16af6a
# 338dec54422e4a76b2d5289fe15d1290
msgid "**entity\\_guid** The entity this is attached to."
msgstr ""

#: ../../design/database.rst:804
# bc74c1730feb4858a2eba47d39066d97
msgid "**name\\_id** A link to the metastrings table defining the name table."
msgstr ""

#: ../../design/database.rst:806
#: ../../design/database.rst:824
# 760de51c428b4f6087f535d96baaf710
# 77312100dec947c39fa83c26a5177ccf
msgid "**value\\_id** A link to the metastrings table defining the value."
msgstr ""

#: ../../design/database.rst:807
#: ../../design/database.rst:825
# 30cc3b78c29a40dd9d8832f2bbd0bd38
# f90286a2e0c14bf8bc5913bcce13fb1e
msgid "**value\\_type** The value class, either text or an integer."
msgstr ""

#: ../../design/database.rst:808
#: ../../design/database.rst:826
# 9a78ef3af3fc4ba1b458b87b90d44904
# c85d54efd0e349489769003a52e63ae6
msgid "**owner\\_guid** The owner GUID of the owner who set this item of metadata."
msgstr ""

#: ../../design/database.rst:810
#: ../../design/database.rst:828
# 742d1f699eb2402dba4efa01fd9f3eef
# 84b0c99efe9e4fcdb40d87a198df5d0c
msgid "**access\\_id** An Access controls on this item of metadata."
msgstr ""

#: ../../design/database.rst:811
#: ../../design/database.rst:829
# 97ef6d7662744ac0b2b7f6ccb03f45dd
# 48a45ee000aa41f8879ff7088be2e01d
msgid "**time\\_created** Unix timestamp of when the metadata is created."
msgstr ""

#: ../../design/database.rst:812
#: ../../design/database.rst:830
# 8b3b76c5ee034513bd6ce3e46df86c02
# 203e6f778360445193153b0fe5d0ffa5
msgid "**enabled** If this is 'yes' an item is accessible, if 'no' the item has been deleted."
msgstr ""

#: ../../design/database.rst:816
# b99ee3f6ffaa462eb4fe741eb83cec59
msgid "Table: annotations"
msgstr ""

#: ../../design/database.rst:818
# f70759c87a634f2cb28674005c85acf2
msgid "This table contains `Annotations`_, this is distinct from `Metadata`_."
msgstr ""

#: ../../design/database.rst:822
# 34a4c0611ba84e61983497bd2cb6a751
msgid "**name\\_id** A link to the metastrings table defining the type of annotation."
msgstr ""

#: ../../design/database.rst:834
# 2298f8d10aa34d6ebc38c0762f3a202a
msgid "Table: relationships"
msgstr ""

#: ../../design/database.rst:836
# 545774d8236f45e0940fd7400d3c4f5d
msgid "This table defines `Relationships`_, these link one entity with another."
msgstr ""

#: ../../design/database.rst:838
# ab31fd9c7a444677a3caf376d5d234c5
msgid "**guid\\_one** The GUID of the subject entity."
msgstr ""

#: ../../design/database.rst:839
# 491006182c9841d1a846f6c5b85ca99b
msgid "**relationship** The type of the relationship."
msgstr ""

#: ../../design/database.rst:840
# c742cf53d8ce47959aeb4849ef911e20
msgid "**guid\\_two** The GUID of the target entity."
msgstr ""

#: ../../design/database.rst:843
# 8858af8783d942428c2c4a53f98dbe86
msgid "Table: objects\\_entity"
msgstr ""

#: ../../design/database.rst:845
# c35f9145fd81419396ba92fbdd6b732f
msgid "Extra information specifically relating to objects. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:850
# 3e8584e2ffa84e3a840ba0763db64076
msgid "Table: sites\\_entity"
msgstr ""

#: ../../design/database.rst:852
# e97a7bfb6e784fd181b9c44258990ff2
msgid "Extra information specifically relating to sites. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:857
# 12e0a85b80af479bba925175c206dcdb
msgid "Table: users\\_entity"
msgstr ""

#: ../../design/database.rst:859
# aaa1cd6efaa942d7a3d93f006a9d44ec
msgid "Extra information specifically relating to users. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:864
# 596d1d348e534e28b78c1e116cc8c020
msgid "Table: groups\\_entity"
msgstr ""

#: ../../design/database.rst:866
# 04c3e200fb1b4bf08f8f941021740b27
msgid "Extra information specifically relating to groups. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:871
# 56b1080774d14ea8aa27ce6f3783876b
msgid "Table: metastrings"
msgstr ""

#: ../../design/database.rst:873
# ea43491c16144483b193383d4f1a4775
msgid "Metastrings contain the actual string of metadata which is linked to by the metadata and annotations tables."
msgstr ""

#: ../../design/database.rst:876
# 8cd4e82c22e14da7986e411816e40ec1
msgid "This is to avoid duplicating strings, saving space and making database lookups more efficient."
msgstr ""

#: ../../design/database.rst:879
# 13b2f1ba46ff44d18049e66cd67daee6
msgid "Core developers will place schema upgrades in ``/engine/schema/upgrades/*``."
msgstr ""

#: ../../design/events.rst:2
# c4f0e365bbcd4d2384779ee4e5bbf071
msgid "Events and Plugin Hooks"
msgstr ""

#: ../../design/events.rst:11
# cdbf382a23aa4ea78ba050ab7449ae3a
msgid "Elgg has an event system that can be used to replace or extend core functionality."
msgstr ""

#: ../../design/events.rst:14
# 509ff5b65a4f4349b2be3f7c6e7b858b
msgid "Plugins influence the system by creating handlers (`callables <http://php.net/manual/en/language.types.callable.php>`_ such as functions and methods) and registering them to handle two types of events: `Elgg Events`_ and `Plugin Hooks`_."
msgstr ""

#: ../../design/events.rst:18
# a54d73be584544afa1bb918a9926edb2
msgid "When an event is triggered, a set of handlers is executed in order of priority. Each handler is passed arguments and has a chance to influence the process. After execution, the \"trigger\" function returns a value based on the behavior of the handlers."
msgstr ""

#: ../../design/events.rst:24
# 1ca212012b6e4a64a41d924ce640487d
msgid "Elgg Events vs. Plugin Hooks"
msgstr ""

#: ../../design/events.rst:26
# 5c378d94170a4a3982c80af5d5e4c6ae
msgid "The main differences between `Elgg Events`_ and `Plugin Hooks`_ are:"
msgstr ""

#: ../../design/events.rst:28
# f088ba8045a945c092f7e05257e7cabe
msgid "Most Elgg events can be cancelled; unless the event is an \"after\" event, a handler that returns `false` can cancel the event, and no more handlers are called."
msgstr ""

#: ../../design/events.rst:31
# 6f9dd9ebab6648abbbfb0b8f979c2ac8
msgid "Plugin hooks cannot be cancelled; all handlers are always called."
msgstr ""

#: ../../design/events.rst:32
# d90bbfdc0405409a99fdbc7bbcc1ad17
msgid "Plugin hooks pass an arbitrary value through the handlers, giving each a chance to alter along the way."
msgstr ""

#: ../../design/events.rst:37
# b45155dbab2d41a792d229ee7f0d520f
msgid "Elgg Events"
msgstr ""

#: ../../design/events.rst:39
# 68d5e46358714155a47d606032158d5a
msgid "Elgg Events are triggered when an Elgg object is created, updated, or deleted; and at important milestones while the Elgg framework is loading. Examples: a blog post being created or a user logging in."
msgstr ""

#: ../../design/events.rst:43
# 2b68922ef68a4ea3b3e1f6ddab6eca67
msgid "Unlike `Plugin Hooks`_, *most Elgg events can be cancelled*, halting the execution of the handlers, and possibly cancelling an some action in the Elgg core."
msgstr ""

#: ../../design/events.rst:47
# 4495d7292d884dd0967956fdc04fe447
msgid "Each Elgg event has a name and an object type (system, user, object, relationship name, annotation, group) describing the type of object passed to the handlers."
msgstr ""

#: ../../design/events.rst:52
# 482558b487e246a292c3f03e63926cde
msgid "Before and After Events"
msgstr ""

#: ../../design/events.rst:54
# c98cb4c2da6f4f1293728ecc4a3862d4
msgid "Some events are split into \"before\" and \"after\". This avoids confusion around the state of the system while in flux. E.g. Is the user logged in during the [login, user] event?"
msgstr ""

#: ../../design/events.rst:58
# 59dda667711f41528010e7e8de8b8bdc
msgid "Before Events have names ending in \":before\" and are triggered before something happens. Like traditional events, handlers can cancel the event by returning `false`."
msgstr ""

#: ../../design/events.rst:62
# 58e5cea252c042cfbda4dc79fd842be5
msgid "After Events, with names ending in \":after\", are triggered after something happens. Unlike traditional events, handlers *cannot* cancel these events; all handlers will always be called."
msgstr ""

#: ../../design/events.rst:66
# 6fe5de81b1634306a610c9b750949414
msgid "Where before and after events are available, developers are encouraged to transition to them, though older events will be supported for backwards compatibility."
msgstr ""

#: ../../design/events.rst:71
# da708981175b4ea8acd609e5059eeaf8
msgid "Elgg Event Handlers"
msgstr ""

#: ../../design/events.rst:73
# 9690c3305aa040d392bbfeeeb51a5517
msgid "Elgg event handlers should have the following prototype:"
msgstr ""

#: ../../design/events.rst:88
# 370bf860a4c0417f88f98931384fdcbb
msgid "If the handler returns `false`, the event is cancelled, preventing execution of the other handlers. All other return values are ignored."
msgstr ""

#: ../../design/events.rst:92
# 674672e6d3b54f27a73a84a02458215b
msgid "Register to handle an Elgg Event"
msgstr ""

#: ../../design/events.rst:94
# 116c7ad8143e4b42ab7c3023b6d7812c
msgid "Register your handler to an event using ``elgg_register_event_handler``:"
msgstr ""

#: ../../design/events.rst:100
#: ../../design/events.rst:147
#: ../../design/events.rst:202
#: ../../design/events.rst:230
# 7ce4b9ee0c0b4642bc4f6bcb618226a6
# 6c15f75d20074909b598a0fd84f3e586
# 79f6d006e3a9401da5b86b2c44ae6d3e
# 650da180c37f418bb4953998897020b6
msgid "Parameters:"
msgstr ""

#: ../../design/events.rst:102
#: ../../design/events.rst:149
# 31c8f2a279cd42ba9e6027eb76854bed
# f2c3d32893e743b4afc5e249253dc26f
msgid "**$event** The event name."
msgstr ""

#: ../../design/events.rst:103
# 6b43ab32170f43ab8fe81baeccfa576c
msgid "**$object_type** The object type (e.g. \"user\" or \"object\") or 'all' for all types on which the event is fired."
msgstr ""

#: ../../design/events.rst:105
#: ../../design/events.rst:206
# 5eadc6fc1f344ffca6d209324cc67779
# 54fcd10f5e5342c2beb63010477eed2a
msgid "**$handler** The callback of the handler function."
msgstr ""

#: ../../design/events.rst:106
#: ../../design/events.rst:207
# f16397bbcdb94ccdb8948648cd6d217c
# 488afac3a0034ab38f1a50667e7d1a2c
msgid "**$priority** The priority - 0 is first and the default is 500."
msgstr ""

#: ../../design/events.rst:108
# 04ee6e756d314df98b6c538eb059340e
msgid "**Object** here does not refer to an ``ElggObject`` but rather a string describing any object in the framework: system, user, object, relationship, annotation, group."
msgstr ""

#: ../../design/events.rst:111
#: ../../design/events.rst:212
# d358e02df83244979c5943c65af5fffb
# d6289ba03f8e4f67a20cb6757f67b317
msgid "Example:"
msgstr ""

#: ../../design/events.rst:121
# 283787f1a4cf41dfa63bb63337346513
msgid "Trigger an Elgg Event"
msgstr ""

#: ../../design/events.rst:123
# 1ebbfaab0d164b46a5b122bb7e54c969
msgid "You can trigger a custom Elgg event using ``elgg_trigger_event``:"
msgstr ""

#: ../../design/events.rst:133
# 9a0d155775de47b293387751871d1834
msgid "For events with ambiguous states, like logging in a user, you should use `Before and After Events`_ by calling ``elgg_trigger_before_event`` or ``elgg_trigger_after_event``. This makes it clear for the event handler what state to expect and which events can be cancelled."
msgstr ""

#: ../../design/events.rst:150
# abc118fc077d44de83cdd159474a22ec
msgid "**$object_type** The object type (e.g. \"user\" or \"object\")."
msgstr ""

#: ../../design/events.rst:151
# 31f99a642e264d738bb15053c57edba6
msgid "**$object** The object (e.g. an instance of ``ElggUser`` or ``ElggGroup``)"
msgstr ""

#: ../../design/events.rst:153
# 785ea55d82ce4278951d1949347284af
msgid "The function will return ``false`` if any of the selected handlers returned ``false`` and the event is stoppable, otherwise it will return ``true``."
msgstr ""

#: ../../design/events.rst:159
# 41cb49d7c8dd4574b8f85e13a75af126
msgid "Plugin Hooks"
msgstr ""

#: ../../design/events.rst:161
# 25d953e06a7b418bb837466275b5b5b7
msgid "Plugin Hooks provide a way for plugins to collaboratively determine or alter a value. For example, to decide whether a user has permission to edit an entity or to add additional configuration options to a plugin."
msgstr ""

#: ../../design/events.rst:165
# 90b0a62ea6fa434ca0320e70028fb95b
msgid "A plugin hook has a value passed into the trigger function, and each handler has an opportunity to alter the value before it's passed to the next handler. After the last handler has completed, the final value is returned by the trigger."
msgstr ""

#: ../../design/events.rst:171
# 6e1e13982f564f80b6d91cfb401c32e6
msgid "Plugin Hook Handlers"
msgstr ""

#: ../../design/events.rst:173
# b2960dd684354dcc83eaaf7cb76a5515
msgid "Plugin hook handlers should have the following prototype:"
msgstr ""

#: ../../design/events.rst:189
# a87d160c9c24499a831cdaa17b51eae5
msgid "If the handler returns no value (or `null` explicitly), the plugin hook value is not altered. Otherwise the return value becomes the new value of the plugin hook. It will then be passed to the next handler as `$value`."
msgstr ""

#: ../../design/events.rst:194
# 3d85321fb2744c029393643cc5301049
msgid "Register to handle a Plugin Hook"
msgstr ""

#: ../../design/events.rst:196
# 90f0b4892c0b4d73b4a4be57639986d0
msgid "Register your handler to a plugin hook using ``elgg_register_plugin_hook_handler``:"
msgstr ""

#: ../../design/events.rst:204
#: ../../design/events.rst:232
# 766a15f65a424158972ff04e26538d2c
# 3ac468a42b03434fa26902a4047c5f02
msgid "**$hook** The name of the plugin hook."
msgstr ""

#: ../../design/events.rst:205
#: ../../design/events.rst:233
# 6ed6032cefd6468398aa56d33fb9d8c1
# 21b4b8548e744195b818aa542e104a4c
msgid "**$type** The type of the hook or 'all' for all types."
msgstr ""

#: ../../design/events.rst:209
# aabe2f58c77a4957bd52dc7cd29bc520
msgid "**Type** can vary in meaning. It may mean an Elgg entity type or something specific to the plugin hook name."
msgstr ""

#: ../../design/events.rst:221
# 44e20bb20d8c42848b5550009451687d
msgid "Trigger a Plugin Hook"
msgstr ""

#: ../../design/events.rst:223
# f14fa2ac7d204246af9083212f41c5dc
msgid "You can trigger a custom plugin hook using ``elgg_trigger_plugin_hook``:"
msgstr ""

#: ../../design/events.rst:234
# 951a043217494b73bf2471008b9c726e
msgid "**$params** Arbitrary data passed from the trigger to the handlers."
msgstr ""

#: ../../design/events.rst:235
# 1cf941bf30d94074944f6007aba162b8
msgid "**$value** The initial value of the plugin hook."
msgstr ""

#: ../../design/events.rst:237
# c89869ba146340ada0ef2fda53237bf3
msgid "The `$params` and `$value` arguments are reversed between the plugin hook handlers and trigger functions!"
msgstr ""

#: ../../design/i18n.rst:2
# a4f4f57dc28549f094993781782c3158
msgid "Internationalization"
msgstr ""

#: ../../design/i18n.rst:4
# cd12756b3a754efcb6df7d5bad71878e
msgid "Elgg 1.0+ departs from previous versions in that it uses a custom text array rather than gettext. This improves system performance and reliability of the translation system."
msgstr ""

#: ../../design/i18n.rst:7
# 039e96da1f244c7c8a4d94707d38ff79
msgid "TODO: more plz"
msgstr ""

#: ../../design/index.rst:2
# a21378af70a5469fb8a93f284ba6c73c
msgid "Design Docs"
msgstr ""

#: ../../design/index.rst:4
# 7dc723e820ce476a9587ea9306af9258
msgid "Gain a deep understanding of how Elgg works and why it's built the way it is."
msgstr ""

#: ../../design/loggable.rst:2
# 38d73da5139145b9b2c14e858e3a53f1
msgid "Loggable"
msgstr ""

#: ../../design/loggable.rst:4
# ddd264c201a3453ba7276f1451660387
msgid "Loggable is an interface inherited by any class that wants events relating to its member objects to be saved to the system log. ``ElggEntity`` and ``ElggExtender`` both inherit ``Loggable``."
msgstr ""

#: ../../design/loggable.rst:6
# 27db2f0c63224c13910885341c9c618e
msgid "Loggable defines several class methods that are used in saving to the default system log, and can be used to define your own (as well as for other purposes):"
msgstr ""

#: ../../design/loggable.rst:8
# 7c8322b264de473bab804cd3d8e22bb2
msgid "``getSystemLogID()`` Return a unique identifier for the object for storage in the system log. This is likely to be the object's GUID"
msgstr ""

#: ../../design/loggable.rst:9
# fbdf3cfbb1654e1b8832adb14180946c
msgid "``getClassName()`` Return the class name of the object"
msgstr ""

#: ../../design/loggable.rst:10
# a667ec6cc9f84869aeae09b8f2390ca1
msgid "``getType()`` Return the object type"
msgstr ""

#: ../../design/loggable.rst:11
# 5a6a1ed6c24a4167afee5ebcacc26fa3
msgid "``getSubtype()`` Get the object subtype"
msgstr ""

#: ../../design/loggable.rst:12
# 57412a8b053040a1b6285a66ab92782c
msgid "``getObjectFromID($id)`` For a given ID, return the object associated with it"
msgstr ""

#: ../../design/loggable.rst:13
# 3f7e8323ba7744848e3fc63837b8ceed
msgid "``getObjectOwnerGUID()`` Return the GUID of the owner of this object"
msgstr ""

#: ../../design/loggable.rst:16
# 3bb202cef5a64e1e860e8c0da48a4ce6
msgid "Database details"
msgstr ""

#: ../../design/loggable.rst:18
# 22247b19ed3d421391dcbcc594c3c5d8
msgid "The default system log is stored in the ``system_log`` :doc:`database table <database>`. It contains the following fields:"
msgstr ""

#: ../../design/loggable.rst:20
# 4019866ac111486dba226df896c8e987
msgid "**id** - A unique numeric row ID"
msgstr ""

#: ../../design/loggable.rst:21
# fc4e2c32ad794f1b8284679c7e35b4da
msgid "**object_id** - The GUID of the entity being acted upon"
msgstr ""

#: ../../design/loggable.rst:22
# b04576bb7928444ea4bd98d5a51c7b20
msgid "**object_class** - The class of the entity being acted upon (eg ElggObject)"
msgstr ""

#: ../../design/loggable.rst:23
# ebcad245f3224b8a8ee5d90f2b9d8916
msgid "**object_type** - The type of the entity being acted upon (eg object)"
msgstr ""

#: ../../design/loggable.rst:24
# 644fc73f45be4e16a7fb58be8c89f7f1
msgid "**object_subtype** - The subtype of the entity being acted upon (eg blog)"
msgstr ""

#: ../../design/loggable.rst:25
# e89031f7284241a3a5079b2f76106ac6
msgid "**event** - The event being logged (eg create or update)"
msgstr ""

#: ../../design/loggable.rst:26
# 55b08949f7314bd885839ee40b5e5796
msgid "**performed_by_guid** - The GUID of the acting entity (the user performing the action)"
msgstr ""

#: ../../design/loggable.rst:27
# fe41b5c487c84cf9a194308ed7ad06cb
msgid "**owner_guid** - The GUID of the user which owns the entity being acted upon"
msgstr ""

#: ../../design/loggable.rst:28
# c9728da6faae42b7a8232a50c537171b
msgid "**access_id** - The access restriction associated with this log entry"
msgstr ""

#: ../../design/loggable.rst:29
# d17950a493c0433299c96d602013c08a
msgid "**time_created** - The UNIX epoch timestamp of the time the event took place"
msgstr ""

#: ../../design/security.rst:2
# 252c7da28c55425eb11c173edf8ec5ac
msgid "Security"
msgstr ""

#: ../../design/security.rst:4
# 2593c81414e145cbb2322de2440311e5
msgid "Elgg’s approach to the various security issues common to all web applications."
msgstr ""

#: ../../design/security.rst:8
# a7436005ca054e109c8fd7c82b104004
msgid "To report a potential vulnerability in Elgg, email security@elgg.org."
msgstr ""

#: ../../design/security.rst:15
# f8a47d2e978f40078eb19535d9260a6a
msgid "Passwords"
msgstr ""

#: ../../design/security.rst:18
# 015906470a4745e69e0a3937ccd0c89f
msgid "Password validation"
msgstr ""

#: ../../design/security.rst:20
# ffa3771fb9f74380a822c7aa521476bf
msgid "The only restriction that Elgg places on a password is that it must be at least 6 characters long by default, though this may be changed in /engine/settings.php. Additional criteria can be added by a plugin by registering for the ``registeruser:validate:password`` plugin hook."
msgstr ""

#: ../../design/security.rst:23
# cea3115f8b5248279e04551c799a086e
msgid "Password salting"
msgstr ""

#: ../../design/security.rst:27
# 13b4f5ded597412e8612ba30f0f84c44
msgid "Elgg salts passwords with a unique 8 character random string. The salt is generated each time the password is set. The main security advantages of the salting are:"
msgstr ""

#: ../../design/security.rst:26
# b86ee48b324742bf9f354a975043ad7e
msgid "preventing anyone with access to the database from conducting a precomputed dictionary attack"
msgstr ""

#: ../../design/security.rst:27
# 1ca2fbec7f404b8db2aa8c4d2b488021
msgid "preventing a site administration from noting users with the same password."
msgstr ""

#: ../../design/security.rst:30
# 03d4709a0f644a26b034656bf7860501
msgid "Password hashing"
msgstr ""

#: ../../design/security.rst:32
# a32f7ffa90684bb98df14b14f9e89990
msgid "The hashed password is computed using md5 from the user's password text and the salt."
msgstr ""

#: ../../design/security.rst:35
# ca7c83e0680d43df8eb2274ceaa81c96
msgid "Password storage"
msgstr ""

#: ../../design/security.rst:37
# 49e881d996354e5cbc2e29b20474bf15
msgid "The hashed password and the salt are stored in the users table. Neither are stored in any cookies on a user's computer."
msgstr ""

#: ../../design/security.rst:40
# 6a999aa4c45b46b48951588ca9a2a4a3
msgid "Password throttling"
msgstr ""

#: ../../design/security.rst:42
# b6e3403816d5409eac86f5ebd1d57a0d
msgid "Elgg has a password throttling mechanism to make dictionary attacks from the outside very difficult. A user is only allowed 5 login attempts over a 5 minute period."
msgstr ""

#: ../../design/security.rst:45
# 7e76704a442243a0b994a46752b2743a
msgid "Password resetting"
msgstr ""

#: ../../design/security.rst:47
# ce0abcaa04d544679195cbccc790c8aa
msgid "If a user forgets his password, a new random password can be requested. After the request, an email is sent with a unique URL. When the user visits that URL, a new random password is sent to the user through email."
msgstr ""

#: ../../design/security.rst:50
# 3de9029764f54e92a69fff7156b3e8cc
msgid "Sessions"
msgstr ""

#: ../../design/security.rst:52
# c3d20b318b5849abb39f72d375121674
msgid "Elgg uses PHP's session handling with custom handlers. Session data is stored in the database. The session cookie contains the session id that links the user to the browser. The user's metadata is stored in the session including GUID, username, email address. The session's lifetime is controlled through the server's PHP configuration."
msgstr ""

#: ../../design/security.rst:55
# 392094e400b24152b1ae01124e243134
msgid "Session fixation"
msgstr ""

#: ../../design/security.rst:56
# 7d150f019f5745adaf4116394f84bf83
msgid "Elgg protects against session fixation by regenerating the session id when a user logs in."
msgstr ""

#: ../../design/security.rst:59
# 3d4e7ecd90fc4bf38637e0268f7e4628
msgid "Session hijacking"
msgstr ""

#: ../../design/security.rst:60
# 81c905bd17b34c94ac0403c31644117f
msgid "This section is questionable."
msgstr ""

#: ../../design/security.rst:62
# 9c86d4eb575d4dacac10450715a46329
msgid "Besides protecting against session fixation attacks, Elgg also has a further check to try to defeat session hijacking if the session identifier is compromised. Elgg stores a hash of the browser's user agent and a site secret as a session fingerprint. The use of the site secret is rather superfluous but checking the user agent might prevent some session hijacking attempts."
msgstr ""

#: ../../design/security.rst:65
# ada94fba66b1495699885b0790fbdcbb
msgid "“Remember me” cookie"
msgstr ""

#: ../../design/security.rst:66
# 229c4bd3a61242a7a36935cbf801f092
msgid "To allow users to stay logged in for a longer period of time regardless of whether the browser has been closed, Elgg uses a cookie (called elggperm) that contains what could be considered a super session identifier. This identifier is stored in a cookies table. When a session is being initiated, Elgg checks for the presence of the elggperm cookie. If it exists and the session code in the cookie matches the code in the cookies table, the corresponding user is automatically logged in."
msgstr ""

#: ../../design/security.rst:69
# 344c3688dd624a36b147c5eb8480cb1c
msgid "Alternative authentication"
msgstr ""

#: ../../design/security.rst:71
# 823f503f3a514e7f85f4c8ebae72dc6f
msgid "This section is very hand-wavy"
msgstr ""

#: ../../design/security.rst:73
# 0b0218cacc2d467cab341c9094441499
msgid "To replace Elgg's default user authentication system, a plugin would have to replace the default action with its own through ``register_action()``. It would also have to register its own pam handler using ``register_pam_handler()``."
msgstr ""

#: ../../design/security.rst:75
# 19b0bd5a3871490d843b8bec8ceb0d57
msgid "The ``pam_authenticate()`` function used to call the different modules has a bug related to the importance variable."
msgstr ""

#: ../../design/security.rst:79
# 78f24798bc9e499c8fcc3a47fca855ac
msgid "HTTPS"
msgstr ""

#: ../../design/security.rst:81
# cd6b32d568744fd0ae0598d22c1f127f
msgid "You must enable SSL support on your server for any of these techniques to work."
msgstr ""

#: ../../design/security.rst:83
# caf0b58ae37144de9f5fdf7fb1fc43a5
msgid "To make the login form submit over https, turn on login-over-ssl from Elgg’s admin panel."
msgstr ""

#: ../../design/security.rst:85
# 93d506e1a2274ee19f5acbadf4b6c844
msgid "You can also serve your whole site over SSL by simply changing the site URL to include “https” instead of just “http.”"
msgstr ""

#: ../../design/security.rst:88
# 04f47e1b2bf343c1918433128e002592
msgid "XSS"
msgstr ""

#: ../../design/security.rst:90
# 92a977d5afdb4fad82d0322655f5ad21
msgid "Filtering is used in Elgg to make XSS attacks more difficult. The purpose of the filtering is to remove Javascript and other dangerous input from users."
msgstr ""

#: ../../design/security.rst:92
# e2ffb4a713784942bb85f75b2d40002c
msgid "Filtering is performed through the function ``filter_tags()``. This function takes in a string and returns a filtered string. It triggers a ``validate, input`` plugin hook."
msgstr ""

#: ../../design/security.rst:94
# aad2a935de914f6f87a1b0cfb632cc17
msgid "By default Elgg comes with the htmLawed filtering code as a plugin. Developers can drop in any additional or replacement filtering code as a plugin."
msgstr ""

#: ../../design/security.rst:96
# f58ac664ac0340dda89e4e5b82086fcc
msgid "The ``filter_tags()`` function is called on any user input as long as the input is obtained through a call to ``get_input()``. If for some reason a developer did not want to perform the default filtering on some user input, the ``get_input()`` function has a parameter for turning off filtering."
msgstr ""

#: ../../design/security.rst:99
# d5faa1266ec34a8dae836fcf4c52ca2f
msgid "CSRF / XSRF"
msgstr ""

#: ../../design/security.rst:101
# 449ae6e5ee524a209de8b8bff495c9d5
msgid "Elgg generates security tokens to prevent `cross-site request forgery`_. These are embedded in all forms and state-modifying AJAX requests as long as the correct API is used. Read more in the :doc:`/guides/actions` developer guide."
msgstr ""

#: ../../design/security.rst:104
# e33dc40484624ae382cb4aeefd98e76f
msgid "SQL Injection"
msgstr ""

#: ../../design/security.rst:106
# b7e6b2e8ece941de9ff1b2c34c20efb5
msgid "Elgg’s API sanitizes all input before issuing DB queries. Read more in the :doc:`/design/database` design doc."
msgstr ""

#: ../../design/security.rst:109
# 27d67ebf1ba24f7883c377c82d27524f
msgid "Privacy"
msgstr ""

#: ../../design/security.rst:111
# 1246cbcb28a84f86ac54e1f7d14f043e
msgid "Elgg uses an ACL system to control which users have access to various pieces of content. Read more in the :doc:`/design/database` design doc."
msgstr ""

