# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Various
# This file is distributed under the same license as the Elgg package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Elgg 1.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-14 10:28+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../design/actions.rst:2
# ecd7764c1ea748b29ce33317ffe49a82
msgid "Actions"
msgstr ""

#: ../../design/actions.rst:4
# ca43e1116cb14370bafff91a7c7b8589
msgid "Actions are the primary way users interact with an Elgg site."
msgstr ""

#: ../../design/actions.rst:10
#: ../../design/amd.rst:8
#: ../../design/database.rst:11
#: ../../design/events.rst:9
# 5fc14bdaf191483590dd0230b0cd895e
# 8c3deaf7a6db48b6986d19952ce1b989
# 97415bedc65f44dd972f5eafc66197e9
# 4ee7fd37e3c44389a91e31629bc7cc05
msgid "Overview"
msgstr ""

#: ../../design/actions.rst:12
# 792d357456a746beb1c555f3ef666ea7
msgid "An action in Elgg is the code that runs to make changes to the database when a user does something. For example, logging in, posting a comment, and making a blog post are actions. The action script processes input, makes the appropriate modifications to the database, and provides feedback to the user about the action."
msgstr ""

#: ../../design/actions.rst:15
# 7ce812bc4a194191b581e2c57ab635e6
msgid "Action Handler"
msgstr ""

#: ../../design/actions.rst:17
# 71051b5d16454bee8946f55c9dff9258
msgid "Actions are registered during the boot process by calling ``elgg_register_action()``. All actions URLs start with ``action/`` and are served by Elgg's front end controller through the action service. This approach is different from traditional PHP applications that send information to a specific file. The action service performs :doc:`CSRF security checks </design/security>`, and calls the registered action script file, then optionally forwards the user to a new page. By using the action service instead of a single script file, Elgg automatically provides increased security and extensibility."
msgstr ""

#: ../../design/actions.rst:19
# b2aa1e1144a648d785caab3a249c5e3e
msgid "In Elgg 1.8 and before, actions were handled by an action handler script in ```engine/handlers/action_handler.php``. This required specific rewrite rules for URLs beginning with ``/action/``."
msgstr ""

#: ../../design/actions.rst:21
# fa0b84fb2b2244e297a461deed5296e7
msgid "See :doc:`/guides/actions` for details on how to register and construct an action. To look at the core actions, check out the directory /actions."
msgstr ""

#: ../../design/amd.rst:2
# dd50e61898ff4d558a01379f7e8b5888
msgid "AMD"
msgstr ""

#: ../../design/amd.rst:10
# 29a2b6ba404a4216a54c77cc6c800108
msgid "There are two JavaScript system in Elgg: the deprecated 1.8 system, and the newer `AMD (Asynchronous Module Definition) <http://requirejs.org/docs/whyamd.html>`_ compatible system introduced in 1.9."
msgstr ""

#: ../../design/amd.rst:13
# e617e326bada41cd832fec9b395350ba
msgid "This discusses the benefits of using AMD in Elgg."
msgstr ""

#: ../../design/amd.rst:16
# 7778150f1e414315a9fe5eeffc116c0d
msgid "Why AMD?"
msgstr ""

#: ../../design/amd.rst:18
# 1fc5d741e69a458e997d59ccd14e1886
msgid "We have been working hard to make Elgg's JavaScript more maintainable and useful. We made some strides in 1.8 with the introduction of the \"``elgg``\" JavaScript object and library, but have quickly realized the approach we were taking was not scalable."
msgstr ""

#: ../../design/amd.rst:22
# 52fcb924be6f4db48ff0df7d91819c81
msgid "The size of `JS on the web is growing <http://httparchive.org/trends.php?s=All&minlabel=Feb+11+2011&maxlabel=Feb+1+2013#bytesJS&reqJS>`_ quickly, and JS in Elgg is growing too. We want Elgg to be able to offer a solution that makes JS development as productive and maintainable as possible going forward."
msgstr ""

#: ../../design/amd.rst:27
# b76fde74499f423397de39746328d9f4
msgid "The `reasons to choose AMD <http://requirejs.org/docs/whyamd.html>`_ are plenteous and well-documented. Let's highlight just a few of the most relevant reasons as they relate to Elgg specifically."
msgstr ""

#: ../../design/amd.rst:32
# 5330155655814e308f49487c6d38d516
msgid "1. Simplified dependency management"
msgstr ""

#: ../../design/amd.rst:33
# a9923e733345448cb74a2e47434651fd
msgid "AMD modules load asynchronously and execute as soon as their dependencies are available, so this eliminates the need to specify \"priority\" and \"location\" when registering JS libs in Elgg. Also, you don't need to worry about explicitly loading a module's dependencies in PHP. The AMD loader (RequireJS in this case) takes care of all that hassle for you. It's also possible have `text dependencies <http://requirejs.org/docs/api.html#text>`_ with the RequireJS text plugin, so client-side templating should be a breeze."
msgstr ""

#: ../../design/amd.rst:41
# de6d02d0d62242ea9d993dd72db33e00
msgid "2. AMD works in all browsers. Today."
msgstr ""

#: ../../design/amd.rst:42
# 36ffd61f89ce4863928830d4b7fa842d
msgid "Elgg developers are already writing lots of JavaScript. We know you want to write more. We cannot accept waiting 5-10 years for a native JS modules solution to be available in all browsers before we can organize our JavaScript in a maintainable way."
msgstr ""

#: ../../design/amd.rst:47
# 4ac6364f348b443f90829cb03eb4957b
msgid "3. You do not need a build step to develop in AMD."
msgstr ""

#: ../../design/amd.rst:48
# 4209510d19cd4420b713fd2bb448074a
msgid "We like the edit-refresh cycle of web development. We wanted to make sure everyone developing in Elgg could continue experiencing that joy. Synchronous module formats like Closure or CommonJS just weren't an option for us. But even though AMD doesn't require a build step, *it is still very build-friendly*. Because of the ``define()`` wrapper, it's possible to concatenate multiple modules into a single file and ship them all at once in a production environment. [#]_"
msgstr ""

#: ../../design/amd.rst:54
# 892992655a4945529b10ea97c9276399
msgid "AMD is a battle-tested and well thought out module loading system for the web today. We're very thankful for the work that has gone into it, and are excited to offer it as the standard solution for JavaScript development in Elgg starting with Elgg 1.9."
msgstr ""

#: ../../design/amd.rst:58
# f343dd8959c54ddd9627bf28b8f867ec
msgid "This is not currently supported by Elgg core, but we'll be looking into it since reducing round-trips is critical for a good first-view experience, especially on mobile devices."
msgstr ""

#: ../../design/database.rst:2
# 2c59470acbab423887717f7a743c9026
msgid "Database"
msgstr ""

#: ../../design/database.rst:4
# e51dade03e6344449bf3081a5922a459
msgid "A thorough discussion of Elgg's data model design and motivation."
msgstr ""

#: ../../design/database.rst:0
#: ../../design/events.rst:0
#: ../../design/security.rst:0
# ea30388fc0944abb98c8e908cbfa96ad
# 6a436f6d817545678bc2b33edc596e72
# 37fe16c96f214cfa9b9e17416033a20b
msgid "Contents"
msgstr ""

#: ../../design/database.rst:13
# 80205499433f4c1299ecee19c2a31bf5
msgid "In Elgg, everything runs on a unified data model based on atomic units of data called entities."
msgstr ""

#: ../../design/database.rst:16
# dec4f465ecc6496a9a11b5d62949152d
msgid "Plugins are discouraged from interacting directly with the database, which creates a more stable system and a better user experience becase content created by different plugins can be mixed together in consistent ways. With this approach, plugins are faster to develop, and are at the same time much more powerful."
msgstr ""

#: ../../design/database.rst:22
# ecff57aac72c4fadaddd7bfcb80da45c
msgid "Every entity in the system inherits the ``ElggEntity`` class. This class controls access permissions, ownership"
msgstr ""

#: ../../design/database.rst:27
# ec75dffdd82148deb79fc6fffab6d1db
msgid "You can extend entities with extra information in two ways:"
msgstr ""

#: ../../design/database.rst:31
# 1502ebcb701b43bf9d6a2a7c21b0b362
msgid "``Metadata``: This is information describing the entity, usually"
msgstr ""

#: ../../design/database.rst:30
# 3176bf86032840698626cd961957f4de
msgid "added by the author of the entity when the entity is created. For example, tags, an ISBN number, a file location, or source language is metadata."
msgstr ""

#: ../../design/database.rst:36
# 30ef0118a5244ffaba30c5853c4a24b3
msgid "``Annotations``: This is information about the entity, usually"
msgstr ""

#: ../../design/database.rst:34
# 88704648d9e040dca59cc8943a5c5864
msgid "added by a third party after the entity is created. For example, ratings, likes, and votes are annotations. (Comments were before 1.9.)"
msgstr ""

#: ../../design/database.rst:39
# 12957855378c4e4792dd8fcbcb8153f7
msgid "Datamodel"
msgstr ""

#: ../../design/database.rst:46
# a10740c0e63c426891f26bb7e383a79e
msgid "The Elgg data model diagram"
msgstr ""

#: ../../design/database.rst:49
# f486d54b97504b40b7fa4a6014e28f76
msgid "Entities"
msgstr ""

#: ../../design/database.rst:51
# 056ed071cd8648cdbc157ae018648684
msgid "``ElggEntity`` is the base class for the Elgg data model and supports a common set of properties and methods."
msgstr ""

#: ../../design/database.rst:54
# 68e47f79e93242e78dc82b9a1fca5b46
msgid "A numeric Globally Unique IDentifier (See `GUIDs`_)."
msgstr ""

#: ../../design/database.rst:55
# 9f873813051a49568d4e4cab9852b70c
msgid "Access permissions. (When a plugin requests data, it never gets to touch data that the current user doesn't have permission to see.)"
msgstr ""

#: ../../design/database.rst:57
# 339a8b6fd1bd41e485f7ea5035dd638f
msgid "An arbitrary subtype (more below)."
msgstr ""

#: ../../design/database.rst:58
# d5367544fb72402fa187bf9063961499
msgid "An owner."
msgstr ""

#: ../../design/database.rst:59
# cc870a89d2ff448cb9e0928bede55848
msgid "The site that the entity belongs to."
msgstr ""

#: ../../design/database.rst:60
# 948bc85b1cac4953953dd250ae182d4f
msgid "A container, used to associate content with a group or a user."
msgstr ""

#: ../../design/database.rst:63
# 883f3334cb28408d982858c1071f1292
msgid "Types"
msgstr ""

#: ../../design/database.rst:65
# 08b15ac956b9480a9f377613b8fa6d36
msgid "*Actual* entities will be instances of four different subclasses, each having a distinct **type** property and their own additional properties and methods."
msgstr ""

#: ../../design/database.rst:69
# d177fbf8bf4c451e97b33858c890e05a
msgid "Type"
msgstr ""

#: ../../design/database.rst:69
# 6ceafff574e94fdab7d930031d885736
msgid "PHP class"
msgstr ""

#: ../../design/database.rst:69
#: ../../design/database.rst:594
# 85fada2c7dd44250a9640544443449c4
# 3b7a4a8c8ffd45248c752d2c6dcc2af7
msgid "Represents"
msgstr ""

#: ../../design/database.rst:71
# 70e45939829f4283a7c127989c0f26ad
msgid "object"
msgstr ""

#: ../../design/database.rst:71
# a56f7559a9f04f38bbca9bc6e40f32aa
msgid "``ElggObject``"
msgstr ""

#: ../../design/database.rst:71
# 1feed3475042494dab1b48521ecf5f25
msgid "Most user-created content, like blog posts, uploads, and bookmarks."
msgstr ""

#: ../../design/database.rst:72
# d1c8b09b249a4ee8b51c3a133b2b451c
msgid "group"
msgstr ""

#: ../../design/database.rst:72
# 3d4e65b84280419eb80816f2a566749b
msgid "``ElggGroup``"
msgstr ""

#: ../../design/database.rst:72
# e417d028c37e44469b0acb8855e810e2
msgid "An organized group of users with its own profile page"
msgstr ""

#: ../../design/database.rst:73
# 9a6a16adf4e74890a9c7a7ac7adfa1dd
msgid "user"
msgstr ""

#: ../../design/database.rst:73
# 11bccc5942a847d98cf611f24682f4bd
msgid "``ElggUser``"
msgstr ""

#: ../../design/database.rst:73
# 7da9e34dfe5c49d687a1696080a92118
msgid "A system user"
msgstr ""

#: ../../design/database.rst:74
# 781709fe44624000a439a793f3c76b4b
msgid "site"
msgstr ""

#: ../../design/database.rst:74
# b6357e7fd24244efa4e4a0d61323312b
msgid "``ElggSite``"
msgstr ""

#: ../../design/database.rst:74
# 92b5d8fcf3484b28af8679d8dd246892
msgid "The site served by the Elgg installation"
msgstr ""

#: ../../design/database.rst:77
# 6ab69decd3964be08d8f6b0fbc7f7fca
msgid "Each has its own extended API. E.g. objects have a ``title`` and ``description``, users have a ``username`` and a way to set their password, and so on."
msgstr ""

#: ../../design/database.rst:81
# 33899eafe9fe4d4e915ac606c48401c3
msgid "Subtypes"
msgstr ""

#: ../../design/database.rst:83
# e74908ef59344b01a4f9f3f75a428242
msgid "Each entity also has a custom string **subtype**, which plugins use to further specialize the entity. Elgg makes it easy to query specific subtypes as well as assign them special behaviors and views."
msgstr ""

#: ../../design/database.rst:86
# 619b98cf0e6f4de5af63d221f2c95506
msgid "Subtypes are most commonly given to instances of ElggObject to denote the kind of content created. E.g. the blog plugin creates objects with subtype ``\"blog\"``."
msgstr ""

#: ../../design/database.rst:89
# 09348faad1fa43cfa1f7482e42d1cf1a
msgid "For historic reasons, the subtype API is a bit complex, but boils down to: write to ``->subtype`` before saving, otherwise always read ``getSubtype()``. Below are more details."
msgstr ""

#: ../../design/database.rst:93
# 81bd7293e597407f859e89dd8a011ac7
msgid "Subtype Gotchas"
msgstr ""

#: ../../design/database.rst:95
# f0abe7a5e91f49b7acc76423bab71073
msgid "Before an entity's ``save()`` method is called, the subtype can be set by writing a string to the ``subtype`` property."
msgstr ""

#: ../../design/database.rst:97
# 7f185684a1364771bd4fb1e91927847e
msgid "*Subtype cannot be changed after saving.*"
msgstr ""

#: ../../design/database.rst:98
# 269b761eb5e84aa5b256c497ab4ea9b5
msgid "After saving, you must always use ``getSubtype()`` to read it."
msgstr ""

#: ../../design/database.rst:99
# 4e10acdfe6ac4b35867da3df739fc596
msgid "If no subtype was set, ``\"\"`` is returned, however some parts of the Elgg API (like Views) may map this value to the string ``\"default\"``. E.g. a group with ``getSubtype() === \"\"`` will be rendered using the view ``\"group/default\"``."
msgstr ""

#: ../../design/database.rst:102
# 48e9723ff77045cf9f4ecc8111f77394
msgid "Read carefully the documentation for ``elgg_get_entities()`` before trying to match subtypes; this"
msgstr ""

#: ../../design/database.rst:103
# 24df65acbbad413ab0cd3db21b9c057e
msgid "API is a bit of a minefield. E.g. you cannot use ``\"\"`` to fetch entities with the default subtype."
msgstr ""

#: ../../design/database.rst:106
# e628c50dc00745c6b16c8568f82a598e
msgid "GUIDs"
msgstr ""

#: ../../design/database.rst:108
# 13c2d872eb0b4c69b464e581064f6d9a
msgid "A GUID is an integer that uniquely identifies every entity in an Elgg installation (a Globally Unique IDentifier). It's assigned automatically when the entity is first saved and can never be changed."
msgstr ""

#: ../../design/database.rst:112
# f089ecffa6d843858a798430bb8e7e00
msgid "Some Elgg API functions work with GUIDs instead of ``ElggEntity`` objects."
msgstr ""

#: ../../design/database.rst:115
# 8a2442a355de4ee189913a6bfab99af5
msgid "ElggObject"
msgstr ""

#: ../../design/database.rst:117
# 9ece30a99ac34ca2b269d48f9565a1c0
msgid "The ``ElggObject`` entity type represents arbitrary content within an Elgg install; things like blog posts, uploaded files, etc."
msgstr ""

#: ../../design/database.rst:120
# 512613b3dd584fc38d33817f4b33dd70
msgid "Beyond the standard ElggEntity properties, ElggObjects also support:"
msgstr ""

#: ../../design/database.rst:122
# fa0a6b64a4c84e1d89219bb831953959
msgid "``title`` The title of the object (HTML escaped text)"
msgstr ""

#: ../../design/database.rst:123
# c224f14a4c8d4cae92f0df8fbb978450
msgid "``description`` A description of the object (HTML)"
msgstr ""

#: ../../design/database.rst:125
# e811c21919044b77a8d6fa125b0eb995
msgid "Most other data about the object is generally stored via metadata."
msgstr ""

#: ../../design/database.rst:128
# bff1d45218a047cfad1e9be9bf3e8800
msgid "ElggUser"
msgstr ""

#: ../../design/database.rst:130
# 867d23fc2afb44cda771c94113590720
msgid "The ``ElggUser`` entity type represents users within an Elgg install. These will be set to disabled until their accounts have been activated (unless they were created from within the admin panel)."
msgstr ""

#: ../../design/database.rst:134
# 561c2c6d328840a68775e914a4ca01aa
msgid "Beyond the standard ElggEntity properties, ElggUsers also support:"
msgstr ""

#: ../../design/database.rst:136
# bfb9cf55b9414a2b92a9ddbc565cfaac
msgid "``name`` The user's plain text name. e.g. \"Hugh Jackman\""
msgstr ""

#: ../../design/database.rst:137
# 8ef6cb8174bb4ed4bc1b226f1e4231a6
msgid "``username`` Their login name. E.g. \"hjackman\""
msgstr ""

#: ../../design/database.rst:138
# dee54f7c89b4423d81de66e200beebbf
msgid "``password`` A hashed version of their password"
msgstr ""

#: ../../design/database.rst:139
# c1d81ef7ae0947d8a5894782ccaea090
msgid "``salt`` The salt that their password has been hashed with"
msgstr ""

#: ../../design/database.rst:140
# 3d3a7d005d474309a1bf66fade4a8761
msgid "``email`` Their email address"
msgstr ""

#: ../../design/database.rst:141
# 3e23433b11af457e8839aa1132dda848
msgid "``language`` Their default language code."
msgstr ""

#: ../../design/database.rst:142
# 5196fc44ed114b7faaff1cc11c8f6aed
msgid "``code`` Their session code (moved to a separate table in 1.9)."
msgstr ""

#: ../../design/database.rst:143
# daba524c98a441db889c9b06868a1ea1
msgid "``last_action`` The UNIX timestamp of the last time they loaded a page"
msgstr ""

#: ../../design/database.rst:144
# d8ed211d673f42dea1da20265d7a4b56
msgid "``prev_last_action`` The previous value of ``last_action``"
msgstr ""

#: ../../design/database.rst:145
# 0e7105d87941491f81155058f501aac8
msgid "``last_login`` The UNIX timestamp of their last log in"
msgstr ""

#: ../../design/database.rst:146
# f1112c5cca174b00b045852b2aaf1e78
msgid "``prev_last_login`` the previous value of ``last_login``"
msgstr ""

#: ../../design/database.rst:149
# 980963a909d342989633b4174c190148
msgid "ElggSite"
msgstr ""

#: ../../design/database.rst:151
# 1286a2dd273d4c5d99fba53590d885ca
msgid "The ``ElggSite`` entity type represents sites within your Elgg install. Most installs will have only one."
msgstr ""

#: ../../design/database.rst:154
# 730f47651fa94edd8c6dc90bffb87b0d
msgid "Beyond the standard ElggEntity properties, ElggSites also support:"
msgstr ""

#: ../../design/database.rst:156
# 292005bc48244d6485914631f90944eb
msgid "``name`` The site name"
msgstr ""

#: ../../design/database.rst:157
# b794e4b2cfe8407da83f76b38b348d56
msgid "``description`` A description of the site"
msgstr ""

#: ../../design/database.rst:158
# 3a0b460f1c6645488877bc8e24965bfc
msgid "``url`` The address of the site"
msgstr ""

#: ../../design/database.rst:161
# 93d6e2c204434556b5af287cd1b3879d
msgid "ElggGroup"
msgstr ""

#: ../../design/database.rst:163
# 865f3132d33f4caa978468192831be66
msgid "The ``ElggGroup`` entity type represents an association of Elgg users. Users can join, leave, and post content to groups."
msgstr ""

#: ../../design/database.rst:166
# 01e8d03b08794e22bf3654b56607ca12
msgid "Beyond the standard ElggEntity properties, ElggGroups also support:"
msgstr ""

#: ../../design/database.rst:168
# 3b2230fe222243d7a1514135f45309e0
msgid "``name`` The group's name (HTML escaped text)"
msgstr ""

#: ../../design/database.rst:169
# 2d7cd819918f4ca0b8e57f76ddd3a02b
msgid "``description`` A description of the group (HTML)"
msgstr ""

#: ../../design/database.rst:171
# 6de7712c859943a7ad37ac2ef78a1fa3
msgid "``ElggGroup`` has addition methods to manage content and membership."
msgstr ""

#: ../../design/database.rst:174
# 004cfbb7fc6d4384912bd80710fd7870
msgid "The Groups plugin"
msgstr ""

#: ../../design/database.rst:176
# d596811923d94a44b638096423dcfde4
msgid "Not to be confused with the entity type ``ElggGroup``, Elgg comes with a plugin called \"Groups\" that provides a default UI/UX for site users to interact with groups. Each group is given a discussion forum and a profile page linking users to content within the group."
msgstr ""

#: ../../design/database.rst:181
# ae02249a25794728aa8f4023b4a059be
msgid "You can alter the user experience via the traditional means of extending plugins or completely replace the Groups plugin with your own."
msgstr ""

#: ../../design/database.rst:184
# 3dd825e07b024aaf9e87f0c023a45e89
msgid "Because ``ElggGroup`` can be subtyped like all other ElggEntities, you can have multiple types of groups running on the same site."
msgstr ""

#: ../../design/database.rst:188
# 26131a57641d4aafaa4f25292732a519
msgid "Writing a group-aware plugin"
msgstr ""

#: ../../design/database.rst:190
# a0b950209ad240e5a8c307458c111632
msgid "Plugin owners need not worry too much about writing group-aware functionality, but there are a few key points:"
msgstr ""

#: ../../design/database.rst:194
# e77ba6ce17e2491b9f941b1c67b3a692
msgid "Adding content"
msgstr ""

#: ../../design/database.rst:196
# 66a5d200b61c45eab3b3f72d16a516d3
msgid "By passing along the group as ``container_guid`` via a hidden input field, you can use a single form and action to add both user and group content."
msgstr ""

#: ../../design/database.rst:199
# b9fd947de7254413b999f51ae1b4004e
msgid "Use `can_write_to_container <http://reference.elgg.org/entities_8php.html#16a972909c7cb75f646cb707be001a6f>`_ to determine whether or not the current user has the right to add content to a group."
msgstr ""

#: ../../design/database.rst:204
# f56bd4d24bb541d2a398582530ec5c40
msgid "Be aware that you will then need to pass the container GUID or username to the page responsible for posting and the accompanying value, so that this can then be stored in your form as a hidden input field, for easy passing to your actions. Within a \"create\" action, you'll need to take in this input field and save it as a property of your new element (defaulting to the current user's container):"
msgstr ""

#: ../../design/database.rst:232
# 6f2500abd68240f29d5da3ab1a23e3d6
msgid "Usernames and page ownership"
msgstr ""

#: ../../design/database.rst:234
# b71588cafc9f4b179cc570de142d1be2
msgid "Groups have a simulated username of the form *group:\\ GUID*, which you can get the value of by checking ``$group->username``. If you pass this username to a page on the URL line as part of the ``username`` variable (i.e., ``/yourpage?username=group:nnn``), Elgg will automatically register that group as being the owner of the page (unless overridden)."
msgstr ""

#: ../../design/database.rst:241
# f698579f554549bc99a257a97d916cfc
msgid "Juggling users and groups"
msgstr ""

#: ../../design/database.rst:243
# 20f60be641ec45c9980764ec8d758fae
msgid "In fact, ``[[Engine/DataModel/Entities/ElggGroup|ElggGroup]]`` simulates most of the methods of ``[[Engine/DataModel/Entities/ElggUser|ElggUser]]``. You can grab the icon, name etc using the same calls, and if you ask for a group's friends, you'll get its members. This has been designed specifically for you to alternate between groups and users in your code easily."
msgstr ""

#: ../../design/database.rst:251
# 121b59efd9e043e7b406aa5535de88dc
msgid "Menu options"
msgstr ""

#: ../../design/database.rst:253
# da6f387036dc4a73b8bb8931126ee563
msgid "***This section is deprecated as of Elgg 1.8***"
msgstr ""

#: ../../design/database.rst:255
# 7db4dc85ff2e4a348fcfb62fc336c053
msgid "The final piece of the puzzle, for default groups, is to add a link to your functionality from the group's profile. Here we'll use the file plugin as an example."
msgstr ""

#: ../../design/database.rst:259
# f4e98ad8265543fa9f41debc3b3aa997
msgid "This involves creating a view within your plugin - in this case file/menu - which will extend the group's menu. File/menu consists of a link within paragraph tags that points to the file repository of the page\\_owner():"
msgstr ""

#: ../../design/database.rst:272
# ad107a0528ea4997907a8afbc0c3b930
msgid "You can then extend the group's menu view with this one, within your plugin's input function (in this case file\\_init):"
msgstr ""

#: ../../design/database.rst:280
# 424d42fb737645daba4e6b75cb87b840
msgid "Ownership"
msgstr ""

#: ../../design/database.rst:282
# 5d8599b822104c04a79beb1025c9d9bd
msgid "Entities have a ``owner_guid`` GUID property, which defines its owner. Typically this refers to the GUID of a user, although sites and users themselves often have no owner (a value of 0)."
msgstr ""

#: ../../design/database.rst:286
# 17b77f37913b45148cafc69764fb117b
msgid "The ownership of an entity dictates, in part, whether or not you can access or edit that entity."
msgstr ""

#: ../../design/database.rst:290
# ff33119e0bbb45d4bcfff482d91fa042
msgid "Containers"
msgstr ""

#: ../../design/database.rst:292
# 482616c15d0c40dca8d25df5862fe611
msgid "In order to easily search content by group or by user, content is generally set to be \"contained\" by either the user who posted it, or the group to which the user posted. This means the new object's ``container_guid`` property will be set to the GUID of the current ElggUser or the target ElggGroup."
msgstr ""

#: ../../design/database.rst:297
# 87267057c27a4cd0b6f50f424deb0785
msgid "E.g., three blog posts may be owned by different authors, but all be contained by the group they were posted to."
msgstr ""

#: ../../design/database.rst:300
# 54d79b46a7a84cc79bf85c3a76ed3048
msgid "Note: This is not always true. Comment entities are contained by the object commented upon, and in some 3rd party plugins the container may be used to model a parent-child relationship between entities (e.g. a \"folder\" object containing a file object)."
msgstr ""

#: ../../design/database.rst:306
# 8e695a65bb8c450aaa71a7e43a816cea
msgid "Annotations"
msgstr ""

#: ../../design/database.rst:308
# cf271d791dfc414284c7c25c815f4275
msgid "Annotations are pieces of data attached to an entity that allow users to leave ratings, or other relevant feedback. A poll plugin might register votes as annotations. Before Elgg 1.9, comments and group discussion replies were stored as annotations."
msgstr ""

#: ../../design/database.rst:313
# a5d7eae9fd684249b088502f0f2b1897
msgid "Annotations are stored as instances of the ``ElggAnnotation`` class."
msgstr ""

#: ../../design/database.rst:315
# 8e6737b6a11042aab585b15202860d01
msgid "Each annotation has:"
msgstr ""

#: ../../design/database.rst:317
# 85fd5ef3238640b78b6d0cae00903111
msgid "An internal annotation type (like *comment*)"
msgstr ""

#: ../../design/database.rst:318
# e825ee5df4224a7bb5bff25943bc299a
msgid "A value (which can be a string or integer)"
msgstr ""

#: ../../design/database.rst:319
# 7c14f3aa1cbc43ce90c1b07cba327d23
msgid "An access permission distinct from the entity it's attached to"
msgstr ""

#: ../../design/database.rst:320
# 2416b936526d4e9884f45548521d1b77
msgid "An owner"
msgstr ""

#: ../../design/database.rst:323
# 4604ae8992c64b22a3c9d194dae85614
msgid "Adding an annotation"
msgstr ""

#: ../../design/database.rst:325
# 53b4a26a3a804bc2a91a0f8bfdd46d1f
msgid "The easiest way to annotate is to use the ``annotate`` method on an entity, which is defined as:"
msgstr ""

#: ../../design/database.rst:338
# c04956dbafd14c6b8ef2fee82e87e5fe
msgid "For example, to leave a rating on an entity, you might call:"
msgstr ""

#: ../../design/database.rst:345
# 259a75b3192d42818e0b015b5d57006d
msgid "Reading annotations"
msgstr ""

#: ../../design/database.rst:347
# a36fd00a671849d297498731fdea55f0
msgid "To retrieve annotations on an object, you can call the following method:"
msgstr ""

#: ../../design/database.rst:358
# 7cbf4f87380d4a198de538a70462420c
msgid "If your annotation type largely deals with integer values, a couple of useful mathematical functions are provided:"
msgstr ""

#: ../../design/database.rst:369
# 5087fa2d48af4705baafdd7f866f1a99
msgid "Useful helper functions"
msgstr ""

#: ../../design/database.rst:372
# 4b4d12243b524fb3ab7677abd9165258
msgid "Comments"
msgstr ""

#: ../../design/database.rst:374
# d362e6f4462045a499b251e9e6edfd72
msgid "If you want to provide comment functionality on your plugin objects, the following function will provide the full listing, form and actions:"
msgstr ""

#: ../../design/database.rst:383
# 3d8398344e2b47e18de3f419e01bf362
msgid "Metadata"
msgstr ""

#: ../../design/database.rst:385
# b675df453d364b69993d0bfc100d3d8b
msgid "Metadata in Elgg allows you to store extra data on an ``entity`` beyond the built-in fields that entity supports. For example, ``ElggObjects`` only support the basic entity fields plus title and description, but you might want to include tags or an ISBN number. Similarly, you might want users to be able to save a date of birth."
msgstr ""

#: ../../design/database.rst:391
# 4fa58bc9d05a49e5b7033e2cbca2320c
msgid "Under the hood, metadata is stored as an instance of the ``ElggMetadata`` class, but you don't need to worry about that in practice (although if you're interested, see the ``ElggMetadata`` class reference). What you need to know is:"
msgstr ""

#: ../../design/database.rst:396
# 91457316f8034ebbab708f7eab25d996
msgid "Metadata has an owner and access ID, both of which may be different to the owner of the entity it's attached to"
msgstr ""

#: ../../design/database.rst:398
# 6d64161c617d489792a2826d59828046
msgid "You can potentially have multiple items of each type of metadata attached to a single entity"
msgstr ""

#: ../../design/database.rst:402
# 47dd22d15d704a8d89c2f859be86ab08
msgid "The simple case"
msgstr ""

#: ../../design/database.rst:405
#: ../../design/database.rst:474
# 59b1cac5fece4676848aad4bd1bcdd8d
# daa469798c1f4410bc0067bdfdf2c2e0
msgid "Adding metadata"
msgstr ""

#: ../../design/database.rst:407
# e0c762fb178642b1b48ad06832663396
msgid "To add a piece of metadata to an entity, just call:"
msgstr ""

#: ../../design/database.rst:413
# 80e654f6065e4d90b7debb6cf7b95183
msgid "For example, to add a date of birth to a user:"
msgstr ""

#: ../../design/database.rst:419
# 3ab6607b9ef248c3bfbf2655b7941194
msgid "Or to add a couple of tags to an object:"
msgstr ""

#: ../../design/database.rst:425
# e2b7c01bc2874bd8afa1a51e1a2a3574
msgid "When adding metadata like this:"
msgstr ""

#: ../../design/database.rst:427
# 44536a7229cc47498fe2cb3e9e096c16
msgid "The owner is set to the currently logged-in user"
msgstr ""

#: ../../design/database.rst:428
# e4ef8561d00b4de4b98711ef18edae82
msgid "Access permissions are inherited from the entity"
msgstr ""

#: ../../design/database.rst:429
# 0d706f77607f463b917d0d60ab4488dd
msgid "Reassigning a piece of metadata will overwrite the old value"
msgstr ""

#: ../../design/database.rst:431
# ecea528dbe904210ae896df511f57e0b
msgid "This is suitable for most purposes. Be careful to note which attributes are metadata and which are built in to the entity type that you are working with. You do not need to save an entity after adding or updating metadata. You do need to save an entity if you have changed one of its built in attributes. As an example, if you changed the access id of an ElggObject, you need to save it or the change isn't pushed to the database."
msgstr ""

#: ../../design/database.rst:440
#: ../../design/database.rst:516
# 0ddbd91b828547fba2d0009a2db12b72
# c06d1b9ee8c949d9ad3422eab1d58e40
msgid "Reading metadata"
msgstr ""

#: ../../design/database.rst:442
# f88727b8be6a4bfb9a4d3dbd1cf67000
msgid "To retrieve metadata, treat it as a property of the entity:"
msgstr ""

#: ../../design/database.rst:448
# f2d3d4c885264983bfd6dd6214e04a85
msgid "Note that this will return the absolute value of the metadata. To get metadata as an ElggMetadata object, you will need to use the methods described in the *finer control* section below."
msgstr ""

#: ../../design/database.rst:452
# e3d29bf2c4f7465a99c941e5603c6992
msgid "If you stored multiple values in this piece of metadata (as in the \"tags\" example above), you will get an array of all those values back. If you stored only one value, you will get a string or integer back. Storing an array with only one value will return a string back to you. E.g."
msgstr ""

#: ../../design/database.rst:464
# d59c2be93ee348039243ae2a2131edcf
msgid "To always get an array back, simply cast to an array;"
msgstr ""

#: ../../design/database.rst:471
# 070ee04aa0ba465abad044e880f35964
msgid "Finer control"
msgstr ""

#: ../../design/database.rst:476
# b1de92904b0f4702b27227b50a0e3949
msgid "If you need more control, for example to assign an access ID other than the default, you can use the ``create_metadata`` function, which is defined as follows:"
msgstr ""

#: ../../design/database.rst:492
# a0bd75d3a24c4a1b8b5e750f2cc18c55
msgid "For single values, you can therefore write metadata as follows (taking the example of a date of birth attached to a user):"
msgstr ""

#: ../../design/database.rst:499
# c5bc0e49e288410ba74073c7850b976a
msgid "For multiple values, you will need to iterate through and call ``create_metadata`` on each one. The following piece of code comes from the profile save action:"
msgstr ""

#: ../../design/database.rst:512
# c685366ce12f43e59bb99dd16f40d80b
msgid "Note that the *allow multiple* setting is set to *false* in the first iteration and *true* thereafter."
msgstr ""

#: ../../design/database.rst:518
# f0dc40a430054952981110340a2f6953
msgid "``elgg_get_metadata`` is the best function for retrieving metadata as ElggMetadata objects:"
msgstr ""

#: ../../design/database.rst:521
# e8d6b8d1cc0d4e04a350294db143e1ce
msgid "E.g., to retrieve a user's DOB"
msgstr ""

#: ../../design/database.rst:530
# ebb2481d26474da8bdfafd4ff05cad02
msgid "Or to get all metadata objects:"
msgstr ""

#: ../../design/database.rst:542
# 1602420ee12249ca82e938b375f8e726
msgid "Common mistakes"
msgstr ""

#: ../../design/database.rst:545
# b871884828f94423ba499d9f2fad01d6
msgid "\"Appending\" metadata"
msgstr ""

#: ../../design/database.rst:547
# 672a72e7381a4f42bc6f1c756046663f
msgid "Note that you cannot \"append\" values to metadata arrays as if they were normal php arrays. For example, the following will not do what it looks like it should do."
msgstr ""

#: ../../design/database.rst:556
# 82a022b2f7cc4999971b931d9032026c
msgid "Trying to store hashmaps"
msgstr ""

#: ../../design/database.rst:558
# a1212de8308d4a9eb355f3414601a4e3
msgid "Elgg does not support storing ordered maps (name/value pairs) in metadata. For example, the following does not work as you might first expect it to:"
msgstr ""

#: ../../design/database.rst:567
# 812b97b0b629408784b0707de236a2ff
msgid "You can instead store the information like so:"
msgstr ""

#: ../../design/database.rst:576
# ee752a870cfa40d2a046a1ac3f16175b
msgid "Storing GUIDs in metadata"
msgstr ""

#: ../../design/database.rst:578
# 51012560495146018022a575b0aaa9c2
msgid "Though there are some cases to store entity GUIDs in metadata, `Relationships`_ are a much better construct for relating entities to each other."
msgstr ""

#: ../../design/database.rst:583
# d8f4e89e41254a499440b556ca7aa252
msgid "Relationships"
msgstr ""

#: ../../design/database.rst:585
# 1d028fc378924b0dad1de72dfee66dc6
msgid "Relationships allow you to bind entities together. Examples: an artist has fans, a user is a member of an organization, etc."
msgstr ""

#: ../../design/database.rst:588
# ac121ff230dd480daf3d39af0cc15071
msgid "The class ``ElggRelationship`` models a directed relationship between two entities, making the statement:"
msgstr ""

#: ../../design/database.rst:591
# 7d93104e39a041e69f468ecdbd793344
msgid "\"**{subject}** is a **{noun}** of **{target}**.\""
msgstr ""

#: ../../design/database.rst:594
# 315a4032826646fca802573073b5b69f
msgid "API name"
msgstr ""

#: ../../design/database.rst:594
# 27c219afbff64dfa87e04b89f0176956
msgid "Models"
msgstr ""

#: ../../design/database.rst:596
# cca8c091853a4001a34f88c51a6eb691
msgid "``guid_one``"
msgstr ""

#: ../../design/database.rst:596
# e7e98ac7ebae4f9b8d9e8d5bb3b50cc6
msgid "The subject"
msgstr ""

#: ../../design/database.rst:596
# a9e7bed8bb714a8bac3d690f2e8ebb58
msgid "Which entity is being bound"
msgstr ""

#: ../../design/database.rst:597
# 431773841a6b4f7fb62cc58961e1b6e9
msgid "``relationship``"
msgstr ""

#: ../../design/database.rst:597
# a37dde78bff8454cbd15b0828e19e11b
msgid "The noun"
msgstr ""

#: ../../design/database.rst:597
# f318d2ad15d84dbcb748ba5b6fb8c23d
msgid "The type of relationship"
msgstr ""

#: ../../design/database.rst:598
# e2b1346581184eb68c3b743fa1a8abd0
msgid "``guid_two``"
msgstr ""

#: ../../design/database.rst:598
# 08af8e6245434c4db61263b622c47657
msgid "The target"
msgstr ""

#: ../../design/database.rst:598
# a8d44da5215244b5bc964223571b5247
msgid "The entity to which the subject is bound"
msgstr ""

#: ../../design/database.rst:601
# 90b614e425db48a0be2fbe3795a99dbe
msgid "The type of relationship may alternately be a verb, making the statement:"
msgstr ""

#: ../../design/database.rst:603
# 4a9348b1c58140f0b84fe2aecd63035b
msgid "\"**{subject}** **{verb}** **{target}**.\""
msgstr ""

#: ../../design/database.rst:605
# 0d74f8b7d83545238c4c6990b76ab7b5
msgid "E.g. User A \"likes\" blog post B"
msgstr ""

#: ../../design/database.rst:607
# ab6d572f7ebb40709ab8c1da4f5d8e1a
msgid "**Each relationship has direction.** Imagine an archer shoots an arrow at a target; The arrow moves in one direction, binding the subject (the archer) to the target."
msgstr ""

#: ../../design/database.rst:611
# 6cd887225a844f7db1a480112121da7a
msgid "**A relationship does not imply reciprocity**. **A** follows **B** does not imply that **B** follows **A**."
msgstr ""

#: ../../design/database.rst:614
# 9d06a572e23b4ec0a474d836f559a94f
msgid "**Relationships_ do not have access control.** They're never hidden from view and can be edited with code at any privilege level, with the caveat that *the entities* in a relationship may be invisible due to access control!"
msgstr ""

#: ../../design/database.rst:620
# c85bac19d078422cb3d3a0d12fc44780
msgid "Working with relationships"
msgstr ""

#: ../../design/database.rst:623
# 2848de88ba9f41c0bbc100e1ebcd64f5
msgid "Creating a relationship"
msgstr ""

#: ../../design/database.rst:625
# f4cd40476e28418e923eab931dd62da1
msgid "E.g. to establish that \"**$user** is a **fan** of **$artist**\" (user is the subject, artist is the target):"
msgstr ""

#: ../../design/database.rst:636
# 2809e5d135c84fa8a30c6393ec208e48
msgid "This triggers the event [create, relationship], passing in the created ``ElggRelationship`` object. If a handler returns ``false``, the relationship will not be created and ``$success`` will be ``false``."
msgstr ""

#: ../../design/database.rst:642
# 415c4d7f31f943fb95d2ab047b93ab4c
msgid "Verifying a relationship"
msgstr ""

#: ../../design/database.rst:644
# d247c60ccedf413596ce8829d912d5c3
msgid "E.g. to verify that \"**$user** is a **fan** of **$artist**\":"
msgstr ""

#: ../../design/database.rst:652
# b8f50abbffbf492fbab8d9b2b6667994
msgid "Note that, if the relationship exists, ``check_entity_relationship()`` returns an ``ElggRelationship`` object:"
msgstr ""

#: ../../design/database.rst:663
# e64bcc72e42e4fe2b1e00a6592fb207a
msgid "Deleting a relationship"
msgstr ""

#: ../../design/database.rst:665
# fe9e08424e574d359488d5853bf1e963
msgid "E.g. to be able to assert that \"**$user** is no longer a **fan** of **$artist**\":"
msgstr ""

#: ../../design/database.rst:671
# fe64b8483ffd4a6d97573e1ac3832ae4
msgid "This triggers the event [delete, relationship], passing in the associated ``ElggRelationship`` object. If a handler returns ``false``, the relationship will remain, and ``$was_removed`` will be ``false``."
msgstr ""

#: ../../design/database.rst:676
# f8906406dd0944fda4bd58d7abca24c3
msgid "Other useful functions:"
msgstr ""

#: ../../design/database.rst:678
# b61eac77d0094999b4e2d7932ddff02e
msgid "``delete_relationship()`` : delete by ID"
msgstr ""

#: ../../design/database.rst:679
# 7096f702274f4f5ab805b7b7bfa7c3dd
msgid "``remove_entity_relationships()`` : delete those relating to an entity (*note:* in versions before Elgg 1.9, this did not trigger delete events)"
msgstr ""

#: ../../design/database.rst:682
# a49b02481da742e49b412e89ef385b7c
msgid "Finding relationships and related entities"
msgstr ""

#: ../../design/database.rst:684
# 96a1525641ac47ae80521842e5fc6eb1
msgid "Below are a few functions to fetch relationship objects and/or related entities. A few are listed below:"
msgstr ""

#: ../../design/database.rst:687
# 4bfea985bce24941909c4fe360efb33c
msgid "``get_entity_relationships()`` : fetch relationships by subject or target entity"
msgstr ""

#: ../../design/database.rst:688
# 9cf0b1e61afb468c85c46c80287de92e
msgid "``get_relationship()`` : get a relationship object by ID"
msgstr ""

#: ../../design/database.rst:689
# 165437196ec44d69a983be9e483739ee
msgid "``elgg_get_entities_from_relationship()`` : fetch entities in relationships in a variety of ways"
msgstr ""

#: ../../design/database.rst:692
# 57f08c88d02b4ce08d0a736b519272ee
msgid "E.g. retrieving users who joined your site in January 2014."
msgstr ""

#: ../../design/database.rst:706
# 76109e486700424287f388d78e9e294c
msgid "Access Control"
msgstr ""

#: ../../design/database.rst:708
# 5e52f60717d844ad8dc20bec9fb52aec
msgid "Granular access controls are one of the fundamental design principles in Elgg, and a feature that has been at the centre of the system throughout its development. The idea is simple: a user should have full control over who sees an item of data he or she creates."
msgstr ""

#: ../../design/database.rst:714
# fd1936642db94574991702aedb87523b
msgid "Access controls in the data model"
msgstr ""

#: ../../design/database.rst:716
# ea2a2c1a595b44d8b73e1b7602e48a06
msgid "In order to achieve this, every entity, annotation and piece of metadata contains an ``access_id`` property, which in turn corresponds to one of the pre-defined access controls or an entry in the ``access_collections`` database table."
msgstr ""

#: ../../design/database.rst:722
# 3a82b32828524c0c943c0b403a2fdf64
msgid "Pre-defined access controls"
msgstr ""

#: ../../design/database.rst:724
# e756fb0f3f814b3fb4e98cb760b70569
msgid "``ACCESS_PRIVATE`` (value: 0) Private."
msgstr ""

#: ../../design/database.rst:725
# 849d056a0cc54bac80ed147eb4783b82
msgid "``ACCESS_LOGGED_IN`` (value: 1) Logged in users."
msgstr ""

#: ../../design/database.rst:726
# e9a6050d34144a16ab424a575c6b332e
msgid "``ACCESS_PUBLIC`` (value: 2) Public data."
msgstr ""

#: ../../design/database.rst:727
# ad67c4ff509b4bd4bca12152fe01d82d
msgid "``ACCESS_FRIENDS`` (value: -2) Owner and his/her friends."
msgstr ""

#: ../../design/database.rst:730
# 8fb803dc5b564b9b92f0b33364645134
msgid "User defined access controls"
msgstr ""

#: ../../design/database.rst:732
# 7836c7820c15443f99e3d0286329fa91
msgid "You may define additional access groups and assign them to an entity, annotation or metadata. A number of functions have been defined to assist you; see the `access library reference`_ for more information."
msgstr ""

#: ../../design/database.rst:737
# 0d99b89517e14e32b93786cd34670aae
msgid "How access affects data retrieval"
msgstr ""

#: ../../design/database.rst:739
# 8a7a7cd31ab14bcdbbe56f2acfffc767
msgid "All data retrieval functions above the database layer - for example ``get_entities`` and its cousins - will only return items that the current user has access to see. It is not possible to retrieve items that the current user does not have access to. This makes it very hard to create a security hole for retrieval."
msgstr ""

#: ../../design/database.rst:748
# 91535365e0d64146bf9c1d17aed76d19
msgid "Write access"
msgstr ""

#: ../../design/database.rst:750
# dfaaa19f379d436f9023ee11c79b1128
msgid "The following rules govern write access:"
msgstr ""

#: ../../design/database.rst:752
# bb0a3de19bff44fabeb0c86ef2662b6e
msgid "The owner of an entity can always edit it"
msgstr ""

#: ../../design/database.rst:753
# bdddbcf23c634afba8f530db43d24e03
msgid "The owner of a container can edit anything therein (note that this does not mean that the owner of a group can edit anything therein)"
msgstr ""

#: ../../design/database.rst:755
# c5022f3a3fde49e8a6175055246a42a6
msgid "Admins can edit anything"
msgstr ""

#: ../../design/database.rst:757
# 3885874dc1684e70b274fb4fd0f06140
msgid "You can override this behaviour using a :ref:`plugin hook <design/events#plugin-hooks>` called ``permissions_check``, which passes the entity in question to any function that has announced it wants to be referenced. Returning ``true`` will allow write access; returning ``false`` will deny it. See :ref:`the plugin hook reference for permissions\\_check <guides/hooks-list#permission-hooks>` for more details."
msgstr ""

#: ../../design/database.rst:765
# eedac6ea474f42bc94cbccc3d7c12df4
msgid "`Access library reference`_"
msgstr ""

#: ../../design/database.rst:770
# 778ec2cb8e28498c8659620c8d9b996b
msgid "Schema"
msgstr ""

#: ../../design/database.rst:772
# 9bbeb51c050640039d3ea5b7f00fcda8
msgid "The database contains a number of primary tables and secondary tables. Its schema table is stored in ``/engine/schema/mysql.sql``."
msgstr ""

#: ../../design/database.rst:775
# f3f1870165af452788845a4d99743dc1
msgid "Each table is prefixed by \"prefix\\_\", this is replaced by the Elgg framework during installation."
msgstr ""

#: ../../design/database.rst:779
# b2014dfef9f04db5aa256e248a143368
msgid "Main tables"
msgstr ""

#: ../../design/database.rst:781
# c19340bf745d4c82a498a25928e2ffe3
msgid "This is a description of the main tables. Keep in mind that in a given Elgg installation, the tables will have a prefix (typically \"elgg\\_\")."
msgstr ""

#: ../../design/database.rst:785
# c940665bf07548c5bb5f0592c56fe33e
msgid "Table: entities"
msgstr ""

#: ../../design/database.rst:787
# 0ab46952ab8646e6b4318a7055df6d04
msgid "This is the main `Entities`_ table containing Elgg users, sites, objects and groups. When you first install Elgg this is automatically populated with your first site."
msgstr ""

#: ../../design/database.rst:791
# 4cf12829826140e6a2557e69192cf841
msgid "It contains the following fields:"
msgstr ""

#: ../../design/database.rst:793
# 35bd9cadc2f741cfb2dddadb31d2f604
msgid "**guid** An auto-incrementing counter producing a GUID that uniquely identifies this entity in the system."
msgstr ""

#: ../../design/database.rst:795
# 4db988d67d2c46149d9d727f5d779997
msgid "**type** The type of entity - object, user, group or site"
msgstr ""

#: ../../design/database.rst:796
# 02496951333548e587a716777148521e
msgid "**subtype** A reference to the `entity_subtypes` table, or ``0`` for the default subtype."
msgstr ""

#: ../../design/database.rst:797
# b09dfdb21d564228820fadf45e3bfc36
msgid "**owner\\_guid** The GUID of the owner's entity."
msgstr ""

#: ../../design/database.rst:798
# 9fa5c521af4d4e60908e95d5098bb361
msgid "**site\\_guid** The site the entity belongs to."
msgstr ""

#: ../../design/database.rst:799
# f40e941f04af456592701d362d9e03c8
msgid "**container\\_guid** The GUID this entity is contained by - either a user or a group."
msgstr ""

#: ../../design/database.rst:801
# 9174608804b041dab109df6d57a018a9
msgid "**access\\_id** Access controls on this entity."
msgstr ""

#: ../../design/database.rst:802
# 7b56b6e9f88f449d98be4b2a99aa704d
msgid "**time\\_created** Unix timestamp of when the entity is created."
msgstr ""

#: ../../design/database.rst:803
# b688138fbe664a019d362e5615c3945d
msgid "**time\\_updated** Unix timestamp of when the entity was updated."
msgstr ""

#: ../../design/database.rst:804
# a23e5512b8324445b484f7a9bede0c02
msgid "**enabled** If this is 'yes' an entity is accessible, if 'no' the entity has been disabled (Elgg treats it as if it were deleted without actually removing it from the database)."
msgstr ""

#: ../../design/database.rst:809
# fbbeccba9141497eb8225ba84e0d9b11
msgid "Table: entity\\_subtypes"
msgstr ""

#: ../../design/database.rst:811
# 42d41b52ef03436eb49ff2ba0352cc03
msgid "This table contains entity subtype information:"
msgstr ""

#: ../../design/database.rst:813
#: ../../design/database.rst:823
#: ../../design/database.rst:841
# 211cf42a66224c9ea3ec19a8bd815dcb
# 49c94b0dc83d498ebc300c991e3d52a9
# 0db3bda6958042dcb981a729ebe0b0dd
msgid "**id** A counter."
msgstr ""

#: ../../design/database.rst:814
# 4f442b92eb47410aafca80cc1d7d33f8
msgid "**type** The type of entity - object, user, group or site."
msgstr ""

#: ../../design/database.rst:815
# bc8ac246721d4d5aa9fa3b5aa9204a9b
msgid "**subtype** The subtype name as a string."
msgstr ""

#: ../../design/database.rst:816
# 3839560b04c8494a835101000ff115c1
msgid "**class** Optional class name if this subtype is linked with a class"
msgstr ""

#: ../../design/database.rst:819
# e497d0a1916548d58e7cf96202b622fb
msgid "Table: metadata"
msgstr ""

#: ../../design/database.rst:821
# 58d70999dd134fdcbd584c99438d6ece
msgid "This table contains `Metadata`_, extra information attached to an entity."
msgstr ""

#: ../../design/database.rst:824
#: ../../design/database.rst:842
# 2be5625790a045fa8ec350c3d96cd6a3
# 00040819d6834e25a145fb0d5cd04cf5
msgid "**entity\\_guid** The entity this is attached to."
msgstr ""

#: ../../design/database.rst:825
# 3d4c670207a543d9aee5666b8f7c7d74
msgid "**name\\_id** A link to the metastrings table defining the name table."
msgstr ""

#: ../../design/database.rst:827
#: ../../design/database.rst:845
# c91f97d4d751484a9207c0d95a25e7c8
# 70b2a72b726f47219a6d8627dc49f438
msgid "**value\\_id** A link to the metastrings table defining the value."
msgstr ""

#: ../../design/database.rst:828
#: ../../design/database.rst:846
# 7bf82a30647b442db45815e7f9e4f280
# cb62f1dea49c4225aff2f91e54e98535
msgid "**value\\_type** The value class, either text or an integer."
msgstr ""

#: ../../design/database.rst:829
#: ../../design/database.rst:847
# 77b9e3f505434917a8e21ed583f0433e
# bc312742c7704db7bb454aa981b6d02b
msgid "**owner\\_guid** The owner GUID of the owner who set this item of metadata."
msgstr ""

#: ../../design/database.rst:831
#: ../../design/database.rst:849
# 770363b80ef14d1c9aac70ff104070d4
# f8489c7eb8e24e83afbd3b0680e68e3f
msgid "**access\\_id** An Access controls on this item of metadata."
msgstr ""

#: ../../design/database.rst:832
#: ../../design/database.rst:850
# 4cbd9ac0173444cbab623f36ff6bada2
# a45d9b92b7364e4280caf28d00046ddd
msgid "**time\\_created** Unix timestamp of when the metadata is created."
msgstr ""

#: ../../design/database.rst:833
#: ../../design/database.rst:851
# b1aaf2cd73fb451fab402896af84a23c
# fd1ae5da0bf9428395732fd8e1cb4204
msgid "**enabled** If this is 'yes' an item is accessible, if 'no' the item has been deleted."
msgstr ""

#: ../../design/database.rst:837
# d71e4dc1b9a744808af0e24a4d93457e
msgid "Table: annotations"
msgstr ""

#: ../../design/database.rst:839
# ef788b984cb94d9583120baecccbe2f4
msgid "This table contains `Annotations`_, this is distinct from `Metadata`_."
msgstr ""

#: ../../design/database.rst:843
# 902875382ecb4354bf0d7939d8ad5ea1
msgid "**name\\_id** A link to the metastrings table defining the type of annotation."
msgstr ""

#: ../../design/database.rst:855
# df3cb36bea9a4990ad329c8c0e8da18e
msgid "Table: relationships"
msgstr ""

#: ../../design/database.rst:857
# 050b8f75caac4566a06ee9094bfc59d9
msgid "This table defines `Relationships`_, these link one entity with another."
msgstr ""

#: ../../design/database.rst:859
# 896f6166c3654a4188e9f98384f10d37
msgid "**guid\\_one** The GUID of the subject entity."
msgstr ""

#: ../../design/database.rst:860
# 823a155ae6da45878ee23ec8a2861184
msgid "**relationship** The type of the relationship."
msgstr ""

#: ../../design/database.rst:861
# 73afdf5a20eb4ee99c41b8dcef723ade
msgid "**guid\\_two** The GUID of the target entity."
msgstr ""

#: ../../design/database.rst:864
# aecee83cd69e450c89ca67c436a39db4
msgid "Table: objects\\_entity"
msgstr ""

#: ../../design/database.rst:866
# 1df3a76cf9164efca3f69e1e7ce9d467
msgid "Extra information specifically relating to objects. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:871
# ebe752257fe946d495aa659552c5292d
msgid "Table: sites\\_entity"
msgstr ""

#: ../../design/database.rst:873
# 9be8759d6bec412bbbdd8e81f04f380e
msgid "Extra information specifically relating to sites. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:878
# e4aefadad678498eb6e353b080ca34ac
msgid "Table: users\\_entity"
msgstr ""

#: ../../design/database.rst:880
# ae8b50096aea4dc3977d1d3542961b42
msgid "Extra information specifically relating to users. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:885
# bc5a65001eb64f38a6008785e85eab81
msgid "Table: groups\\_entity"
msgstr ""

#: ../../design/database.rst:887
# 9909d3d317d94e1aac72946eaebafd71
msgid "Extra information specifically relating to groups. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:892
# bb5af697279b45b695d84966ea903c0d
msgid "Table: metastrings"
msgstr ""

#: ../../design/database.rst:894
# 1a873375ab784b69a897df9127dcb09a
msgid "Metastrings contain the actual string of metadata which is linked to by the metadata and annotations tables."
msgstr ""

#: ../../design/database.rst:897
# 2b3d1bdabb5b4bbf9d879d067bf33795
msgid "This is to avoid duplicating strings, saving space and making database lookups more efficient."
msgstr ""

#: ../../design/database.rst:900
# 7b38aad5e28e404c958d8f5e9636b652
msgid "Core developers will place schema upgrades in ``/engine/schema/upgrades/*``."
msgstr ""

#: ../../design/events.rst:2
# 9fa8fdf0472d4f3f86711896e557d77d
msgid "Events and Plugin Hooks"
msgstr ""

#: ../../design/events.rst:11
# 3c2ca7fd97604722a34d78b954d0c7b2
msgid "Elgg has an event system that can be used to replace or extend core functionality."
msgstr ""

#: ../../design/events.rst:14
# 3311c7ef8ac241cbbb2bde7836e76ad0
msgid "Plugins influence the system by creating handlers (`callables <http://php.net/manual/en/language.types.callable.php>`_ such as functions and methods) and registering them to handle two types of events: `Elgg Events`_ and `Plugin Hooks`_."
msgstr ""

#: ../../design/events.rst:18
# 8103189dc3794efc891a1338d33fc141
msgid "When an event is triggered, a set of handlers is executed in order of priority. Each handler is passed arguments and has a chance to influence the process. After execution, the \"trigger\" function returns a value based on the behavior of the handlers."
msgstr ""

#: ../../design/events.rst:24
# f0b628217b5444b48fe62625a651f162
msgid "Elgg Events vs. Plugin Hooks"
msgstr ""

#: ../../design/events.rst:26
# 85fbc365a9094dc2b300cb9b7f4f77b4
msgid "The main differences between `Elgg Events`_ and `Plugin Hooks`_ are:"
msgstr ""

#: ../../design/events.rst:28
# b1413a32377c41e5923521f6c9574bec
msgid "Most Elgg events can be cancelled; unless the event is an \"after\" event, a handler that returns `false` can cancel the event, and no more handlers are called."
msgstr ""

#: ../../design/events.rst:31
# 6572fd948c414345a82c855fecd7cee7
msgid "Plugin hooks cannot be cancelled; all handlers are always called."
msgstr ""

#: ../../design/events.rst:32
# 3b2b29f50a6c4c66bf38b6da892612a1
msgid "Plugin hooks pass an arbitrary value through the handlers, giving each a chance to alter along the way."
msgstr ""

#: ../../design/events.rst:37
# 3d608ce0504b4a1686bf7bb6082107f3
msgid "Elgg Events"
msgstr ""

#: ../../design/events.rst:39
# 3a31908668df44b281747da21fc7cdb7
msgid "Elgg Events are triggered when an Elgg object is created, updated, or deleted; and at important milestones while the Elgg framework is loading. Examples: a blog post being created or a user logging in."
msgstr ""

#: ../../design/events.rst:43
# 1b14a1ee97d346848e73e3dd82bf495b
msgid "Unlike `Plugin Hooks`_, *most Elgg events can be cancelled*, halting the execution of the handlers, and possibly cancelling an some action in the Elgg core."
msgstr ""

#: ../../design/events.rst:47
# d92bfa907cad4ce0b5c06d19b630cb34
msgid "Each Elgg event has a name and an object type (system, user, object, relationship name, annotation, group) describing the type of object passed to the handlers."
msgstr ""

#: ../../design/events.rst:52
# 14df62af4eab4a9ea149e51f6bfaa737
msgid "Before and After Events"
msgstr ""

#: ../../design/events.rst:54
# 90fdf2d8bee64ddbb7d6b7f842b67e74
msgid "Some events are split into \"before\" and \"after\". This avoids confusion around the state of the system while in flux. E.g. Is the user logged in during the [login, user] event?"
msgstr ""

#: ../../design/events.rst:58
# c8373db6c7184c5bbb65fa936ebf001d
msgid "Before Events have names ending in \":before\" and are triggered before something happens. Like traditional events, handlers can cancel the event by returning `false`."
msgstr ""

#: ../../design/events.rst:62
# 1621ed4c38b145559143a2ce31c606aa
msgid "After Events, with names ending in \":after\", are triggered after something happens. Unlike traditional events, handlers *cannot* cancel these events; all handlers will always be called."
msgstr ""

#: ../../design/events.rst:66
# 9d4589c680f145b19893a311caa56332
msgid "Where before and after events are available, developers are encouraged to transition to them, though older events will be supported for backwards compatibility."
msgstr ""

#: ../../design/events.rst:71
# f477fcdaa96444f6868d147bf02cdcf2
msgid "Elgg Event Handlers"
msgstr ""

#: ../../design/events.rst:73
# fb142eeb7ba34739a0d930119ea02aed
msgid "Elgg event handlers should have the following prototype:"
msgstr ""

#: ../../design/events.rst:88
# b58ef17a860e4fb493c3e2d5e974e9a0
msgid "If the handler returns `false`, the event is cancelled, preventing execution of the other handlers. All other return values are ignored."
msgstr ""

#: ../../design/events.rst:92
# a0ed49fb81c74c7a90aad2adcfc80b88
msgid "Register to handle an Elgg Event"
msgstr ""

#: ../../design/events.rst:94
# 4613f514dc3d482d8c326d6b414e1017
msgid "Register your handler to an event using ``elgg_register_event_handler``:"
msgstr ""

#: ../../design/events.rst:100
#: ../../design/events.rst:147
#: ../../design/events.rst:202
#: ../../design/events.rst:230
# 44a7c1574a0d4487b056f62d653bd925
# 22cf843a0aa048e992e33ac1a5c81b9a
# a69d8598711d4e54beacb33b2a9e2c9e
# 8999b4a1e8954042a8e0157b6694e32d
msgid "Parameters:"
msgstr ""

#: ../../design/events.rst:102
#: ../../design/events.rst:149
# e4ee9ce1bd0646f4850160cf68cfb208
# 2f81c6bc6ea14abeb8b406e28453e7ae
msgid "**$event** The event name."
msgstr ""

#: ../../design/events.rst:103
# ddebf0a2a08a40849ae2f5ebf81c5216
msgid "**$object_type** The object type (e.g. \"user\" or \"object\") or 'all' for all types on which the event is fired."
msgstr ""

#: ../../design/events.rst:105
#: ../../design/events.rst:206
# d9b2d056ef9c4b3b8b321df66bed9eb8
# 4e9c83a237844fb8963b29c76edd5d30
msgid "**$handler** The callback of the handler function."
msgstr ""

#: ../../design/events.rst:106
#: ../../design/events.rst:207
# 90605c5a86d8471284986dcd857506f9
# 84bd4f0c82744f048111eae0ec9dc307
msgid "**$priority** The priority - 0 is first and the default is 500."
msgstr ""

#: ../../design/events.rst:108
# edbd4814598c467bae54decc526996dd
msgid "**Object** here does not refer to an ``ElggObject`` but rather a string describing any object in the framework: system, user, object, relationship, annotation, group."
msgstr ""

#: ../../design/events.rst:111
#: ../../design/events.rst:212
# f4dfa87c02a744c68f78142ed4250bdd
# cce339ade8c7451aa8bf50345db336f9
msgid "Example:"
msgstr ""

#: ../../design/events.rst:121
# 87c3691925864e7896b899677335b274
msgid "Trigger an Elgg Event"
msgstr ""

#: ../../design/events.rst:123
# 28b3002d229c48958a9ed4de11597387
msgid "You can trigger a custom Elgg event using ``elgg_trigger_event``:"
msgstr ""

#: ../../design/events.rst:133
# d37280bd86b644b5b09a2b1f900cc58c
msgid "For events with ambiguous states, like logging in a user, you should use `Before and After Events`_ by calling ``elgg_trigger_before_event`` or ``elgg_trigger_after_event``. This makes it clear for the event handler what state to expect and which events can be cancelled."
msgstr ""

#: ../../design/events.rst:150
# 577dfe33431645d2af311dac4f993a55
msgid "**$object_type** The object type (e.g. \"user\" or \"object\")."
msgstr ""

#: ../../design/events.rst:151
# 6390ae9e10dc45cebe8c4a49c9011e11
msgid "**$object** The object (e.g. an instance of ``ElggUser`` or ``ElggGroup``)"
msgstr ""

#: ../../design/events.rst:153
# 4a1356c5c4284ce59bf4ad836bf81b81
msgid "The function will return ``false`` if any of the selected handlers returned ``false`` and the event is stoppable, otherwise it will return ``true``."
msgstr ""

#: ../../design/events.rst:159
# d7cb434e7bcd4f6192708f9f6fa99773
msgid "Plugin Hooks"
msgstr ""

#: ../../design/events.rst:161
# 1681d4a6b8ce4f4d9ad2b037acba39c8
msgid "Plugin Hooks provide a way for plugins to collaboratively determine or alter a value. For example, to decide whether a user has permission to edit an entity or to add additional configuration options to a plugin."
msgstr ""

#: ../../design/events.rst:165
# 68bf182ff4734a7a8d74474f26eb9512
msgid "A plugin hook has a value passed into the trigger function, and each handler has an opportunity to alter the value before it's passed to the next handler. After the last handler has completed, the final value is returned by the trigger."
msgstr ""

#: ../../design/events.rst:171
# 5c4d581ecc3549e2bb0483dd1c8cdcfd
msgid "Plugin Hook Handlers"
msgstr ""

#: ../../design/events.rst:173
# a838c71603114f4b8f1489f9b112fbb3
msgid "Plugin hook handlers should have the following prototype:"
msgstr ""

#: ../../design/events.rst:189
# fc5c69f6704545ffa2ee8f1422ba18f7
msgid "If the handler returns no value (or `null` explicitly), the plugin hook value is not altered. Otherwise the return value becomes the new value of the plugin hook. It will then be passed to the next handler as `$value`."
msgstr ""

#: ../../design/events.rst:194
# a5d2454339be4ae1b6cb798976152c15
msgid "Register to handle a Plugin Hook"
msgstr ""

#: ../../design/events.rst:196
# 676902a94019460c888bd0cac347226c
msgid "Register your handler to a plugin hook using ``elgg_register_plugin_hook_handler``:"
msgstr ""

#: ../../design/events.rst:204
#: ../../design/events.rst:232
# f32b9e951dad40daba7737e26f4ab8e2
# be058de3b44f4f3cb6505c2094ff3884
msgid "**$hook** The name of the plugin hook."
msgstr ""

#: ../../design/events.rst:205
#: ../../design/events.rst:233
# 78b7c1d32da5457daeac5389f64aca2e
# a59553dcd22a44ae89bbb36e20437173
msgid "**$type** The type of the hook or 'all' for all types."
msgstr ""

#: ../../design/events.rst:209
# e9e8efad72cc4757ae298b7bd14011b2
msgid "**Type** can vary in meaning. It may mean an Elgg entity type or something specific to the plugin hook name."
msgstr ""

#: ../../design/events.rst:221
# 35ded92e96cf4da3bafcff74a2b30e0a
msgid "Trigger a Plugin Hook"
msgstr ""

#: ../../design/events.rst:223
# 73e5c3b883814ba3bd6afa5ed1501401
msgid "You can trigger a custom plugin hook using ``elgg_trigger_plugin_hook``:"
msgstr ""

#: ../../design/events.rst:234
# f7ed6c52b6784c49aef2f6fecb7fe5e0
msgid "**$params** Arbitrary data passed from the trigger to the handlers."
msgstr ""

#: ../../design/events.rst:235
# 26e5ff37dc394d7e838e0837564fe914
msgid "**$value** The initial value of the plugin hook."
msgstr ""

#: ../../design/events.rst:237
# 8bbb57edd8fd4c42b3294c64fc5b7125
msgid "The `$params` and `$value` arguments are reversed between the plugin hook handlers and trigger functions!"
msgstr ""

#: ../../design/events.rst:241
# 8899d8e936f94c32b6121846d2a47802
msgid "Unregister Event/Hook Handlers"
msgstr ""

#: ../../design/events.rst:243
# 10b6e5987aa144d5b0453087ba71d776
msgid "The functions ``elgg_unregister_event_handler`` and ``elgg_unregister_plugin_hook_handler`` can be used to remove handlers already registered by another plugin or Elgg core. The parameters are in the same order as the registration functions, except there's no priority parameter."
msgstr ""

#: ../../design/events.rst:251
# 60649bbf6b584118a0451ab1814f0b77
msgid "Anonymous functions or invokable objects cannot be unregistered, but dynamic method callbacks can be unregistered by giving the static version of the callback:"
msgstr ""

#: ../../design/events.rst:263
# 1a1a9aa385014ea99430619ed89b26b4
msgid "Even though the event handler references a dynamic method call, the code above will successfully remove the handler."
msgstr ""

#: ../../design/i18n.rst:2
# 8d04697311aa406cbf69cfe41a4f4e38
msgid "Internationalization"
msgstr ""

#: ../../design/i18n.rst:4
# 485a3cea15bb429eba92dd448e16e826
msgid "Elgg 1.0+ departs from previous versions in that it uses a custom text array rather than gettext. This improves system performance and reliability of the translation system."
msgstr ""

#: ../../design/i18n.rst:7
# b0a319850b454677a5625742da9b2b5d
msgid "TODO: more plz"
msgstr ""

#: ../../design/index.rst:2
# 9521cfee455d40ceb2c4f577c3ab6811
msgid "Design Docs"
msgstr ""

#: ../../design/index.rst:4
# e3b62452f6f247df9792bc4536862264
msgid "Gain a deep understanding of how Elgg works and why it's built the way it is."
msgstr ""

#: ../../design/loggable.rst:2
# a73a029c22944e73b4905f64d01bd077
msgid "Loggable"
msgstr ""

#: ../../design/loggable.rst:4
# a90d655b23c44fc189aa735b4d200f68
msgid "Loggable is an interface inherited by any class that wants events relating to its member objects to be saved to the system log. ``ElggEntity`` and ``ElggExtender`` both inherit ``Loggable``."
msgstr ""

#: ../../design/loggable.rst:6
# 3b8b61e076fc4ac2bbd1307cd467d5a5
msgid "Loggable defines several class methods that are used in saving to the default system log, and can be used to define your own (as well as for other purposes):"
msgstr ""

#: ../../design/loggable.rst:8
# d9ef66f418e54c26b0391df026f2c843
msgid "``getSystemLogID()`` Return a unique identifier for the object for storage in the system log. This is likely to be the object's GUID"
msgstr ""

#: ../../design/loggable.rst:9
# 6dfcfd9cc25b451f930b73a5aa1bee15
msgid "``getClassName()`` Return the class name of the object"
msgstr ""

#: ../../design/loggable.rst:10
# 185d3d089f55493d82438867372f37c2
msgid "``getType()`` Return the object type"
msgstr ""

#: ../../design/loggable.rst:11
# 412ef31681414ba0b6dd0135015dd50b
msgid "``getSubtype()`` Get the object subtype"
msgstr ""

#: ../../design/loggable.rst:12
# 23c3165f4811457aa108f06ec0a5a1f4
msgid "``getObjectFromID($id)`` For a given ID, return the object associated with it"
msgstr ""

#: ../../design/loggable.rst:13
# a42795f4a74844839e851c6324aee15e
msgid "``getObjectOwnerGUID()`` Return the GUID of the owner of this object"
msgstr ""

#: ../../design/loggable.rst:16
# cdf95f60b1e1459e9c2b9c88f6bb3b5c
msgid "Database details"
msgstr ""

#: ../../design/loggable.rst:18
# a17fddfca0e14b8ca88b9900f04603f2
msgid "The default system log is stored in the ``system_log`` :doc:`database table <database>`. It contains the following fields:"
msgstr ""

#: ../../design/loggable.rst:20
# 6bb21def8b2e419b8270d9ace4e3fcd2
msgid "**id** - A unique numeric row ID"
msgstr ""

#: ../../design/loggable.rst:21
# 587120527fa949258ad630098b99888c
msgid "**object_id** - The GUID of the entity being acted upon"
msgstr ""

#: ../../design/loggable.rst:22
# 21c5822e5f25472b945bfe02b692df86
msgid "**object_class** - The class of the entity being acted upon (eg ElggObject)"
msgstr ""

#: ../../design/loggable.rst:23
# 8fcbd5c13aae4ab88dfa28f771198bc1
msgid "**object_type** - The type of the entity being acted upon (eg object)"
msgstr ""

#: ../../design/loggable.rst:24
# e121be0f063240c4a3a7428f32d984f3
msgid "**object_subtype** - The subtype of the entity being acted upon (eg blog)"
msgstr ""

#: ../../design/loggable.rst:25
# 17e64257f5e94fca9cacc03d728e6b6b
msgid "**event** - The event being logged (eg create or update)"
msgstr ""

#: ../../design/loggable.rst:26
# 2e05f9d99de1448e81bb9f221fc05cbd
msgid "**performed_by_guid** - The GUID of the acting entity (the user performing the action)"
msgstr ""

#: ../../design/loggable.rst:27
# 4d6ead2b5b8a4d9eb383923f9b790dbd
msgid "**owner_guid** - The GUID of the user which owns the entity being acted upon"
msgstr ""

#: ../../design/loggable.rst:28
# 35fe9ad4a6334959b4d28db1f5f5667c
msgid "**access_id** - The access restriction associated with this log entry"
msgstr ""

#: ../../design/loggable.rst:29
# a2db64a1dd554313af129e955c12a5ff
msgid "**time_created** - The UNIX epoch timestamp of the time the event took place"
msgstr ""

#: ../../design/security.rst:2
# d293b6a780234476b8ee36154c8180cf
msgid "Security"
msgstr ""

#: ../../design/security.rst:4
# 9dc1ff2d72b74f8e972667c60e6ca1a8
msgid "Elgg’s approach to the various security issues common to all web applications."
msgstr ""

#: ../../design/security.rst:8
# 69f80b810fe84f91928199ee09c243c9
msgid "To report a potential vulnerability in Elgg, email security@elgg.org."
msgstr ""

#: ../../design/security.rst:15
# e7560051dc3d4cbaa436943be8b1b96a
msgid "Passwords"
msgstr ""

#: ../../design/security.rst:18
# ef8acfa85dba4874ba6b20a91694f4ac
msgid "Password validation"
msgstr ""

#: ../../design/security.rst:20
# 57d70c14ebce46b2ae3e484da58665ed
msgid "The only restriction that Elgg places on a password is that it must be at least 6 characters long by default, though this may be changed in /engine/settings.php. Additional criteria can be added by a plugin by registering for the ``registeruser:validate:password`` plugin hook."
msgstr ""

#: ../../design/security.rst:23
# a6139e3913d54e00af5ff6f80e769dab
msgid "Password salting"
msgstr ""

#: ../../design/security.rst:27
# 3be4d1d4cb3a4e9cb42fff18fe3c6a61
msgid "Elgg salts passwords with a unique 8 character random string. The salt is generated each time the password is set. The main security advantages of the salting are:"
msgstr ""

#: ../../design/security.rst:26
# ab6eb028842c479b8c9c7e89a81207b0
msgid "preventing anyone with access to the database from conducting a precomputed dictionary attack"
msgstr ""

#: ../../design/security.rst:27
# c5ba7e92002d47d79e5b797d87ab9560
msgid "preventing a site administration from noting users with the same password."
msgstr ""

#: ../../design/security.rst:30
# db18ec0904b94c64b162e86485257134
msgid "Password hashing"
msgstr ""

#: ../../design/security.rst:32
# 817798509ee8483fb9ab5301c5778cda
msgid "The hashed password is computed using md5 from the user's password text and the salt."
msgstr ""

#: ../../design/security.rst:35
# 5e4413299b2b4df5b1a9687945853532
msgid "Password storage"
msgstr ""

#: ../../design/security.rst:37
# ddd2d2ef543b40ac8e135c097f47912b
msgid "The hashed password and the salt are stored in the users table. Neither are stored in any cookies on a user's computer."
msgstr ""

#: ../../design/security.rst:40
# d668e7018dfd480891e4ad1f0f83204d
msgid "Password throttling"
msgstr ""

#: ../../design/security.rst:42
# b846759b34c342ea9cb5f1dd0a4aa36e
msgid "Elgg has a password throttling mechanism to make dictionary attacks from the outside very difficult. A user is only allowed 5 login attempts over a 5 minute period."
msgstr ""

#: ../../design/security.rst:45
# 65122fdbf4cf4fbe9229b8983b79c09c
msgid "Password resetting"
msgstr ""

#: ../../design/security.rst:47
# b8c0c604554443dd8bb00a3e94d31dfc
msgid "If a user forgets his password, a new random password can be requested. After the request, an email is sent with a unique URL. When the user visits that URL, a new random password is sent to the user through email."
msgstr ""

#: ../../design/security.rst:50
# cc6cd69c67c747e988b71ff268029743
msgid "Sessions"
msgstr ""

#: ../../design/security.rst:52
# f441fcd2ad134996ba4f98d699dee14f
msgid "Elgg uses PHP's session handling with custom handlers. Session data is stored in the database. The session cookie contains the session id that links the user to the browser. The user's metadata is stored in the session including GUID, username, email address. The session's lifetime is controlled through the server's PHP configuration."
msgstr ""

#: ../../design/security.rst:55
# 367d03c371d940ca9eaf5a2a662d1f1d
msgid "Session fixation"
msgstr ""

#: ../../design/security.rst:56
# d31c5a5c1f604ef68c557efe8f8c293d
msgid "Elgg protects against session fixation by regenerating the session id when a user logs in."
msgstr ""

#: ../../design/security.rst:59
# 89a529219d9a41b6bba297bc7121c509
msgid "Session hijacking"
msgstr ""

#: ../../design/security.rst:60
# b5ffc3feeb76424b82b586ca04c3c6d8
msgid "This section is questionable."
msgstr ""

#: ../../design/security.rst:62
# 76265b52d5624407a7e16d91569d1835
msgid "Besides protecting against session fixation attacks, Elgg also has a further check to try to defeat session hijacking if the session identifier is compromised. Elgg stores a hash of the browser's user agent and a site secret as a session fingerprint. The use of the site secret is rather superfluous but checking the user agent might prevent some session hijacking attempts."
msgstr ""

#: ../../design/security.rst:65
# fd2624a51aa044b88c2254906fd9ae8f
msgid "“Remember me” cookie"
msgstr ""

#: ../../design/security.rst:66
# 128ce9afa1004bd4b8a3f9536cd8b3f3
msgid "To allow users to stay logged in for a longer period of time regardless of whether the browser has been closed, Elgg uses a cookie (called elggperm) that contains what could be considered a super session identifier. This identifier is stored in a cookies table. When a session is being initiated, Elgg checks for the presence of the elggperm cookie. If it exists and the session code in the cookie matches the code in the cookies table, the corresponding user is automatically logged in."
msgstr ""

#: ../../design/security.rst:69
# aaadfeec20624efba8d46f6901f449b9
msgid "Alternative authentication"
msgstr ""

#: ../../design/security.rst:71
# e35d144b78fa462898a66c92dd8f463b
msgid "This section is very hand-wavy"
msgstr ""

#: ../../design/security.rst:73
# 35579d1d55ab475e9645855c7f3db70e
msgid "To replace Elgg's default user authentication system, a plugin would have to replace the default action with its own through ``register_action()``. It would also have to register its own pam handler using ``register_pam_handler()``."
msgstr ""

#: ../../design/security.rst:75
# 2ae5115c007d4c4aba0ba1ccb5487bad
msgid "The ``pam_authenticate()`` function used to call the different modules has a bug related to the importance variable."
msgstr ""

#: ../../design/security.rst:79
# bdd88d2cfa294a979f4c06bd7c24e601
msgid "HTTPS"
msgstr ""

#: ../../design/security.rst:81
# c8d0f9610fa446b7a99ba0f9821dc8d7
msgid "You must enable SSL support on your server for any of these techniques to work."
msgstr ""

#: ../../design/security.rst:83
# c9c322fa5b7346b58018a999955adf27
msgid "To make the login form submit over https, turn on login-over-ssl from Elgg’s admin panel."
msgstr ""

#: ../../design/security.rst:85
# 664bd386ec0d4b05926ec672ed9d67f1
msgid "You can also serve your whole site over SSL by simply changing the site URL to include “https” instead of just “http.”"
msgstr ""

#: ../../design/security.rst:88
# 06993bfd8c014fe4970f8e8dbdc79547
msgid "XSS"
msgstr ""

#: ../../design/security.rst:90
# 8089f34c45034405baaf9de7dd2c11b4
msgid "Filtering is used in Elgg to make XSS attacks more difficult. The purpose of the filtering is to remove Javascript and other dangerous input from users."
msgstr ""

#: ../../design/security.rst:92
# 363bc0ad8bed4b6b8cfd2f16935d74ff
msgid "Filtering is performed through the function ``filter_tags()``. This function takes in a string and returns a filtered string. It triggers a ``validate, input`` plugin hook."
msgstr ""

#: ../../design/security.rst:94
# 4ebad4f9a31b4293b0aa330e9530b664
msgid "By default Elgg comes with the htmLawed filtering code as a plugin. Developers can drop in any additional or replacement filtering code as a plugin."
msgstr ""

#: ../../design/security.rst:96
# 1497708719424933ba914702ad16e614
msgid "The ``filter_tags()`` function is called on any user input as long as the input is obtained through a call to ``get_input()``. If for some reason a developer did not want to perform the default filtering on some user input, the ``get_input()`` function has a parameter for turning off filtering."
msgstr ""

#: ../../design/security.rst:99
# 410e9e823fca40788cbc56510f1c2e78
msgid "CSRF / XSRF"
msgstr ""

#: ../../design/security.rst:101
# 3e5f9f036739493a996f5264c5dc4608
msgid "Elgg generates security tokens to prevent `cross-site request forgery`_. These are embedded in all forms and state-modifying AJAX requests as long as the correct API is used. Read more in the :doc:`/guides/actions` developer guide."
msgstr ""

#: ../../design/security.rst:104
# ad78b85355674db69712600df1a6dc94
msgid "SQL Injection"
msgstr ""

#: ../../design/security.rst:106
# cff72032b3d34f85be8e81fd245a40d4
msgid "Elgg’s API sanitizes all input before issuing DB queries. Read more in the :doc:`/design/database` design doc."
msgstr ""

#: ../../design/security.rst:109
# 68aa4fa3d129439db77e4f70482681e8
msgid "Privacy"
msgstr ""

#: ../../design/security.rst:111
# d7b2705a73aa4d8f84b1e55b0d9f2101
msgid "Elgg uses an ACL system to control which users have access to various pieces of content. Read more in the :doc:`/design/database` design doc."
msgstr ""

