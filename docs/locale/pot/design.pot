# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Various
# This file is distributed under the same license as the Elgg package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Elgg master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-08-05 10:48+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../design/actions.rst:2
# 325ba9df9a2441dc81d6957db1567b53
msgid "Actions"
msgstr ""

#: ../../design/actions.rst:4
# 8fafa79040b34ee381ee2f02e96196ef
msgid "Actions are the primary way users interact with an Elgg site."
msgstr ""

#: ../../design/actions.rst:10
#: ../../design/amd.rst:8
#: ../../design/database.rst:11
#: ../../design/events.rst:9
# 7b9428324b844ee9ac8358628aaceae3
# ae23de33956a43d8881570653819b899
# 6f3e5c0b4944418d87d4c7ee7a9d8a04
# a394938906c74a5c9eb06948c5f65bf9
msgid "Overview"
msgstr ""

#: ../../design/actions.rst:12
# 05eeefbf037b44839890ba4f56c85a27
msgid "An action in Elgg is the code that runs to make changes to the database when a user does something. For example, logging in, posting a comment, and making a blog post are actions. The action script processes input, makes the appropriate modifications to the database, and provides feedback to the user about the action."
msgstr ""

#: ../../design/actions.rst:15
# 641ff393c003417e9581a27a9d104983
msgid "Action Handler"
msgstr ""

#: ../../design/actions.rst:17
# 6e5236d2bca0435b983bcd976d3a1247
msgid "Actions are registered during the boot process by calling ``elgg_register_action()``. All actions URLs start with ``action/`` and are served by Elgg's front end controller through the action service. This approach is different from traditional PHP applications that send information to a specific file. The action service performs :doc:`CSRF security checks </design/security>`, and calls the registered action script file, then optionally forwards the user to a new page. By using the action service instead of a single script file, Elgg automatically provides increased security and extensibility."
msgstr ""

#: ../../design/actions.rst:19
# 2cd83ae9011f42a5b902de1020d29f63
msgid "In Elgg 1.8 and before, actions were handled by an action handler script in ```engine/handlers/action_handler.php``. This required specific rewrite rules for URLs beginning with ``/action/``."
msgstr ""

#: ../../design/actions.rst:21
# cc9c03b08a5c4052a2d193f34fec0fe1
msgid "See :doc:`/guides/actions` for details on how to register and construct an action. To look at the core actions, check out the directory /actions."
msgstr ""

#: ../../design/amd.rst:2
# 0f9dd3b20ca14339846852fd0046d6a3
msgid "AMD"
msgstr ""

#: ../../design/amd.rst:10
# d6a109c23a9c449b99b88dddd408469d
msgid "There are two JavaScript system in Elgg: the deprecated 1.8 system, and the newer `AMD (Asynchronous Module Definition) <http://requirejs.org/docs/whyamd.html>`_ compatible system introduced in 1.9."
msgstr ""

#: ../../design/amd.rst:13
# 34e6148f02574232b817543308124db6
msgid "This discusses the benefits of using AMD in Elgg."
msgstr ""

#: ../../design/amd.rst:16
# c01a980cfe5a42679fa0b34406e9fa6d
msgid "Why AMD?"
msgstr ""

#: ../../design/amd.rst:18
# e20d42963d4940e190a83c77a1700d11
msgid "We have been working hard to make Elgg's JavaScript more maintainable and useful. We made some strides in 1.8 with the introduction of the \"``elgg``\" JavaScript object and library, but have quickly realized the approach we were taking was not scalable."
msgstr ""

#: ../../design/amd.rst:22
# 463bd05226694c0cb8a80550252b7c34
msgid "The size of `JS on the web is growing <http://httparchive.org/trends.php?s=All&minlabel=Feb+11+2011&maxlabel=Feb+1+2013#bytesJS&reqJS>`_ quickly, and JS in Elgg is growing too. We want Elgg to be able to offer a solution that makes JS development as productive and maintainable as possible going forward."
msgstr ""

#: ../../design/amd.rst:27
# 6bebf09ab2f640568c59289746d8f0d7
msgid "The `reasons to choose AMD <http://requirejs.org/docs/whyamd.html>`_ are plenteous and well-documented. Let's highlight just a few of the most relevant reasons as they relate to Elgg specifically."
msgstr ""

#: ../../design/amd.rst:32
# a93d4a15a13d40b2bcd8e3edfb89a93e
msgid "1. Simplified dependency management"
msgstr ""

#: ../../design/amd.rst:33
# ba5652d176ea49278ec65262d882018b
msgid "AMD modules load asynchronously and execute as soon as their dependencies are available, so this eliminates the need to specify \"priority\" and \"location\" when registering JS libs in Elgg. Also, you don't need to worry about explicitly loading a module's dependencies in PHP. The AMD loader (RequireJS in this case) takes care of all that hassle for you. It's also possible have `text dependencies <http://requirejs.org/docs/api.html#text>`_ with the RequireJS text plugin, so client-side templating should be a breeze."
msgstr ""

#: ../../design/amd.rst:41
# 9b8601f92d5f4fbfab04fc8c69819fd0
msgid "2. AMD works in all browsers. Today."
msgstr ""

#: ../../design/amd.rst:42
# c91d5a55960a43bbb5b6d30592d37b6d
msgid "Elgg developers are already writing lots of JavaScript. We know you want to write more. We cannot accept waiting 5-10 years for a native JS modules solution to be available in all browsers before we can organize our JavaScript in a maintainable way."
msgstr ""

#: ../../design/amd.rst:47
# 21d63e63250d4b6c9b08f7ab8a71b457
msgid "3. You do not need a build step to develop in AMD."
msgstr ""

#: ../../design/amd.rst:48
# b60753e5cad540d5bb31df0ac2faeb06
msgid "We like the edit-refresh cycle of web development. We wanted to make sure everyone developing in Elgg could continue experiencing that joy. Synchronous module formats like Closure or CommonJS just weren't an option for us. But even though AMD doesn't require a build step, *it is still very build-friendly*. Because of the ``define()`` wrapper, it's possible to concatenate multiple modules into a single file and ship them all at once in a production environment. [#]_"
msgstr ""

#: ../../design/amd.rst:54
# 4fb1df5ff86c4751a5c81ddbc9596d20
msgid "AMD is a battle-tested and well thought out module loading system for the web today. We're very thankful for the work that has gone into it, and are excited to offer it as the standard solution for JavaScript development in Elgg starting with Elgg 1.9."
msgstr ""

#: ../../design/amd.rst:58
# 046e80b23cbd4488b8d58ab74c52b0e6
msgid "This is not currently supported by Elgg core, but we'll be looking into it since reducing round-trips is critical for a good first-view experience, especially on mobile devices."
msgstr ""

#: ../../design/database.rst:2
# 604f937b51aa4ee7ba3857a93b7b5427
msgid "Database"
msgstr ""

#: ../../design/database.rst:4
# caa2c960d5d743da9bdb1a10877fc1f1
msgid "A thorough discussion of Elgg's data model design and motivation."
msgstr ""

#: ../../design/database.rst:0
#: ../../design/events.rst:0
#: ../../design/security.rst:0
# 9ee39da810194eb7bafcf5ae7f6e54ec
# ca31102b3058414b8b39ea4d215201c9
# 25e212d932d34e418b8fe7304ed578db
msgid "Contents"
msgstr ""

#: ../../design/database.rst:13
# 69b768e7adc743e2af2c9a6487ddb517
msgid "In Elgg, everything runs on a unified data model based on atomic units of data called entities."
msgstr ""

#: ../../design/database.rst:16
# 03662dde513a497a909cbeb3033caa1a
msgid "Plugins are discouraged from interacting directly with the database, which creates a more stable system and a better user experience becase content created by different plugins can be mixed together in consistent ways. With this approach, plugins are faster to develop, and are at the same time much more powerful."
msgstr ""

#: ../../design/database.rst:22
# 82128ad4e9ff468bb6898d6a1e3c1170
msgid "Every entity in the system inherits the ``ElggEntity`` class. This class controls access permissions, ownership"
msgstr ""

#: ../../design/database.rst:27
# 1fbedf28f70c4e1095e52634d2ae1df7
msgid "You can extend entities with extra information in two ways:"
msgstr ""

#: ../../design/database.rst:31
# 29bfcdcbfc794d82bd887c587eca38b2
msgid "``Metadata``: This is information describing the entity, usually"
msgstr ""

#: ../../design/database.rst:30
# 7816538171a34483906cd74c72b7c0d1
msgid "added by the author of the entity when the entity is created. For example, tags, an ISBN number, a file location, or source language is metadata."
msgstr ""

#: ../../design/database.rst:36
# 2f45fc245e4f49e6a63763d981f31291
msgid "``Annotations``: This is information about the entity, usually"
msgstr ""

#: ../../design/database.rst:34
# 3aabe44a33f346b287e9e3eb96bf15b0
msgid "added by a third party after the entity is created. For example, ratings, likes, and votes are annotations. (Comments were before 1.9.)"
msgstr ""

#: ../../design/database.rst:39
# ea5d6428de4546f284323b4bc6dce4e5
msgid "Datamodel"
msgstr ""

#: ../../design/database.rst:46
# d4ee5e247ed24dfd8ae662a70d7de569
msgid "The Elgg data model diagram"
msgstr ""

#: ../../design/database.rst:49
# 0547d7ba2ae5409b820456dc6214ae99
msgid "Entities"
msgstr ""

#: ../../design/database.rst:51
# ab5bb69fac114819b9f5e85511b7ffe9
msgid "ElggEntity is the base class for the Elgg data model."
msgstr ""

#: ../../design/database.rst:54
# 96994fee2c4045b6967d881204c43653
msgid "Users, Objects, Groups, Sites"
msgstr ""

#: ../../design/database.rst:56
# b482b30488744b8d9bba8e9ed9a5cc0a
msgid "``ElggEntity`` has four main specializations, which provide extra properties and methods to more easily handle different kinds of data."
msgstr ""

#: ../../design/database.rst:59
# f0fe819d038d4b1da0566c8b3d26f87e
msgid "``ElggObject``: content like blog posts, uploaded files and bookmarks ``ElggUser``: a system user ``ElggSite``: each Elgg site within an Elgg installation ``ElggGroup``: multi-user collaborative systems (called \"Communities\" in prior versions of Elgg)"
msgstr ""

#: ../../design/database.rst:65
# 6d2da099db584a7691294c656d337308
msgid "The benefit of such an approach is that, apart from modelling data with greater ease, a common set of functions is available to handle objects, regardless of their (sub)type."
msgstr ""

#: ../../design/database.rst:69
# bdd1439988df4a62907f28139f8de09b
msgid "Each of these have their own properties that they bring to the table: ElggObjects have a title and description, ElggUsers have a username and password, and so on. However, because they all inherit ElggEntity, they each have a number of core properties and behaviours in common."
msgstr ""

#: ../../design/database.rst:74
# b765a40e236d4ee0a3a9bdd1fd815934
msgid "A numeric Globally Unique IDentifier (See `GUIDs`_)."
msgstr ""

#: ../../design/database.rst:75
# 06a1e69af0a243189084cb2aef3159a7
msgid "Access permissions. (When a plugin requests data, it never gets to touch data that the current user doesn't have permission to see.)"
msgstr ""

#: ../../design/database.rst:77
# d00b46c55a34458ea785dc59b7ae26b0
msgid "An arbitrary subtype. For example, a blog post is an ElggObject with a subtype of \"blog\". Subtypes aren't predefined; they can be any unique way to describe a particular kind of entity. \"blog\", \"forum\", \"foo\", \"bar\", \"loafofbread\" and \"pyjamas\" are all valid subtypes."
msgstr ""

#: ../../design/database.rst:81
# ca7f00b5bb8a4c0393d923f3cfeaac3a
msgid "An owner."
msgstr ""

#: ../../design/database.rst:82
# 11e9d13e993449f497b4cf9b48cd35b3
msgid "The site that the entity belongs to."
msgstr ""

#: ../../design/database.rst:83
# afad4650060f4eaea7e2124152407785
msgid "A container, usually used to associate a group's content with the group."
msgstr ""

#: ../../design/database.rst:86
# 08ed1c3c72464f048757904d8eb0871b
msgid "GUIDs"
msgstr ""

#: ../../design/database.rst:88
# d22154fcf90c47e48ea4655070fc0d17
msgid "A GUID is an integer that uniquely identifies every entity in an Elgg installation (a Globally Unique IDentifier). It's assigned automatically when the entity is first saved and can never be changed."
msgstr ""

#: ../../design/database.rst:92
# 966d1b0a953945e6bb0fdbfc997f0cd8
msgid "Some Elgg API functions work with GUIDs instead of ``ElggEntity`` objects."
msgstr ""

#: ../../design/database.rst:95
# b0ffe38a7b8949f28324fb62b4d59eed
msgid "ElggObject"
msgstr ""

#: ../../design/database.rst:97
# a44d6c8f18604ea39e97ec61725c4394
msgid "The ``ElggObject`` entity type represents arbitrary content within an Elgg install; things like blog posts, uploaded files, etc."
msgstr ""

#: ../../design/database.rst:100
# 506fecb542e44dccb74d97f8f75ad108
msgid "Beyond the standard ElggEntity properties, ElggObjects also support:"
msgstr ""

#: ../../design/database.rst:102
# 73abe752c86e4075878e5540c359cac3
msgid "``title`` The title of the object (HTML escaped text)"
msgstr ""

#: ../../design/database.rst:103
# 69007c24104049399b78e348f5102d6f
msgid "``description`` A description of the object (HTML)"
msgstr ""

#: ../../design/database.rst:105
# 11adbd96f58247698e0fcc1198838986
msgid "Most other data about the object is generally stored via metadata."
msgstr ""

#: ../../design/database.rst:108
# 46bb79b251a1441892007c90fdbae82c
msgid "ElggUser"
msgstr ""

#: ../../design/database.rst:110
# 2b49eaf8af3947a2aac4a7b08400a282
msgid "The ``ElggUser`` entity type represents users within an Elgg install. These will be set to disabled until their accounts have been activated (unless they were created from within the admin panel)."
msgstr ""

#: ../../design/database.rst:114
# 2e8fb7c69f324bc3af3dbe7e2a257199
msgid "Beyond the standard ElggEntity properties, ElggUsers also support:"
msgstr ""

#: ../../design/database.rst:116
# 223755b2ddd04d94b8e5bd2bec916848
msgid "``name`` The user's plain text name. e.g. \"Hugh Jackman\""
msgstr ""

#: ../../design/database.rst:117
# 53f8b7922ea14a05b1f8a9e6f29a0ffe
msgid "``username`` Their login name. E.g. \"hjackman\""
msgstr ""

#: ../../design/database.rst:118
# ca8d72710f9447909cc499789bfe21e1
msgid "``password`` A hashed version of their password"
msgstr ""

#: ../../design/database.rst:119
# 813d4076a306407188d209e347fa15be
msgid "``salt`` The salt that their password has been hashed with"
msgstr ""

#: ../../design/database.rst:120
# d5d1c3cce7564be8adf13e6df984becc
msgid "``email`` Their email address"
msgstr ""

#: ../../design/database.rst:121
# 15b1b1d93b2a420b8da8db0740117752
msgid "``language`` Their default language code."
msgstr ""

#: ../../design/database.rst:122
# 5d76b268ae634406b7a7186fac23e12c
msgid "``code`` Their session code (moved to a separate table in 1.9)."
msgstr ""

#: ../../design/database.rst:123
# b714fc738e0e423d9bbce79b4037be0d
msgid "``last_action`` The UNIX timestamp of the last time they loaded a page"
msgstr ""

#: ../../design/database.rst:124
# b136352fb97f4f6184b3b5d40aadc254
msgid "``prev_last_action`` The previous value of ``last_action``"
msgstr ""

#: ../../design/database.rst:125
# 24d8158ab32640f3b97651ddd8ce947f
msgid "``last_login`` The UNIX timestamp of their last log in"
msgstr ""

#: ../../design/database.rst:126
# ae477a9b5e844d62b688822f6206ee28
msgid "``prev_last_login`` the previous value of ``last_login``"
msgstr ""

#: ../../design/database.rst:129
# 7fb3af0c35bb40e798ab6a909f420ad2
msgid "ElggSite"
msgstr ""

#: ../../design/database.rst:131
# 323047aae67f498b9b5ee33b09b7bf83
msgid "The ``ElggSite`` entity type represents sites within your Elgg install. Most installs will have only one."
msgstr ""

#: ../../design/database.rst:134
# 76a4a48cf76c40cd9340f808b89b87aa
msgid "Beyond the standard ElggEntity properties, ElggSites also support:"
msgstr ""

#: ../../design/database.rst:136
# 6a96dc9d29dd4997987002387ea9c4ab
msgid "``name`` The site name"
msgstr ""

#: ../../design/database.rst:137
# a45a7b498b1f4cb48f0d835ab790bc4a
msgid "``description`` A description of the site"
msgstr ""

#: ../../design/database.rst:138
# 153f6715af37498ea571c8a5f29f1153
msgid "``url`` The address of the site"
msgstr ""

#: ../../design/database.rst:141
# 168f3ccd55544a039ff931030fef8380
msgid "ElggGroup"
msgstr ""

#: ../../design/database.rst:143
# 2be7ad50b87f4e038d13aba759ef13d3
msgid "The ``ElggGroup`` entity type represents an association of Elgg users. Users can join, leave, and post content to groups."
msgstr ""

#: ../../design/database.rst:146
# f0aff31ca26d46d0914b575e1dd505b3
msgid "Beyond the standard ElggEntity properties, ElggGroups also support:"
msgstr ""

#: ../../design/database.rst:148
# 3e5523eb2c4d4803aa4fb2559a088561
msgid "``name`` The group's name (HTML escaped text)"
msgstr ""

#: ../../design/database.rst:149
# 06fa0a8b3eac4584bded319a84bc687d
msgid "``description`` A description of the group (HTML)"
msgstr ""

#: ../../design/database.rst:151
# 4674f14c52254bc480db3ca168c6b03b
msgid "``ElggGroup`` has addition methods to manage content and membership."
msgstr ""

#: ../../design/database.rst:154
# a5a62358c3fa47f2b7065d61f2ff9ae6
msgid "The Groups plugin"
msgstr ""

#: ../../design/database.rst:156
# 1c06a993e2084d989b74122fc369dfb2
msgid "Not to be confused with the entity type ``ElggGroup``, Elgg comes with a plugin called \"Groups\" that provides a default UI/UX for site users to interact with groups. Each group is given a discussion forum and a profile page linking users to content within the group."
msgstr ""

#: ../../design/database.rst:161
# 2a339145838d41009287faa71fa22999
msgid "You can alter the user experience via the traditional means of extending plugins or completely replace the Groups plugin with your own."
msgstr ""

#: ../../design/database.rst:164
# 3438851207f64190a446a7746dcf8bbf
msgid "Because ``ElggGroup`` can be subtyped like all other ElggEntities, you can have multiple types of groups running on the same site."
msgstr ""

#: ../../design/database.rst:168
# 98c5856ce2dd46ca832e4e2fe0878c4c
msgid "Writing a group-aware plugin"
msgstr ""

#: ../../design/database.rst:170
# 3f921ea4d4ea4142b163a9949b5d39d8
msgid "Plugin owners need not worry too much about writing group-aware functionality, but there are a few key points:"
msgstr ""

#: ../../design/database.rst:174
# 11ae876659b54510b694dd8d7d7534f9
msgid "Adding content"
msgstr ""

#: ../../design/database.rst:176
# 444a688d888947298b2c1a95206b2e95
msgid "By passing along the group as ``container_guid`` via a hidden input field, you can use a single form and action to add both user and group content."
msgstr ""

#: ../../design/database.rst:179
# 62a425d367b24bb5bc21f046b279486f
msgid "Use `can_write_to_container <http://reference.elgg.org/entities_8php.html#16a972909c7cb75f646cb707be001a6f>`_ to determine whether or not the current user has the right to add content to a group."
msgstr ""

#: ../../design/database.rst:184
# 364fd457780e47c488f167e39ba88f3c
msgid "Be aware that you will then need to pass the container GUID or username to the page responsible for posting and the accompanying value, so that this can then be stored in your form as a hidden input field, for easy passing to your actions. Within a \"create\" action, you'll need to take in this input field and save it as a property of your new element (defaulting to the current user's container):"
msgstr ""

#: ../../design/database.rst:212
# 7b2951024ed94f9381c0de77d0cece27
msgid "Usernames and page ownership"
msgstr ""

#: ../../design/database.rst:214
# 013818e1c90b4741b3058e4970367efc
msgid "Groups have a simulated username of the form *group:\\ GUID*, which you can get the value of by checking ``$group->username``. If you pass this username to a page on the URL line as part of the ``username`` variable (i.e., ``/yourpage?username=group:nnn``), Elgg will automatically register that group as being the owner of the page (unless overridden)."
msgstr ""

#: ../../design/database.rst:221
# b1bb3ee4e3bb4ba79662e76756563507
msgid "Juggling users and groups"
msgstr ""

#: ../../design/database.rst:223
# 3ce1aa1783b64959bfd167aa473e55a3
msgid "In fact, ``[[Engine/DataModel/Entities/ElggGroup|ElggGroup]]`` simulates most of the methods of ``[[Engine/DataModel/Entities/ElggUser|ElggUser]]``. You can grab the icon, name etc using the same calls, and if you ask for a group's friends, you'll get its members. This has been designed specifically for you to alternate between groups and users in your code easily."
msgstr ""

#: ../../design/database.rst:231
# 7d5dd4a21ab045c488c0a8ed158b33cc
msgid "Menu options"
msgstr ""

#: ../../design/database.rst:233
# a336869d945d43338e34ee31e6f411d3
msgid "***This section is deprecated as of Elgg 1.8***"
msgstr ""

#: ../../design/database.rst:235
# aeddbe2b1c8c40ea87d58458ac2165f0
msgid "The final piece of the puzzle, for default groups, is to add a link to your functionality from the group's profile. Here we'll use the file plugin as an example."
msgstr ""

#: ../../design/database.rst:239
# 7af1fe496cd9417fa712600d0bfa159d
msgid "This involves creating a view within your plugin - in this case file/menu - which will extend the group's menu. File/menu consists of a link within paragraph tags that points to the file repository of the page\\_owner():"
msgstr ""

#: ../../design/database.rst:252
# 18ba59c8e9a44b77b1b2cc6ed03b0a59
msgid "You can then extend the group's menu view with this one, within your plugin's input function (in this case file\\_init):"
msgstr ""

#: ../../design/database.rst:260
# 1571ff4ec41647bd9e105144e70a7581
msgid "Ownership"
msgstr ""

#: ../../design/database.rst:262
# 5264aabe01414f8d8ad1be4acdff3a12
msgid "Entities have a ``owner_guid`` GUID property, which defines its owner. Typically this refers to the GUID of a user, although sites and users themselves often have no owner (a value of 0)."
msgstr ""

#: ../../design/database.rst:266
# 39ce20b380f74706b64b05edcbdc840e
msgid "The ownership of an entity dictates, in part, whether or not you can access or edit that entity."
msgstr ""

#: ../../design/database.rst:270
# 5a7260829d7f420fb99c480776fcfdee
msgid "Containers"
msgstr ""

#: ../../design/database.rst:272
# 7e78202f96ab49f898d0c3275add20d6
msgid "In order to easily search content by group or by user, content is generally set to be \"contained\" by either the user who posted it, or the group to which the user posted. This means the new object's ``container_guid`` property will be set to the GUID of the current ElggUser or the target ElggGroup."
msgstr ""

#: ../../design/database.rst:277
# e9a4f28436b742668ec6d2875004262e
msgid "E.g., three blog posts may be owned by different authors, but all be contained by the group they were posted to."
msgstr ""

#: ../../design/database.rst:280
# e838a6dd3c4a4439b6cf297b278b1ea7
msgid "Note: This is not always true. Comment entities are contained by the object commented upon, and in some 3rd party plugins the container may be used to model a parent-child relationship between entities (e.g. a \"folder\" object containing a file object)."
msgstr ""

#: ../../design/database.rst:286
# b84480c4533647e685423391f1ae0dfd
msgid "Annotations"
msgstr ""

#: ../../design/database.rst:288
# 003e7523ebd742cb85b7c4ed10be1320
msgid "Annotations are pieces of data attached to an entity that allow users to leave ratings, or other relevant feedback. A poll plugin might register votes as annotations. Before Elgg 1.9, comments and group discussion replies were stored as annotations."
msgstr ""

#: ../../design/database.rst:293
# aebb82812dbd46eda937e9011978cc24
msgid "Annotations are stored as instances of the ``ElggAnnotation`` class."
msgstr ""

#: ../../design/database.rst:295
# ee0c86cfe553494381c564e922eac370
msgid "Each annotation has:"
msgstr ""

#: ../../design/database.rst:297
# 679cac89643543bb8206c739105e1ec1
msgid "An internal annotation type (like *comment*)"
msgstr ""

#: ../../design/database.rst:298
# 0b5db49391cc4f509fd41e9ecffa9804
msgid "A value (which can be a string or integer)"
msgstr ""

#: ../../design/database.rst:299
# 0da28ee3d1b14890b2c7fcd4507bf5e8
msgid "An access permission distinct from the entity it's attached to"
msgstr ""

#: ../../design/database.rst:300
# e881f1a9b55847ca9e45bea4dee608d5
msgid "An owner"
msgstr ""

#: ../../design/database.rst:303
# 479d2e2e70b64df79a0c982a6921e2c1
msgid "Adding an annotation"
msgstr ""

#: ../../design/database.rst:305
# a0c9d54abde64578a7b02981d2343bbb
msgid "The easiest way to annotate is to use the ``annotate`` method on an entity, which is defined as:"
msgstr ""

#: ../../design/database.rst:318
# d7106338f1f54ee094431fa8082c6609
msgid "For example, to leave a rating on an entity, you might call:"
msgstr ""

#: ../../design/database.rst:325
# 91ca6af088ed47afab66cbb3c44187c8
msgid "Reading annotations"
msgstr ""

#: ../../design/database.rst:327
# de2854a36c974f3dbce3b96d5ae1a39e
msgid "To retrieve annotations on an object, you can call the following method:"
msgstr ""

#: ../../design/database.rst:338
# 48fb2b00e10049249ce53b688b7c29ef
msgid "If your annotation type largely deals with integer values, a couple of useful mathematical functions are provided:"
msgstr ""

#: ../../design/database.rst:349
# 52f74ad400744ac6bce70949720eeeb4
msgid "Useful helper functions"
msgstr ""

#: ../../design/database.rst:352
# 4757278be2334327b29916b16831f9f6
msgid "Comments"
msgstr ""

#: ../../design/database.rst:354
# 8a140d80498d4e51b4f1c9a96e92f50b
msgid "If you want to provide comment functionality on your plugin objects, the following function will provide the full listing, form and actions:"
msgstr ""

#: ../../design/database.rst:363
# 86abe65c93dd4f22ac88f5e712a54e67
msgid "Metadata"
msgstr ""

#: ../../design/database.rst:365
# 4e87bcb297424e969115a6214a741fce
msgid "Metadata in Elgg allows you to store extra data on an ``entity`` beyond the built-in fields that entity supports. For example, ``ElggObjects`` only support the basic entity fields plus title and description, but you might want to include tags or an ISBN number. Similarly, you might want users to be able to save a date of birth."
msgstr ""

#: ../../design/database.rst:371
# df3327e625b24878b903ee0fea070a27
msgid "Under the hood, metadata is stored as an instance of the ``ElggMetadata`` class, but you don't need to worry about that in practice (although if you're interested, see the ``ElggMetadata`` class reference). What you need to know is:"
msgstr ""

#: ../../design/database.rst:376
# 2eca7099fa69467cacfcb583decc3419
msgid "Metadata has an owner and access ID, both of which may be different to the owner of the entity it's attached to"
msgstr ""

#: ../../design/database.rst:378
# 9b6f6bad8f784b51961fd0dac56ba14d
msgid "You can potentially have multiple items of each type of metadata attached to a single entity"
msgstr ""

#: ../../design/database.rst:382
# 9ec7a2ab36634d9082d168ee6dfcf582
msgid "The simple case"
msgstr ""

#: ../../design/database.rst:385
#: ../../design/database.rst:454
# de7dba9c4ec64fa6bb80a9b404717784
# 0511fcaa96f54b0fa602abff65a4f906
msgid "Adding metadata"
msgstr ""

#: ../../design/database.rst:387
# 3d252352ba844d8f953f5620283bab51
msgid "To add a piece of metadata to an entity, just call:"
msgstr ""

#: ../../design/database.rst:393
# c068370d9dac455ebb89f8023a583dac
msgid "For example, to add a date of birth to a user:"
msgstr ""

#: ../../design/database.rst:399
# ccbfad78722548d598cd1f0bd7297d69
msgid "Or to add a couple of tags to an object:"
msgstr ""

#: ../../design/database.rst:405
# 37c130cae60541728f8176670db2c838
msgid "When adding metadata like this:"
msgstr ""

#: ../../design/database.rst:407
# 3cc9b2ff6e724be59244438c17237920
msgid "The owner is set to the currently logged-in user"
msgstr ""

#: ../../design/database.rst:408
# 66a6037382d64eda9e70d2e25757373d
msgid "Access permissions are inherited from the entity"
msgstr ""

#: ../../design/database.rst:409
# a88f6f2616fe438dbf00f3b43a2c8862
msgid "Reassigning a piece of metadata will overwrite the old value"
msgstr ""

#: ../../design/database.rst:411
# 4696a677d1dd471db068c263b2e57677
msgid "This is suitable for most purposes. Be careful to note which attributes are metadata and which are built in to the entity type that you are working with. You do not need to save an entity after adding or updating metadata. You do need to save an entity if you have changed one of its built in attributes. As an example, if you changed the access id of an ElggObject, you need to save it or the change isn't pushed to the database."
msgstr ""

#: ../../design/database.rst:420
#: ../../design/database.rst:496
# de7d7b3033e648f2b87ac2e41e76a92d
# 603232cc6f9241d5a671455ec881760f
msgid "Reading metadata"
msgstr ""

#: ../../design/database.rst:422
# d6f68289b2424bf9b15822b3f64909f1
msgid "To retrieve metadata, treat it as a property of the entity:"
msgstr ""

#: ../../design/database.rst:428
# 8b92a80eaa1e464e8df8893fe8e3415e
msgid "Note that this will return the absolute value of the metadata. To get metadata as an ElggMetadata object, you will need to use the methods described in the *finer control* section below."
msgstr ""

#: ../../design/database.rst:432
# a0374900e4cd46eaade29302df6346e8
msgid "If you stored multiple values in this piece of metadata (as in the \"tags\" example above), you will get an array of all those values back. If you stored only one value, you will get a string or integer back. Storing an array with only one value will return a string back to you. E.g."
msgstr ""

#: ../../design/database.rst:444
# 64ae9f4d5e8548da87de456ac4dc3ea7
msgid "To always get an array back, simply cast to an array;"
msgstr ""

#: ../../design/database.rst:451
# 864c2bded407437b958688e8f3e33341
msgid "Finer control"
msgstr ""

#: ../../design/database.rst:456
# e41ce4ae7b12461fa7b9a62d29a3a063
msgid "If you need more control, for example to assign an access ID other than the default, you can use the ``create_metadata`` function, which is defined as follows:"
msgstr ""

#: ../../design/database.rst:472
# 848e70b63d474418a3a9cc4fedb64117
msgid "For single values, you can therefore write metadata as follows (taking the example of a date of birth attached to a user):"
msgstr ""

#: ../../design/database.rst:479
# c6eb688ff2aa46a286f8d57bf111b052
msgid "For multiple values, you will need to iterate through and call ``create_metadata`` on each one. The following piece of code comes from the profile save action:"
msgstr ""

#: ../../design/database.rst:492
# cc8465a0c62c4b3b84aba6eac6823f7d
msgid "Note that the *allow multiple* setting is set to *false* in the first iteration and *true* thereafter."
msgstr ""

#: ../../design/database.rst:498
# dde987a0a5fd43bdb01a4c74345e52bb
msgid "``elgg_get_metadata`` is the best function for retrieving metadata as ElggMetadata objects:"
msgstr ""

#: ../../design/database.rst:501
# 82db659cd6c4439fb07ec2cf1dd091e7
msgid "E.g., to retrieve a user's DOB"
msgstr ""

#: ../../design/database.rst:510
# f64fb6b868ed458396d17d2cef86972e
msgid "Or to get all metadata objects:"
msgstr ""

#: ../../design/database.rst:522
# fabe9a9976d94655bdaf08fa09cab783
msgid "Common mistakes"
msgstr ""

#: ../../design/database.rst:525
# 688c2cbdfa0142d887a161956918930f
msgid "\"Appending\" metadata"
msgstr ""

#: ../../design/database.rst:527
# 587fcab30a5a4fae8baabce2478858d4
msgid "Note that you cannot \"append\" values to metadata arrays as if they were normal php arrays. For example, the following will not do what it looks like it should do."
msgstr ""

#: ../../design/database.rst:536
# 5639558eb7ac4d09923f4e038bf16f49
msgid "Trying to store hashmaps"
msgstr ""

#: ../../design/database.rst:538
# aa94b175ad0249a1855a103c01c25537
msgid "Elgg does not support storing ordered maps (name/value pairs) in metadata. For example, the following does not work as you might first expect it to:"
msgstr ""

#: ../../design/database.rst:547
# 5988a97e58b84f18b70135376eb72d69
msgid "You can instead store the information like so:"
msgstr ""

#: ../../design/database.rst:556
# e2418a5eec4f4d52bbeb10a7988cd704
msgid "Storing GUIDs in metadata"
msgstr ""

#: ../../design/database.rst:558
# 0c42f5e942a143b0b3bf12d60cf6779b
msgid "Though there are some cases to store entity GUIDs in metadata, `Relationships`_ are a much better construct for relating entities to each other."
msgstr ""

#: ../../design/database.rst:563
# b153a796f03249f5b9d603dbd25e8739
msgid "Relationships"
msgstr ""

#: ../../design/database.rst:565
# d11a373fa38145b59aec8f5e9b51007b
msgid "Relationships allow you to bind entities together. Examples: an artist has fans, a user is a member of an organization, etc."
msgstr ""

#: ../../design/database.rst:568
# 42db77190168417b9ff02f9261367a96
msgid "The class ``ElggRelationship`` models a directed relationship between two entities, making the statement:"
msgstr ""

#: ../../design/database.rst:571
# ce150104f031417f826c647a0c40c15c
msgid "\"**{subject}** is a **{noun}** of **{target}**.\""
msgstr ""

#: ../../design/database.rst:574
# 906204819c3544208fb0f49389681383
msgid "API name"
msgstr ""

#: ../../design/database.rst:574
# 5312cd2b2601429db90819e88fc4ee2c
msgid "Models"
msgstr ""

#: ../../design/database.rst:574
# 32a53efaa9f64be6a984e0a3fe6d20bd
msgid "Represents"
msgstr ""

#: ../../design/database.rst:576
# 6453c6c0736240219169ce2654ff5961
msgid "``guid_one``"
msgstr ""

#: ../../design/database.rst:576
# cb78be31a12a426eb64e6cf7e326d849
msgid "The subject"
msgstr ""

#: ../../design/database.rst:576
# 2951000c05dd404689b4499b5d9957c7
msgid "Which entity is being bound"
msgstr ""

#: ../../design/database.rst:577
# 6b4e1809ea9d41a2b5ac1676cfdda843
msgid "``relationship``"
msgstr ""

#: ../../design/database.rst:577
# ec61a599387c4ed3a37c37a6933c7823
msgid "The noun"
msgstr ""

#: ../../design/database.rst:577
# 406d14b1ee364da086f34a82f559b1c2
msgid "The type of relationship"
msgstr ""

#: ../../design/database.rst:578
# 27c5812551574616ac7f5aa05607d6d1
msgid "``guid_two``"
msgstr ""

#: ../../design/database.rst:578
# 0b71b8122d1c44f09b8e31adac100a6b
msgid "The target"
msgstr ""

#: ../../design/database.rst:578
# 3c8f920e23ab48f3ba27895c37d81198
msgid "The entity to which the subject is bound"
msgstr ""

#: ../../design/database.rst:581
# b3b3a893561c4b1294cbfe0e12613bb7
msgid "The type of relationship may alternately be a verb, making the statement:"
msgstr ""

#: ../../design/database.rst:583
# a5e6954c78e44dd0872d9aedc7896323
msgid "\"**{subject}** **{verb}** **{target}**.\""
msgstr ""

#: ../../design/database.rst:585
# c674c0969a7043beb9edaa1fde948c6f
msgid "E.g. User A \"likes\" blog post B"
msgstr ""

#: ../../design/database.rst:587
# 6421fc90ae6541d180e6d22b620ef9cb
msgid "**Each relationship has direction.** Imagine an archer shoots an arrow at a target; The arrow moves in one direction, binding the subject (the archer) to the target."
msgstr ""

#: ../../design/database.rst:591
# a940a83db05146ff9b658acd5a450ef6
msgid "**A relationship does not imply reciprocity**. **A** follows **B** does not imply that **B** follows **A**."
msgstr ""

#: ../../design/database.rst:594
# a18604d264c9483d930abec37b7e4d6d
msgid "**Relationships_ do not have access control.** They're never hidden from view and can be edited with code at any privilege level, with the caveat that *the entities* in a relationship may be invisible due to access control!"
msgstr ""

#: ../../design/database.rst:600
# de0dad075be444af8ec8b67d80bf2df7
msgid "Working with relationships"
msgstr ""

#: ../../design/database.rst:603
# c6d2449f253244b2b1aa9883d31938a6
msgid "Creating a relationship"
msgstr ""

#: ../../design/database.rst:605
# 86eb514a4e944981b325aaa98175b3f7
msgid "E.g. to establish that \"**$user** is a **fan** of **$artist**\" (user is the subject, artist is the target):"
msgstr ""

#: ../../design/database.rst:616
# f6bffa6ec4064db7afbb3c65ef43b4f5
msgid "This triggers the event [create, relationship], passing in the created ``ElggRelationship`` object. If a handler returns ``false``, the relationship will not be created and ``$success`` will be ``false``."
msgstr ""

#: ../../design/database.rst:622
# ed26f5c8e1b04e4595b09c3947a971c7
msgid "Verifying a relationship"
msgstr ""

#: ../../design/database.rst:624
# 70ea9b3eaf9e49fe961a19029c77e4a0
msgid "E.g. to verify that \"**$user** is a **fan** of **$artist**\":"
msgstr ""

#: ../../design/database.rst:632
# 3a3dc5cfd5a24c868844727462f1a0f1
msgid "Note that, if the relationship exists, ``check_entity_relationship()`` returns an ``ElggRelationship`` object:"
msgstr ""

#: ../../design/database.rst:643
# fa6f5f0b9f474a76b21afaf343b57641
msgid "Deleting a relationship"
msgstr ""

#: ../../design/database.rst:645
# e29d15589f224c73bce817e4bf487786
msgid "E.g. to be able to assert that \"**$user** is no longer a **fan** of **$artist**\":"
msgstr ""

#: ../../design/database.rst:651
# 0a5ea2063f754af0bbc9d1e719bc0601
msgid "This triggers the event [delete, relationship], passing in the associated ``ElggRelationship`` object. If a handler returns ``false``, the relationship will remain, and ``$was_removed`` will be ``false``."
msgstr ""

#: ../../design/database.rst:656
# 611da0f6f8e642119432e84c082d7da2
msgid "Other useful functions:"
msgstr ""

#: ../../design/database.rst:658
# e3e5a06700104e2a99391c2010738497
msgid "``delete_relationship()`` : delete by ID"
msgstr ""

#: ../../design/database.rst:659
# fc53cd63796b43ee8516bec6c0cfab12
msgid "``remove_entity_relationships()`` : delete those relating to an entity (*note:* in versions before Elgg 1.9, this did not trigger delete events)"
msgstr ""

#: ../../design/database.rst:662
# 07f41690e12343ada9199787869cbd67
msgid "Finding relationships and related entities"
msgstr ""

#: ../../design/database.rst:664
# d6ed46684ed0425589002dfdd3b154fe
msgid "Below are a few functions to fetch relationship objects and/or related entities. A few are listed below:"
msgstr ""

#: ../../design/database.rst:667
# ea733b8002214d41a00c96054e2bfb57
msgid "``get_entity_relationships()`` : fetch relationships by subject or target entity"
msgstr ""

#: ../../design/database.rst:668
# 37e68773fce84a4c86f2c372c642c0ba
msgid "``get_relationship()`` : get a relationship object by ID"
msgstr ""

#: ../../design/database.rst:669
# 3f6936d413fa4b29b37284d602033192
msgid "``elgg_get_entities_from_relationship()`` : fetch entities in relationships in a variety of ways"
msgstr ""

#: ../../design/database.rst:672
# ef6dc74f6bb74b62a2ba871e7d18841b
msgid "E.g. retrieving users who joined your site in January 2014."
msgstr ""

#: ../../design/database.rst:686
# c95e5db1f4ef4520a607991eb39f0daf
msgid "Access Control"
msgstr ""

#: ../../design/database.rst:688
# 22c70dbb29bf4da39f346c06772e2a0e
msgid "Granular access controls are one of the fundamental design principles in Elgg, and a feature that has been at the centre of the system throughout its development. The idea is simple: a user should have full control over who sees an item of data he or she creates."
msgstr ""

#: ../../design/database.rst:694
# 50fa3574da804014b770cc96b94a90bf
msgid "Access controls in the data model"
msgstr ""

#: ../../design/database.rst:696
# 877fd13fa5e74b33ad9e6c4a7edb2aa8
msgid "In order to achieve this, every entity, annotation and piece of metadata contains an ``access_id`` property, which in turn corresponds to one of the pre-defined access controls or an entry in the ``access_collections`` database table."
msgstr ""

#: ../../design/database.rst:702
# 83713d438c3743c287ab2aa4341ced13
msgid "Pre-defined access controls"
msgstr ""

#: ../../design/database.rst:704
# f6d88970155340dca0ac7363bc335d45
msgid "``ACCESS_PRIVATE`` (value: 0) Private."
msgstr ""

#: ../../design/database.rst:705
# eff47ffff95647e9a0a193e436767e8d
msgid "``ACCESS_LOGGED_IN`` (value: 1) Logged in users."
msgstr ""

#: ../../design/database.rst:706
# 22b7153b689b43efb5d8144afc97fbe4
msgid "``ACCESS_PUBLIC`` (value: 2) Public data."
msgstr ""

#: ../../design/database.rst:707
# b0dc1974e30a4daf8de4d5e35d9c4a67
msgid "``ACCESS_FRIENDS`` (value: -2) Owner and his/her friends."
msgstr ""

#: ../../design/database.rst:710
# ec7f9a769c334ddf8ee31317434e006f
msgid "User defined access controls"
msgstr ""

#: ../../design/database.rst:712
# 7b2b94a2060f416ea0ee38aa71e88506
msgid "You may define additional access groups and assign them to an entity, annotation or metadata. A number of functions have been defined to assist you; see the `access library reference`_ for more information."
msgstr ""

#: ../../design/database.rst:717
# 6225d1d97fa24bc1ab797df9d88752c5
msgid "How access affects data retrieval"
msgstr ""

#: ../../design/database.rst:719
# 8e6b9b699384497787ee70c5cead3dcb
msgid "All data retrieval functions above the database layer - for example ``get_entities`` and its cousins - will only return items that the current user has access to see. It is not possible to retrieve items that the current user does not have access to. This makes it very hard to create a security hole for retrieval."
msgstr ""

#: ../../design/database.rst:728
# 6fea601cda3246cdab4a14aadd4063c3
msgid "Write access"
msgstr ""

#: ../../design/database.rst:730
# e32f8b305b554c1d936411846159b23a
msgid "The following rules govern write access:"
msgstr ""

#: ../../design/database.rst:732
# 38f25eca62c048219dc8c8310b6982cf
msgid "The owner of an entity can always edit it"
msgstr ""

#: ../../design/database.rst:733
# 59bfdc969f73448fbc0a07b60b14300f
msgid "The owner of a container can edit anything therein (note that this does not mean that the owner of a group can edit anything therein)"
msgstr ""

#: ../../design/database.rst:735
# 388c8b06b8654e2f855ee829b5254d0f
msgid "Admins can edit anything"
msgstr ""

#: ../../design/database.rst:737
# 621f09823c46405893b95dd843084972
msgid "You can override this behaviour using a :ref:`plugin hook <design/events#plugin-hooks>` called ``permissions_check``, which passes the entity in question to any function that has announced it wants to be referenced. Returning ``true`` will allow write access; returning ``false`` will deny it. See :ref:`the plugin hook reference for permissions\\_check <guides/hooks-list#permission-hooks>` for more details."
msgstr ""

#: ../../design/database.rst:745
# 64ffed3dc77c4557a7b231ef81121263
msgid "`Access library reference`_"
msgstr ""

#: ../../design/database.rst:750
# 165ea98732804c3595d0d7b7925dd333
msgid "Schema"
msgstr ""

#: ../../design/database.rst:752
# 0b77afefba3144ee86438e2be8729713
msgid "The database contains a number of primary tables and secondary tables. Its schema table is stored in ``/engine/schema/mysql.sql``."
msgstr ""

#: ../../design/database.rst:755
# 3c03fb7815bd45b4b9ae40980a97ef45
msgid "Each table is prefixed by \"prefix\\_\", this is replaced by the Elgg framework during installation."
msgstr ""

#: ../../design/database.rst:759
# d75289c50dfc4e40979dd1241797acec
msgid "Main tables"
msgstr ""

#: ../../design/database.rst:761
# 5a31bc03e52b4c5c80a8c88093cd6b27
msgid "This is a description of the main tables. Keep in mind that in a given Elgg installation, the tables will have a prefix (typically \"elgg\\_\")."
msgstr ""

#: ../../design/database.rst:765
# 195f723860754fea999138c164bcad93
msgid "Table: entities"
msgstr ""

#: ../../design/database.rst:767
# 0eda7bb01b214edd98b4a41ad2997985
msgid "This is the main `Entities`_ table containing Elgg users, sites, objects and groups. When you first install Elgg this is automatically populated with your first site."
msgstr ""

#: ../../design/database.rst:771
# f5bc5a7e3d2c411da5a0dc5bfbee3c04
msgid "It contains the following fields:"
msgstr ""

#: ../../design/database.rst:773
# ace2742530f04c39920a820fa57c95c7
msgid "**guid** An auto-incrementing counter producing a GUID that uniquely identifies this entity in the system."
msgstr ""

#: ../../design/database.rst:775
# 135272bc0daa4e6c8a941a0af9a82c0d
msgid "**type** The type of entity - object, user, group or site"
msgstr ""

#: ../../design/database.rst:776
# 36c0f3a22d6b43d081c25769be412e31
msgid "**subtype** A link to the `entity_subtypes` table."
msgstr ""

#: ../../design/database.rst:777
# 68720b9924094be58fe4e01e34adab49
msgid "**owner\\_guid** The GUID of the owner's entity."
msgstr ""

#: ../../design/database.rst:778
# 5f5955465f214860a15890fd33109463
msgid "**site\\_guid** The site the entity belongs to."
msgstr ""

#: ../../design/database.rst:779
# fc5dfced16c44ba5bcd9ab5a25b9a33c
msgid "**container\\_guid** The GUID this entity is contained by - either a user or a group."
msgstr ""

#: ../../design/database.rst:781
# 6df7fd786bb04b84a2fcf9823335ad45
msgid "**access\\_id** Access controls on this entity."
msgstr ""

#: ../../design/database.rst:782
# fe979282549745099a1fd8f3c9eae584
msgid "**time\\_created** Unix timestamp of when the entity is created."
msgstr ""

#: ../../design/database.rst:783
# a403752591f8467fa459b37846235034
msgid "**time\\_updated** Unix timestamp of when the entity was updated."
msgstr ""

#: ../../design/database.rst:784
# 275a76d737b54cc59d05992f5598e0b3
msgid "**enabled** If this is 'yes' an entity is accessible, if 'no' the entity has been disabled (Elgg treats it as if it were deleted without actually removing it from the database)."
msgstr ""

#: ../../design/database.rst:789
# 2fef889203a4423ebc77642b519776cb
msgid "Table: entity\\_subtypes"
msgstr ""

#: ../../design/database.rst:791
# d18d78d337f049cd9df8dd6167212861
msgid "This table contains entity subtype information:"
msgstr ""

#: ../../design/database.rst:793
#: ../../design/database.rst:803
#: ../../design/database.rst:821
# 3af66e779e6f47adb44a9f5e67331625
# fdf5940b58544e1ba322498707cab484
# c0b260e1a1fa42a98d6761d2f41e23c5
msgid "**id** A counter."
msgstr ""

#: ../../design/database.rst:794
# e33e2c820cea4dd3b9ad8a2e247b2d34
msgid "**type** The type of entity - object, user, group or site."
msgstr ""

#: ../../design/database.rst:795
# 0bdc06f550034b8887937a32413b2a79
msgid "**subtype** The subtype name as a string."
msgstr ""

#: ../../design/database.rst:796
# d5fe546a40984db8985d0980e4bd62af
msgid "**class** Optional class name if this subtype is linked with a class"
msgstr ""

#: ../../design/database.rst:799
# 64c42e819e0b4d3a97d1ace8371ac8dd
msgid "Table: metadata"
msgstr ""

#: ../../design/database.rst:801
# a5241d276e6e49ed9d9111c3a321299f
msgid "This table contains `Metadata`_, extra information attached to an entity."
msgstr ""

#: ../../design/database.rst:804
#: ../../design/database.rst:822
# c85b280e4ae642e6ba47db66651dc7c8
# 41ee0e9844584f7c9c01efd484313188
msgid "**entity\\_guid** The entity this is attached to."
msgstr ""

#: ../../design/database.rst:805
# 6ba3a6d5b14549919283c9ad3c8d9b7f
msgid "**name\\_id** A link to the metastrings table defining the name table."
msgstr ""

#: ../../design/database.rst:807
#: ../../design/database.rst:825
# e9f272f0b40b4e23a1f7bc24b806350e
# 9d41fdae54c14c45a6e3b1ed7a313238
msgid "**value\\_id** A link to the metastrings table defining the value."
msgstr ""

#: ../../design/database.rst:808
#: ../../design/database.rst:826
# 8636eba1a28c487183ae72849aca1fa1
# 0ca3910dddde4b54983d57fa60dcb6b1
msgid "**value\\_type** The value class, either text or an integer."
msgstr ""

#: ../../design/database.rst:809
#: ../../design/database.rst:827
# 8bb03b1f87cd4c5d83495a1b7bdaa88d
# 10f82eaccf35453ab5ab647f544fb3fb
msgid "**owner\\_guid** The owner GUID of the owner who set this item of metadata."
msgstr ""

#: ../../design/database.rst:811
#: ../../design/database.rst:829
# 7cf87419823a440ba43446e396f971c4
# bce1612e6264409a822fc3697ae3f248
msgid "**access\\_id** An Access controls on this item of metadata."
msgstr ""

#: ../../design/database.rst:812
#: ../../design/database.rst:830
# b3f917b3310b4fbaa791f91cb591d8bc
# 45122f7dd30744248f3cdcfe75d3844f
msgid "**time\\_created** Unix timestamp of when the metadata is created."
msgstr ""

#: ../../design/database.rst:813
#: ../../design/database.rst:831
# 645550b0ddb1437899efe0427fe4c99e
# b350f1c9716441d8adb26182bb148eb5
msgid "**enabled** If this is 'yes' an item is accessible, if 'no' the item has been deleted."
msgstr ""

#: ../../design/database.rst:817
# 90d40be3108149d3b1feb390eca70dbb
msgid "Table: annotations"
msgstr ""

#: ../../design/database.rst:819
# f0bf0df8e9ed4d249c6bbd407207c0f8
msgid "This table contains `Annotations`_, this is distinct from `Metadata`_."
msgstr ""

#: ../../design/database.rst:823
# 67e5bbb9e1ac49838e167f6e4776cb95
msgid "**name\\_id** A link to the metastrings table defining the type of annotation."
msgstr ""

#: ../../design/database.rst:835
# 642a05f1867f4a30b3e327a842d2bb12
msgid "Table: relationships"
msgstr ""

#: ../../design/database.rst:837
# 9fa2325366c54642978910466420711e
msgid "This table defines `Relationships`_, these link one entity with another."
msgstr ""

#: ../../design/database.rst:839
# a8124a09a1074c059354da49aea99bde
msgid "**guid\\_one** The GUID of the subject entity."
msgstr ""

#: ../../design/database.rst:840
# eb6a27c62c794a0db3b55f234a23cf5c
msgid "**relationship** The type of the relationship."
msgstr ""

#: ../../design/database.rst:841
# ff46e5f3b90c4d5984c07b830e6c3a53
msgid "**guid\\_two** The GUID of the target entity."
msgstr ""

#: ../../design/database.rst:844
# 2185ebff92c34581838c1c94a20b5ba2
msgid "Table: objects\\_entity"
msgstr ""

#: ../../design/database.rst:846
# e5124d86b2004069913fb6d6dd52dfa8
msgid "Extra information specifically relating to objects. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:851
# 251b5b6314ae40e481eb8b02637e6192
msgid "Table: sites\\_entity"
msgstr ""

#: ../../design/database.rst:853
# 04421ca8cd5a493c84aaf17f5f77bcd2
msgid "Extra information specifically relating to sites. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:858
# 9a1dbafb476f4d338edeb23cdd243c8c
msgid "Table: users\\_entity"
msgstr ""

#: ../../design/database.rst:860
# ce0e66fdfe3d4e1386ed7d9b22e42854
msgid "Extra information specifically relating to users. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:865
# c3d2bdec4d724b808423e93291058449
msgid "Table: groups\\_entity"
msgstr ""

#: ../../design/database.rst:867
# 10a58dddafc64f9891b5d4dfbe547a63
msgid "Extra information specifically relating to groups. These are split in order to reduce load on the metadata table and make an obvious difference between attributes and metadata."
msgstr ""

#: ../../design/database.rst:872
# 1dffb1e29cd744d7aca9f77ae136da4d
msgid "Table: metastrings"
msgstr ""

#: ../../design/database.rst:874
# b0998fb488df4b2688e18be802670fd7
msgid "Metastrings contain the actual string of metadata which is linked to by the metadata and annotations tables."
msgstr ""

#: ../../design/database.rst:877
# 0d027af7b6664ef7a545134df082bece
msgid "This is to avoid duplicating strings, saving space and making database lookups more efficient."
msgstr ""

#: ../../design/events.rst:2
# ec21322304ff419998202d8eb73beb63
msgid "Events and Plugin Hooks"
msgstr ""

#: ../../design/events.rst:11
# bc13798679c343f4883117e47d6d899c
msgid "Elgg has an event system that can be used to replace or extend core functionality."
msgstr ""

#: ../../design/events.rst:14
# 8ef81c68166143bba4d94f5c992aca76
msgid "Plugins influence the system by creating handlers (`callables <http://php.net/manual/en/language.types.callable.php>`_ such as functions and methods) and registering them to handle two types of events: `Elgg Events`_ and `Plugin Hooks`_."
msgstr ""

#: ../../design/events.rst:18
# 1c3857a7e063483c8d374d1d63d76a58
msgid "When an event is triggered, a set of handlers is executed in order of priority. Each handler is passed arguments and has a chance to influence the process. After execution, the \"trigger\" function returns a value based on the behavior of the handlers."
msgstr ""

#: ../../design/events.rst:24
# f3200484e0944e45a614570f5025cf48
msgid "Elgg Events vs. Plugin Hooks"
msgstr ""

#: ../../design/events.rst:26
# 9dad14816c3c40faa74e1feef0b1b239
msgid "The main differences between `Elgg Events`_ and `Plugin Hooks`_ are:"
msgstr ""

#: ../../design/events.rst:28
# d905585478b54844bf65815bb49b7701
msgid "Most Elgg events can be cancelled; unless the event is an \"after\" event, a handler that returns `false` can cancel the event, and no more handlers are called."
msgstr ""

#: ../../design/events.rst:31
# 295123d33d3e4b379d92cbe50b12c789
msgid "Plugin hooks cannot be cancelled; all handlers are always called."
msgstr ""

#: ../../design/events.rst:32
# 026d21862e934a859c101b5ba6f87d54
msgid "Plugin hooks pass an arbitrary value through the handlers, giving each a chance to alter along the way."
msgstr ""

#: ../../design/events.rst:37
# 4af313abc17b4eb9a44849610665ef09
msgid "Elgg Events"
msgstr ""

#: ../../design/events.rst:39
# 415c547f69f643e5b5debdf240b8c9e0
msgid "Elgg Events are triggered when an Elgg object is created, updated, or deleted; and at important milestones while the Elgg framework is loading. Examples: a blog post being created or a user logging in."
msgstr ""

#: ../../design/events.rst:43
# 31d63526e56f4f51a0a1fd07909eb6cd
msgid "Unlike `Plugin Hooks`_, *most Elgg events can be cancelled*, halting the execution of the handlers, and possibly cancelling an some action in the Elgg core."
msgstr ""

#: ../../design/events.rst:47
# 86cbfbd177104958a39688f96bfd16af
msgid "Each Elgg event has a name and an object type (system, user, object, relationship name, annotation, group) describing the type of object passed to the handlers."
msgstr ""

#: ../../design/events.rst:52
# bb1ed9157bf148328de226e7064e7ba4
msgid "Before and After Events"
msgstr ""

#: ../../design/events.rst:54
# 0477879c9329411fb232cf3ecb79a576
msgid "Some events are split into \"before\" and \"after\". This avoids confusion around the state of the system while in flux. E.g. Is the user logged in during the [login, user] event?"
msgstr ""

#: ../../design/events.rst:58
# 4c8daa0ea88e4817b47f4e4c4214aabe
msgid "Before Events have names ending in \":before\" and are triggered before something happens. Like traditional events, handlers can cancel the event by returning ``false``."
msgstr ""

#: ../../design/events.rst:62
# 2d280b35bdde46e6b964f188b1c573a0
msgid "After Events, with names ending in \":after\", are triggered after something happens. Unlike traditional events, handlers *cannot* cancel these events; all handlers will always be called."
msgstr ""

#: ../../design/events.rst:66
# 5a86e6083790462c916f6a45bd480da5
msgid "Where before and after events are available, developers are encouraged to transition to them, though older events will be supported for backwards compatibility."
msgstr ""

#: ../../design/events.rst:71
# 31ce7fcdf4594470885e961417ff3eb9
msgid "Elgg Event Handlers"
msgstr ""

#: ../../design/events.rst:73
# ed36dc1037904b75975e57475a5bbf1f
msgid "Elgg event handlers should have the following prototype:"
msgstr ""

#: ../../design/events.rst:88
# e7be7cc32eb84509b003ad56d922b205
msgid "If the handler returns `false`, the event is cancelled, preventing execution of the other handlers. All other return values are ignored."
msgstr ""

#: ../../design/events.rst:92
# ad4e152527704fedb9b344682f733dd9
msgid "Register to handle an Elgg Event"
msgstr ""

#: ../../design/events.rst:94
# 209b4f9856e245d49996b6f7b980e203
msgid "Register your handler to an event using ``elgg_register_event_handler``:"
msgstr ""

#: ../../design/events.rst:100
#: ../../design/events.rst:147
#: ../../design/events.rst:202
#: ../../design/events.rst:230
# 39281f27e7514aac92850da4c79c2b65
# 14373315246443fdb3734e872645dc74
# f61a1741ca6943d7ac7027eab4c074ef
# 4b196e1c60eb4e9f823a079be3bc1702
msgid "Parameters:"
msgstr ""

#: ../../design/events.rst:102
#: ../../design/events.rst:149
# 80dc3771ac27499a9cdd5b8ad960eee0
# cbcdee8ebd61420cbc7e668fc2c63fc8
msgid "**$event** The event name."
msgstr ""

#: ../../design/events.rst:103
# 26022fdca79340729c6f6af075527b9b
msgid "**$object_type** The object type (e.g. \"user\" or \"object\") or 'all' for all types on which the event is fired."
msgstr ""

#: ../../design/events.rst:105
#: ../../design/events.rst:206
# 3bef544a20694dd4bf1da81cc20d7f52
# 6d2ce5b47c8b4633b7e55b50fa737ea9
msgid "**$handler** The callback of the handler function."
msgstr ""

#: ../../design/events.rst:106
#: ../../design/events.rst:207
# 57d6132101544778a3d527efa864498e
# 0f1d10e119c64c0d853e6ecf32a7d306
msgid "**$priority** The priority - 0 is first and the default is 500."
msgstr ""

#: ../../design/events.rst:108
# 73052ac0598e461a920911e7b582ac01
msgid "**Object** here does not refer to an ``ElggObject`` but rather a string describing any object in the framework: system, user, object, relationship, annotation, group."
msgstr ""

#: ../../design/events.rst:111
#: ../../design/events.rst:212
# 2bdb405cdee84e258664d5c6ff54cb06
# 34f2637298234b459d68b69ae8e9c31a
msgid "Example:"
msgstr ""

#: ../../design/events.rst:121
# bd5707b51515484ba18d31667ad484bf
msgid "Trigger an Elgg Event"
msgstr ""

#: ../../design/events.rst:123
# b6d939ae189f49d59885da3f4888ea28
msgid "You can trigger a custom Elgg event using ``elgg_trigger_event``:"
msgstr ""

#: ../../design/events.rst:133
# c6b3faaaa74b42f68ca5cc821cbf735e
msgid "For events with ambiguous states, like logging in a user, you should use `Before and After Events`_ by calling ``elgg_trigger_before_event`` or ``elgg_trigger_after_event``. This makes it clear for the event handler what state to expect and which events can be cancelled."
msgstr ""

#: ../../design/events.rst:150
# 00abe0a8ba2f451297bc53d3aea1fff3
msgid "**$object_type** The object type (e.g. \"user\" or \"object\")."
msgstr ""

#: ../../design/events.rst:151
# e9f4f53c434e4fa695e1b38909528df3
msgid "**$object** The object (e.g. an instance of ``ElggUser`` or ``ElggGroup``)"
msgstr ""

#: ../../design/events.rst:153
# 0db6e98e2b864708b688436bd178c630
msgid "The function will return ``false`` if any of the selected handlers returned ``false`` and the event is stoppable, otherwise it will return ``true``."
msgstr ""

#: ../../design/events.rst:159
# d0b411093aaa4909a189cc6a923f7681
msgid "Plugin Hooks"
msgstr ""

#: ../../design/events.rst:161
# f108bfba9ca34e90bd095cc0e2031b42
msgid "Plugin Hooks provide a way for plugins to collaboratively determine or alter a value. For example, to decide whether a user has permission to edit an entity or to add additional configuration options to a plugin."
msgstr ""

#: ../../design/events.rst:165
# e94c70d5b83d4e59b9ba612a79d91298
msgid "A plugin hook has a value passed into the trigger function, and each handler has an opportunity to alter the value before it's passed to the next handler. After the last handler has completed, the final value is returned by the trigger."
msgstr ""

#: ../../design/events.rst:171
# f26b779dd38342eb85f8c3aa600c8454
msgid "Plugin Hook Handlers"
msgstr ""

#: ../../design/events.rst:173
# f97c025657654bffab8b3d74c7f7e95c
msgid "Plugin hook handlers should have the following prototype:"
msgstr ""

#: ../../design/events.rst:189
# 66fb4c4ab2ef4ac9b4a9adfcb4325f27
msgid "If the handler returns no value (or `null` explicitly), the plugin hook value is not altered. Otherwise the return value becomes the new value of the plugin hook. It will then be passed to the next handler as `$value`."
msgstr ""

#: ../../design/events.rst:194
# 7ce1f6c5dbfb43adac35408519bc5b3f
msgid "Register to handle a Plugin Hook"
msgstr ""

#: ../../design/events.rst:196
# 309146a7a8c541c483cd86dcd61c1f94
msgid "Register your handler to a plugin hook using ``elgg_register_plugin_hook_handler``:"
msgstr ""

#: ../../design/events.rst:204
#: ../../design/events.rst:232
# ae48b8ca1b7a483db70357a25e9abbf1
# dc9308e0f8c84ee3aee4b84ce3c31981
msgid "**$hook** The name of the plugin hook."
msgstr ""

#: ../../design/events.rst:205
#: ../../design/events.rst:233
# 270973c5682345e083b601b4bdeeb5a5
# e26549df3bfb4626b91445a924b88b97
msgid "**$type** The type of the hook or 'all' for all types."
msgstr ""

#: ../../design/events.rst:209
# 1702c36888134e34834dd7e3d00f396f
msgid "**Type** can vary in meaning. It may mean an Elgg entity type or something specific to the plugin hook name."
msgstr ""

#: ../../design/events.rst:221
# 9a3f7f341a864f6aa46d3c1f40a0d19b
msgid "Trigger a Plugin Hook"
msgstr ""

#: ../../design/events.rst:223
# 2726b37ae5034899b77abf01c25b3671
msgid "You can trigger a custom plugin hook using ``elgg_trigger_plugin_hook``:"
msgstr ""

#: ../../design/events.rst:234
# 978b86cb930f4fa6b8ea7e689c46d8f6
msgid "**$params** Arbitrary data passed from the trigger to the handlers."
msgstr ""

#: ../../design/events.rst:235
# 0d5ce5b4e02841ec8b012a9b3fcf53ef
msgid "**$value** The initial value of the plugin hook."
msgstr ""

#: ../../design/events.rst:237
# 5ef71e2895194609af02d8bcfdd5befa
msgid "The `$params` and `$value` arguments are reversed between the plugin hook handlers and trigger functions!"
msgstr ""

#: ../../design/events.rst:241
# 74e44b796a444f899b5e9d1fd08aa9b0
msgid "Unregister Event/Hook Handlers"
msgstr ""

#: ../../design/events.rst:243
# 05091e15a6684578b752862b89378276
msgid "The functions ``elgg_unregister_event_handler`` and ``elgg_unregister_plugin_hook_handler`` can be used to remove handlers already registered by another plugin or Elgg core. The parameters are in the same order as the registration functions, except there's no priority parameter."
msgstr ""

#: ../../design/events.rst:251
# 83718b36b46d4c578a970c14495d8387
msgid "Anonymous functions or invokable objects cannot be unregistered, but dynamic method callbacks can be unregistered by giving the static version of the callback:"
msgstr ""

#: ../../design/events.rst:263
# 974942ebc2144fe4b6b74e871290e247
msgid "Even though the event handler references a dynamic method call, the code above will successfully remove the handler."
msgstr ""

#: ../../design/events.rst:267
# b176d734c8fb4c7bb5c2255bb29d57b5
msgid "Handler Calling Order"
msgstr ""

#: ../../design/events.rst:269
# 9d0c73f5a73e4300a247349990085dc4
msgid "Handlers are called first in order of priority, then registration order."
msgstr ""

#: ../../design/events.rst:273
# e6399cf3c27f4b019afcfc58669df331
msgid "Before Elgg 2.0, registering with the ``all`` keywords caused handlers to be called later, even if they were registered with lower priorities."
msgstr ""

#: ../../design/i18n.rst:2
# fc76bb5cccee48e2ac09ad68e8c2a408
msgid "Internationalization"
msgstr ""

#: ../../design/i18n.rst:4
# 67e65092988645c5b29de2720f2c6f7e
msgid "Elgg 1.0+ departs from previous versions in that it uses a custom text array rather than gettext. This improves system performance and reliability of the translation system."
msgstr ""

#: ../../design/i18n.rst:7
# e5c9c6533aea4bde8cd6b12d3dc6a68d
msgid "TODO: more plz"
msgstr ""

#: ../../design/index.rst:2
# 1fc0796680d6429180af62ddfb29b468
msgid "Design Docs"
msgstr ""

#: ../../design/index.rst:4
# b5c1bb8aa9bc43b0a2a36c89e2dcb733
msgid "Gain a deep understanding of how Elgg works and why it's built the way it is."
msgstr ""

#: ../../design/loggable.rst:2
# 5c38eca3edc44dccb6e9e4b7f0036a93
msgid "Loggable"
msgstr ""

#: ../../design/loggable.rst:4
# 2f770d3367dc43bea077368501765529
msgid "Loggable is an interface inherited by any class that wants events relating to its member objects to be saved to the system log. ``ElggEntity`` and ``ElggExtender`` both inherit ``Loggable``."
msgstr ""

#: ../../design/loggable.rst:6
# 34035d64cd5a444dbd74fce1726604fe
msgid "Loggable defines several class methods that are used in saving to the default system log, and can be used to define your own (as well as for other purposes):"
msgstr ""

#: ../../design/loggable.rst:8
# 2a269cccb8194670afd7b789cf9074ee
msgid "``getSystemLogID()`` Return a unique identifier for the object for storage in the system log. This is likely to be the object's GUID"
msgstr ""

#: ../../design/loggable.rst:9
# 2e772cddcc104cf7874b6c150d867988
msgid "``getClassName()`` Return the class name of the object"
msgstr ""

#: ../../design/loggable.rst:10
# d6ebb0e44e58443aa2b435cd42bfb69f
msgid "``getType()`` Return the object type"
msgstr ""

#: ../../design/loggable.rst:11
# 7c07a2e4bcc44c14bac139443e33393e
msgid "``getSubtype()`` Get the object subtype"
msgstr ""

#: ../../design/loggable.rst:12
# 3f92b379b15b4ab6afe1ce1385a9d429
msgid "``getObjectFromID($id)`` For a given ID, return the object associated with it"
msgstr ""

#: ../../design/loggable.rst:15
# 79449b9802db4b02a29a4c86f252e86f
msgid "Database details"
msgstr ""

#: ../../design/loggable.rst:17
# 01e3ee9d21a142e38b4a6b78274b959c
msgid "The default system log is stored in the ``system_log`` :doc:`database table <database>`. It contains the following fields:"
msgstr ""

#: ../../design/loggable.rst:19
# d72fb8174d0d4f3fb95cb675acefbbf4
msgid "**id** - A unique numeric row ID"
msgstr ""

#: ../../design/loggable.rst:20
# 5c0b4a6f227f4b3a891f3d4ccbb0b61e
msgid "**object_id** - The GUID of the entity being acted upon"
msgstr ""

#: ../../design/loggable.rst:21
# e300994052ff495989de730dd2eeb051
msgid "**object_class** - The class of the entity being acted upon (eg ElggObject)"
msgstr ""

#: ../../design/loggable.rst:22
# bdec51de58e5406e86db696f90fd653f
msgid "**object_type** - The type of the entity being acted upon (eg object)"
msgstr ""

#: ../../design/loggable.rst:23
# df69a1b751624ca187e2e00183bc4422
msgid "**object_subtype** - The subtype of the entity being acted upon (eg blog)"
msgstr ""

#: ../../design/loggable.rst:24
# 1736edb92622469b96b7bbd430637224
msgid "**event** - The event being logged (eg create or update)"
msgstr ""

#: ../../design/loggable.rst:25
# 9b3d2ee98c0c460a995a3711d7240d7d
msgid "**performed_by_guid** - The GUID of the acting entity (the user performing the action)"
msgstr ""

#: ../../design/loggable.rst:26
# 041797f26556483f80287ab03b1aa151
msgid "**owner_guid** - The GUID of the user which owns the entity being acted upon"
msgstr ""

#: ../../design/loggable.rst:27
# 333d49a3a1a640979b44c13fcef60710
msgid "**access_id** - The access restriction associated with this log entry"
msgstr ""

#: ../../design/loggable.rst:28
# ad3e626bfe884362bf7bc4e23463ddab
msgid "**time_created** - The UNIX epoch timestamp of the time the event took place"
msgstr ""

#: ../../design/security.rst:2
# a8fd6e4c65f54a44b2fa1010f9a0c519
msgid "Security"
msgstr ""

#: ../../design/security.rst:4
# 0387d0164fe44211bf709f3570072915
msgid "Elgg’s approach to the various security issues common to all web applications."
msgstr ""

#: ../../design/security.rst:8
# 5142c2443c7e4d97bdbda6f140ead1f7
msgid "To report a potential vulnerability in Elgg, email security@elgg.org."
msgstr ""

#: ../../design/security.rst:15
# 7def805fcc8845ebbdcd849ea43145c3
msgid "Passwords"
msgstr ""

#: ../../design/security.rst:18
# c7576246b8834872bac57630b5c0e274
msgid "Password validation"
msgstr ""

#: ../../design/security.rst:20
# 09d73f49400347279b2aac1a4d9f9ce2
msgid "The only restriction that Elgg places on a password is that it must be at least 6 characters long by default, though this may be changed in /settings.php. Additional criteria can be added by a plugin by registering for the ``registeruser:validate:password`` plugin hook."
msgstr ""

#: ../../design/security.rst:23
# 27c112624d61473a90e9efc0e9b3dc29
msgid "Password salting"
msgstr ""

#: ../../design/security.rst:27
# 8f85fc0ba0ce40e996bf967e3209aa68
msgid "Elgg salts passwords with a unique 8 character random string. The salt is generated each time the password is set. The main security advantages of the salting are:"
msgstr ""

#: ../../design/security.rst:26
# 3a5c8122b255499a9723034afda481f8
msgid "preventing anyone with access to the database from conducting a precomputed dictionary attack"
msgstr ""

#: ../../design/security.rst:27
# b130bdac19b14e4eb073a70be41fbee0
msgid "preventing a site administration from noting users with the same password."
msgstr ""

#: ../../design/security.rst:30
# 036d0219257a437fb211583b1619126e
msgid "Password hashing"
msgstr ""

#: ../../design/security.rst:32
# 12c23a9689c54a968edfca61e3797e9b
msgid "The hashed password is computed using md5 from the user's password text and the salt."
msgstr ""

#: ../../design/security.rst:35
# fcf9a2ffdfd14293b4b6318ef20b3468
msgid "Password storage"
msgstr ""

#: ../../design/security.rst:37
# f3f80d208673407bbf98c6ca55f53453
msgid "The hashed password and the salt are stored in the users table. Neither are stored in any cookies on a user's computer."
msgstr ""

#: ../../design/security.rst:40
# 5cf07ec0c0d2452fa909b310af49e4df
msgid "Password throttling"
msgstr ""

#: ../../design/security.rst:42
# 302f6be2d53944a388c0c83405401eb1
msgid "Elgg has a password throttling mechanism to make dictionary attacks from the outside very difficult. A user is only allowed 5 login attempts over a 5 minute period."
msgstr ""

#: ../../design/security.rst:45
# 12fd0a48011745d4a715e9d411874ab2
msgid "Password resetting"
msgstr ""

#: ../../design/security.rst:47
# 3160ffb0185f45e6a510dd3030b1d72c
msgid "If a user forgets his password, a new random password can be requested. After the request, an email is sent with a unique URL. When the user visits that URL, a new random password is sent to the user through email."
msgstr ""

#: ../../design/security.rst:50
# c3443f9e06c641a9b78b09fe188afc5c
msgid "Sessions"
msgstr ""

#: ../../design/security.rst:52
# 15210dbace3847b98f4210299a165fa6
msgid "Elgg uses PHP's session handling with custom handlers. Session data is stored in the database. The session cookie contains the session id that links the user to the browser. The user's metadata is stored in the session including GUID, username, email address. The session's lifetime is controlled through the server's PHP configuration."
msgstr ""

#: ../../design/security.rst:55
# 6eff34bf21a2441bb9eb9fb99ffc3787
msgid "Session fixation"
msgstr ""

#: ../../design/security.rst:56
# 527f70c9c93f41358cd98dcc688b3b73
msgid "Elgg protects against session fixation by regenerating the session id when a user logs in."
msgstr ""

#: ../../design/security.rst:59
# 341b2bfdebce401f8cbf610f58ec831a
msgid "Session hijacking"
msgstr ""

#: ../../design/security.rst:60
# 3caff23c710a4c3385dfc731cd293257
msgid "This section is questionable."
msgstr ""

#: ../../design/security.rst:62
# 14b34b084da44a0aac882dc78e5dfaa0
msgid "Besides protecting against session fixation attacks, Elgg also has a further check to try to defeat session hijacking if the session identifier is compromised. Elgg stores a hash of the browser's user agent and a site secret as a session fingerprint. The use of the site secret is rather superfluous but checking the user agent might prevent some session hijacking attempts."
msgstr ""

#: ../../design/security.rst:65
# f76a14bba5d1426c99a4d36489485c13
msgid "“Remember me” cookie"
msgstr ""

#: ../../design/security.rst:66
# 2e938159a8fb46c68a8f95c4484c45e6
msgid "To allow users to stay logged in for a longer period of time regardless of whether the browser has been closed, Elgg uses a cookie (called elggperm) that contains what could be considered a super session identifier. This identifier is stored in a cookies table. When a session is being initiated, Elgg checks for the presence of the elggperm cookie. If it exists and the session code in the cookie matches the code in the cookies table, the corresponding user is automatically logged in."
msgstr ""

#: ../../design/security.rst:69
# af0894cc85e0457f8b11aacd77d51a0f
msgid "Alternative authentication"
msgstr ""

#: ../../design/security.rst:71
# 68f7980a53d046298316b771a33321b2
msgid "This section is very hand-wavy"
msgstr ""

#: ../../design/security.rst:73
# 724b1401ffb746d89370b0f2c772a978
msgid "To replace Elgg's default user authentication system, a plugin would have to replace the default action with its own through ``register_action()``. It would also have to register its own pam handler using ``register_pam_handler()``."
msgstr ""

#: ../../design/security.rst:75
# 97854ad38a5948aeaf7bd2cbd4364828
msgid "The ``pam_authenticate()`` function used to call the different modules has a bug related to the importance variable."
msgstr ""

#: ../../design/security.rst:79
# 0a48b9d1e7d246948ffd6bac45d555c4
msgid "HTTPS"
msgstr ""

#: ../../design/security.rst:81
# b1f394fa232846b7acad2907c779bf50
msgid "You must enable SSL support on your server for any of these techniques to work."
msgstr ""

#: ../../design/security.rst:83
# ca43bfab33b64c6a9ac15a54ca2ff900
msgid "To make the login form submit over https, turn on login-over-ssl from Elgg’s admin panel."
msgstr ""

#: ../../design/security.rst:85
# 634ccc7ce6d2496593afb0111a4e6aa3
msgid "You can also serve your whole site over SSL by simply changing the site URL to include “https” instead of just “http.”"
msgstr ""

#: ../../design/security.rst:88
# 232e8151183d406fbe9609422066fe73
msgid "XSS"
msgstr ""

#: ../../design/security.rst:90
# 9877bbeb3aa14e009d0a9412c1650414
msgid "Filtering is used in Elgg to make XSS attacks more difficult. The purpose of the filtering is to remove Javascript and other dangerous input from users."
msgstr ""

#: ../../design/security.rst:92
# 8566c15750c94b578781aa3110d22403
msgid "Filtering is performed through the function ``filter_tags()``. This function takes in a string and returns a filtered string. It triggers a ``validate, input`` plugin hook."
msgstr ""

#: ../../design/security.rst:94
# afd345e94cbf4913bff39a9169bbd383
msgid "By default Elgg comes with the htmLawed filtering code as a plugin. Developers can drop in any additional or replacement filtering code as a plugin."
msgstr ""

#: ../../design/security.rst:96
# e648368cfc754929809db674c1448f2d
msgid "The ``filter_tags()`` function is called on any user input as long as the input is obtained through a call to ``get_input()``. If for some reason a developer did not want to perform the default filtering on some user input, the ``get_input()`` function has a parameter for turning off filtering."
msgstr ""

#: ../../design/security.rst:99
# d711d5d99e614ba9afb889d946ef841b
msgid "CSRF / XSRF"
msgstr ""

#: ../../design/security.rst:101
# 52857a7551a444039225760f524f3de6
msgid "Elgg generates security tokens to prevent `cross-site request forgery`_. These are embedded in all forms and state-modifying AJAX requests as long as the correct API is used. Read more in the :doc:`/guides/actions` developer guide."
msgstr ""

#: ../../design/security.rst:104
# ddf76d0141d14c849d10938745287f04
msgid "SQL Injection"
msgstr ""

#: ../../design/security.rst:106
# 3db4fd1227be48a785a13e20af1a800d
msgid "Elgg’s API sanitizes all input before issuing DB queries. Read more in the :doc:`/design/database` design doc."
msgstr ""

#: ../../design/security.rst:109
# e51726149d384afab9b1c579cebc9085
msgid "Privacy"
msgstr ""

#: ../../design/security.rst:111
# 256adbcdf00144c2a585e3f2203cf23b
msgid "Elgg uses an ACL system to control which users have access to various pieces of content. Read more in the :doc:`/design/database` design doc."
msgstr ""

